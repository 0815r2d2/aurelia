{"version":3,"file":"index.system.js","sources":["../src/platform.ts","../src/reporter.ts","../src/di.ts","../src/resource.ts"],"sourcesContent":["import { ITimerHandler, IWindowOrWorkerGlobalScope } from './interfaces';\n\ndeclare var global: IWindowOrWorkerGlobalScope;\ndeclare var self: IWindowOrWorkerGlobalScope;\ndeclare var window: IWindowOrWorkerGlobalScope;\n\nconst $global: IWindowOrWorkerGlobalScope = (function(): IWindowOrWorkerGlobalScope {\n  // https://github.com/Microsoft/tslint-microsoft-contrib/issues/415\n  // tslint:disable:no-typeof-undefined\n  if (typeof global !== 'undefined') {\n    return global as unknown as IWindowOrWorkerGlobalScope;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  // tslint:enable:no-typeof-undefined\n  try {\n    // Not all environments allow eval and Function. Use only as a last resort:\n    // tslint:disable-next-line:no-function-constructor-with-string-args function-constructor\n    return new Function('return this')();\n  } catch {\n    // If all fails, give up and create an object.\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    return {} as IWindowOrWorkerGlobalScope;\n  }\n  // @ts-ignore 2683\n})();\n\n// performance.now polyfill for non-browser envs based on https://github.com/myrne/performance-now\nconst $now = (function(): () => number {\n  let getNanoSeconds: () => number;\n  let hrtime: (time?: [number, number]) => [number, number];\n  let loadTime: number;\n  let moduleLoadTime: number;\n  let nodeLoadTime: number;\n  let upTime: number;\n\n  if (($global.performance !== undefined && $global.performance !== null) && $global.performance.now) {\n    const $performance = $global.performance;\n    return function(): number {\n      return $performance.now();\n    };\n  } else if (($global.process !== undefined && $global.process !== null) && $global.process.hrtime) {\n    const now = function(): number {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = $global.process.hrtime;\n    getNanoSeconds = function(): number {\n      let hr: [number, number];\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = $global.process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n    return now;\n  } else if (Date.now) {\n    const now = function(): number {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n    return now;\n  } else {\n    const now = function(): number {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n    return now;\n  }\n})() as () => number;\n\n// RAF polyfill for non-browser envs from https://github.com/chrisdickinson/raf/blob/master/index.js\nconst $raf = (function(): (callback: (time: number) => void) => number {\n  const vendors = ['moz', 'webkit'];\n  const suffix = 'AnimationFrame';\n  let raf: (callback: (time: number) => void) => number = $global[`request${suffix}`];\n  let caf: (handle: number) => void = $global[`cancel${suffix}`] || $global[`cancelRequest${suffix}`];\n\n  for (let i = 0; !raf && i < vendors.length; ++i) {\n    raf = $global[`${vendors[i]}Request${suffix}`];\n    caf = $global[`${vendors[i]}Cancel${suffix}`] || $global[`${vendors[i]}CancelRequest${suffix}`];\n  }\n\n  // Some versions of FF have rAF but not cAF\n  if (!raf || !caf) {\n    let last = 0;\n    let id = 0;\n    const queue: { handle: number; cancelled: boolean; callback(time: number): void }[] = [];\n    const frameDuration = 1000 / 60;\n\n    raf = function(callback: (time: number) => void): number {\n      let _now: number;\n      let next: number;\n      if (queue.length === 0) {\n        _now = $now();\n        next = Math.max(0, frameDuration - (_now - last));\n        last = next + _now;\n        setTimeout(\n          function(): void {\n            const cp = queue.slice(0);\n            // Clear queue here to prevent callbacks from appending listeners to the current frame's queue\n            queue.length = 0;\n            for (let i = 0; i < cp.length; ++i) {\n              if (!cp[i].cancelled) {\n                try {\n                  cp[i].callback(last);\n                } catch (e) {\n                  setTimeout(function(): void { throw e; }, 0);\n                }\n              }\n            }\n          },\n          Math.round(next)\n        );\n      }\n      queue.push({\n        handle: ++id,\n        callback: callback,\n        cancelled: false\n      });\n      return id;\n    };\n\n    caf = function(handle: number): void {\n      for (let i = 0; i < queue.length; ++i) {\n        if (queue[i].handle === handle) {\n          queue[i].cancelled = true;\n        }\n      }\n    };\n  }\n\n  const $$raf = function(callback: (time: number) => void): number {\n    return raf.call($global, callback);\n  };\n  $$raf.cancel = function(): void {\n    caf.apply($global, arguments);\n  };\n  $global.requestAnimationFrame = raf;\n  $global.cancelAnimationFrame = caf;\n  return $$raf;\n})() as (callback: (time: number) => void) => number;\n\nconst camelCaseLookup: Record<string, string> = {};\nconst kebabCaseLookup: Record<string, string> = {};\n\nexport const PLATFORM = {\n  global: $global,\n  emptyArray: Object.freeze([]),\n  emptyObject: Object.freeze({}),\n  noop(): void { return; },\n  now: $now,\n\n  camelCase(input: string): string {\n    // benchmark: http://jsben.ch/qIz4Z\n    let value = camelCaseLookup[input];\n    if (value !== undefined) return value;\n    value = '';\n    let first = true;\n    let sep = false;\n    let char: string;\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      char = input.charAt(i);\n      if (char === '-' || char === '.' || char === '_') {\n        sep = true; // skip separators\n      } else {\n        value = value + (first ? char.toLowerCase() : (sep ? char.toUpperCase() : char));\n        sep = false;\n      }\n      first = false;\n    }\n    return camelCaseLookup[input] = value;\n  },\n\n  kebabCase(input: string): string {\n    // benchmark: http://jsben.ch/v7K9T\n    let value = kebabCaseLookup[input];\n    if (value !== undefined) return value;\n    value = '';\n    let first = true;\n    let char: string, lower: string;\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      char = input.charAt(i);\n      lower = char.toLowerCase();\n      value = value + (first ? lower : (char !== lower ? `-${lower}` : lower));\n      first = false;\n    }\n    return kebabCaseLookup[input] = value;\n  },\n\n  toArray<T = unknown>(input: ArrayLike<T>): T[] {\n    // benchmark: http://jsben.ch/xjsyF\n    const len = input.length;\n    const arr = Array(len);\n    for (let i = 0; i < len; ++i) {\n        arr[i] = input[i];\n    }\n    return arr;\n  },\n\n  requestAnimationFrame(callback: (time: number) => void): number {\n    return $raf(callback);\n  },\n\n  clearInterval(handle?: number): void {\n    return $global.clearInterval(handle);\n  },\n\n  clearTimeout(handle?: number): void {\n    return $global.clearTimeout(handle);\n  },\n\n    // tslint:disable-next-line:no-any\n  setInterval(handler: ITimerHandler, timeout?: number, ...args: any[]): number {\n    return $global.setInterval(handler, timeout, ...args);\n  },\n\n    // tslint:disable-next-line:no-any\n  setTimeout(handler: ITimerHandler, timeout?: number, ...args: any[]): number {\n    return $global.setTimeout(handler, timeout, ...args);\n  }\n};\n","\nexport interface ITraceInfo {\n  readonly name: string;\n  readonly depth: number;\n  params: ReadonlyArray<unknown> | null;\n  next: ITraceInfo | null;\n  prev: ITraceInfo | null;\n}\nexport interface ITraceWriter {\n  write(info: ITraceInfo): void;\n}\nexport const Reporter = {\n  write(code: number, ...params: unknown[]): void { return; },\n  error(code: number, ...params: unknown[]): Error { return new Error(`Code ${code}`); }\n};\nexport const Tracer = {\n  /**\n   * A convenience property for the user to conditionally call the tracer.\n   * This saves unnecessary `noop` and `slice` calls in non-AOT scenarios even if debugging is disabled.\n   * In AOT these calls will simply be removed entirely.\n   *\n   * This property **only** turns on tracing if `@aurelia/debug` is included and configured as well.\n   */\n  enabled: false,\n  liveLoggingEnabled: false,\n  liveWriter: null as ITraceWriter,\n  /**\n   * Call this at the start of a method/function.\n   * Each call to `enter` **must** have an accompanying call to `leave` for the tracer to work properly.\n   * @param name Any human-friendly name to identify the traced method with.\n   * @param args Pass in `Array.prototype.slice.call(arguments)` to also trace the parameters, or `null` if this is not needed (to save memory/cpu)\n   */\n  enter(name: string, args: unknown[] | null): void { return; },\n  /**\n   * Call this at the end of a method/function. Pops one trace item off the stack.\n   */\n  leave(): void { return; },\n  /**\n   * Writes only the trace info leading up to the current method call.\n   * @param writer An object to write the output to.\n   */\n  writeStack(writer: ITraceWriter): void { return; },\n  /**\n   * Writes all trace info captured since the previous flushAll operation.\n   * @param writer An object to write the output to. Can be null to simply reset the tracer state.\n   */\n  flushAll(writer: ITraceWriter | null): void { return; },\n  /**\n   * Writes out each trace info item as they are traced.\n   * @param writer An object to write the output to.\n   */\n  enableLiveLogging(writer: ITraceWriter): void { return; },\n  /**\n   * Stops writing out each trace info item as they are traced.\n   */\n  disableLiveLogging(): void { return; }\n};\n","/// <reference types=\"reflect-metadata\" />\nimport { Constructable, IIndexable, Injectable, Primitive } from './interfaces';\nimport { PLATFORM } from './platform';\nimport { Reporter, Tracer } from './reporter';\nimport { IResourceType } from './resource';\n\nconst slice = Array.prototype.slice;\n\nexport type ResolveCallback<T = any> = (handler?: IContainer, requestor?: IContainer, resolver?: IResolver) => T;\n\nexport type Key<T> = InterfaceSymbol<T> | Primitive | IIndexable | Function;\n\nexport type InterfaceSymbol<T> = (target: Injectable<T>, property: string, index: number) => any;\n\nexport interface IDefaultableInterfaceSymbol<T> extends InterfaceSymbol<T> {\n  withDefault(configure: (builder: IResolverBuilder<T>) => IResolver): InterfaceSymbol<T>;\n  noDefault(): InterfaceSymbol<T>;\n}\n\n// This interface exists only to break a circular type referencing issue in the IServiceLocator interface.\n// Otherwise IServiceLocator references IResolver, which references IContainer, which extends IServiceLocator.\ninterface IResolverLike<TValue, TContainer> {\n  resolve(handler: TContainer, requestor: TContainer): TValue;\n  getFactory?(container: TContainer): IFactory<TValue> | null;\n}\n\nexport interface IResolver<T = any> extends IResolverLike<T, IContainer> { }\n\nexport interface IRegistration<T = any> {\n  register(container: IContainer, key?: Key<T>): IResolver<T>;\n}\n\nexport interface IFactory<T = any> {\n  readonly Type: Function;\n  registerTransformer(transformer: (instance: T) => T): boolean;\n  construct(container: IContainer, dynamicDependencies?: Function[]): T;\n}\n\nexport interface IServiceLocator {\n  has(key: any, searchAncestors: boolean): boolean;\n\n  get<K>(key: Constructable | Key<unknown> | IResolver<unknown> | K):\n    K extends InterfaceSymbol<infer T> ? T :\n    K extends Constructable ? InstanceType<K> :\n    K extends IResolverLike<infer T1, unknown> ? T1 extends Constructable ? InstanceType<T1> : T1 :\n    K;\n\n  getAll<K>(key: Constructable | Key<unknown> | IResolver<unknown> | K):\n    K extends InterfaceSymbol<infer T> ? ReadonlyArray<T> :\n    K extends Constructable ? ReadonlyArray<InstanceType<K>> :\n    K extends IResolverLike<infer T1, unknown> ? T1 extends Constructable ? ReadonlyArray<InstanceType<T1>> : ReadonlyArray<T1> :\n    ReadonlyArray<K>;\n}\n\nexport interface IRegistry {\n  register(container: IContainer): void;\n}\n\nexport interface IContainer extends IServiceLocator {\n  register(...params: IRegistry[]): void;\n  register(...params: Record<string, Partial<IRegistry>>[]): void;\n  register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): void;\n  register(registry: Record<string, Partial<IRegistry>>): void;\n  register(registry: IRegistry): void;\n  register(registry: IRegistry | Record<string, Partial<IRegistry>>): void;\n\n  registerResolver<T>(key: Key<T>, resolver: IResolver<T>): IResolver<T>;\n  registerResolver<T extends Constructable>(key: T, resolver: IResolver<InstanceType<T>>): IResolver<InstanceType<T>>;\n\n  registerTransformer<T>(key: Key<T>, transformer: (instance: T) => T): boolean;\n  registerTransformer<T extends Constructable>(key: T, transformer: (instance: InstanceType<T>) => T): boolean;\n\n  getResolver<T>(key: Key<T>, autoRegister?: boolean): IResolver<T> | null;\n  getResolver<T extends Constructable>(key: T, autoRegister?: boolean): IResolver<InstanceType<T>> | null;\n\n  getFactory<T extends Constructable>(Type: T): IFactory<InstanceType<T>>;\n\n  createChild(): IContainer;\n}\n\nexport interface IResolverBuilder<T> {\n  instance(value: T & IIndexable): IResolver;\n  singleton(value: Constructable): IResolver;\n  transient(value: Constructable): IResolver;\n  callback(value: ResolveCallback<T>): IResolver;\n  aliasTo(destinationKey: Key<T>): IResolver;\n}\n\nexport type RegisterSelf<T extends Constructable> = {\n  register(container: IContainer): IResolver<InstanceType<T>>;\n};\n\n// Shims to augment the Reflect object with methods used from the Reflect Metadata API proposal:\n// https://www.typescriptlang.org/docs/handbook/decorators.html#metadata\n// https://rbuckton.github.io/reflect-metadata/\n// As the official spec proposal uses \"any\", we use it here as well and suppress related typedef linting warnings.\nif (!('getOwnMetadata' in Reflect)) {\n  // tslint:disable-next-line:no-any\n  Reflect.getOwnMetadata = function(metadataKey: any, target: Object): any {\n    return (target as IIndexable)[metadataKey];\n  };\n\n  // tslint:disable-next-line:no-any\n  Reflect.metadata = function(metadataKey: any, metadataValue: any): (target: Function) => void {\n    return function(target: Function): void {\n      (target as IIndexable)[metadataKey] = metadataValue;\n    };\n  };\n}\n\nexport const DI = {\n  createContainer(): IContainer {\n    return new Container();\n  },\n\n  getDesignParamTypes(target: Function): Function[] {\n    return Reflect.getOwnMetadata('design:paramtypes', target) || PLATFORM.emptyArray;\n  },\n\n  getDependencies(Type: Function | Injectable): Function[] {\n    let dependencies: Function[];\n\n    if ((Type as Injectable).inject === undefined) {\n      dependencies = DI.getDesignParamTypes(Type);\n    } else {\n      dependencies = [];\n      let ctor = Type as Injectable;\n\n      while (typeof ctor === 'function') {\n        if (ctor.hasOwnProperty('inject')) {\n          dependencies.push(...ctor.inject as Function[]);\n        }\n\n        ctor = Object.getPrototypeOf(ctor);\n      }\n    }\n\n    return dependencies;\n  },\n\n  createInterface<T = any>(friendlyName?: string): IDefaultableInterfaceSymbol<T> {\n    const Key: any = function(target: Injectable, property: string, index: number): any {\n      if (target === undefined) {\n        throw Reporter.error(16, Key); // TODO: add error (trying to resolve an InterfaceSymbol that has no registrations)\n      }\n      Key.friendlyName = friendlyName || 'Interface';\n      (target.inject || (target.inject = []))[index] = Key;\n      return target;\n    };\n\n    Key.noDefault = function(): InterfaceSymbol<T> {\n      return Key;\n    };\n\n    Key.withDefault = function(configure: (builder: IResolverBuilder<T>) => IResolver): InterfaceSymbol<T> {\n      Key.withDefault = function(): void {\n        throw Reporter.error(17, Key);\n      };\n\n      Key.register = function(container: IContainer, key?: Key<T>): IResolver<T> {\n        const trueKey = key || Key;\n        return configure({\n          instance(value: T): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.instance, value));\n          },\n          singleton(value: Function): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.singleton, value));\n          },\n          transient(value: Function): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.transient, value));\n          },\n          callback(value: ResolveCallback): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.callback, value));\n          },\n          aliasTo(destinationKey: T): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.alias, destinationKey));\n          },\n        });\n      };\n\n      return Key;\n    };\n\n    return Key;\n  },\n\n  inject(...dependencies: Function[]): (target: Injectable, key?: string, descriptor?: PropertyDescriptor | number) => void {\n    return function(target: Injectable, key?: string, descriptor?: PropertyDescriptor | number): void {\n      if (typeof descriptor === 'number') { // It's a parameter decorator.\n        if (!target.hasOwnProperty('inject')) {\n          const types = DI.getDesignParamTypes(target);\n          target.inject = types.slice();\n        }\n\n        if (dependencies.length === 1) {\n          (target.inject as Function[])[descriptor] = dependencies[0];\n        }\n      } else if (key) { // It's a property decorator. Not supported by the container without plugins.\n        const actualTarget = target.constructor as Injectable;\n        (actualTarget.inject || ((actualTarget.inject as unknown) = {}))[key] = dependencies[0];\n      } else if (descriptor) { // It's a function decorator (not a Class constructor)\n        const fn = descriptor.value;\n        fn.inject = dependencies;\n      } else { // It's a class decorator.\n        if (dependencies.length === 0) {\n          const types = DI.getDesignParamTypes(target);\n          target.inject = types.slice();\n        } else {\n          target.inject = dependencies;\n        }\n      }\n    };\n  },\n\n  // tslint:disable:jsdoc-format\n  /**\n   * Registers the `target` class as a transient dependency; each time the dependency is resolved\n   * a new instance will be created.\n   *\n   * @param target The class / constructor function to register as transient.\n   * @returns The same class, with a static `register` method that takes a container and returns the appropriate resolver.\n   *\n   * Example usage:\n```ts\n// On an existing class\nclass Foo { }\nDI.transient(Foo);\n\n// Inline declaration\nconst Foo = DI.transient(class { });\n// Foo is now strongly typed with register\nFoo.register(container);\n```\n   */\n  // tslint:enable:jsdoc-format\n  transient<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n    target.register = function register(container: IContainer): IResolver<InstanceType<T>> {\n      const registration = Registration.transient(target, target);\n      return registration.register(container, target);\n    };\n    return target as T & RegisterSelf<T>;\n  },\n\n  // tslint:disable:jsdoc-format\n  /**\n   * Registers the `target` class as a singleton dependency; the class will only be created once. Each\n   * consecutive time the dependency is resolved, the same instance will be returned.\n   *\n   * @param target The class / constructor function to register as a singleton.\n   * @returns The same class, with a static `register` method that takes a container and returns the appropriate resolver.\n   * Example usage:\n```ts\n// On an existing class\nclass Foo { }\nDI.singleton(Foo);\n\n// Inline declaration\nconst Foo = DI.singleton(class { });\n// Foo is now strongly typed with register\nFoo.register(container);\n```\n   */\n  // tslint:enable:jsdoc-format\n  singleton<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n    target.register = function register(container: IContainer): IResolver<InstanceType<T>> {\n      const registration = Registration.singleton(target, target);\n      return registration.register(container, target);\n    };\n    return target as T & RegisterSelf<T>;\n  }\n};\n\nexport const IContainer = DI.createInterface<IContainer>('IContainer').noDefault();\nexport const IServiceLocator = IContainer as InterfaceSymbol<IServiceLocator>;\n\nfunction createResolver(\n  getter: (key: any, handler: IContainer, requestor: IContainer) => any\n): (key: any) => ReturnType<typeof DI.inject> {\n  return function(key: any): ReturnType<typeof DI.inject> {\n    const Key = function Key(target: Injectable, property?: string, descriptor?: PropertyDescriptor | number): void {\n      DI.inject(Key)(target, property, descriptor);\n    };\n\n    (Key as any).resolve = function(handler: IContainer, requestor: IContainer): any {\n      return getter(key, handler, requestor);\n    };\n\n    return Key;\n  };\n}\n\nexport const inject = DI.inject;\n\nfunction transientDecorator<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n  return DI.transient(target);\n}\n// tslint:disable:jsdoc-format\n/**\n * Registers the decorated class as a transient dependency; each time the dependency is resolved\n * a new instance will be created.\n *\n * Example usage:\n```ts\n@transient\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function transient<T extends Constructable>(): typeof transientDecorator;\n// tslint:disable:jsdoc-format\n/**\n * Registers the `target` class as a transient dependency; each time the dependency is resolved\n * a new instance will be created.\n *\n * @param target The class / constructor function to register as transient.\n *\n * Example usage:\n```ts\n@transient()\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function transient<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T>;\nexport function transient<T extends Constructable>(target?: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> | typeof transientDecorator {\n  return target === undefined ? transientDecorator : transientDecorator(target);\n}\n\nfunction singletonDecorator<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n  return DI.singleton(target);\n}\n// tslint:disable:jsdoc-format\n/**\n * Registers the decorated class as a singleton dependency; the class will only be created once. Each\n * consecutive time the dependency is resolved, the same instance will be returned.\n *\n * Example usage:\n```ts\n@singleton\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function singleton<T extends Constructable>(): typeof singletonDecorator;\n// tslint:disable:jsdoc-format\n/**\n * Registers the `target` class as a singleton dependency; the class will only be created once. Each\n * consecutive time the dependency is resolved, the same instance will be returned.\n *\n * @param target The class / constructor function to register as a singleton.\n *\n * Example usage:\n```ts\n@singleton()\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function singleton<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T>;\nexport function singleton<T extends Constructable>(target?: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> | typeof singletonDecorator {\n  return target === undefined ? singletonDecorator : singletonDecorator(target);\n}\n\nexport const all = createResolver((key: any, handler: IContainer, requestor: IContainer) => requestor.getAll(key));\n\nexport const lazy = createResolver((key: any, handler: IContainer, requestor: IContainer) =>  {\n  let instance: any = null; // cache locally so that lazy always returns the same instance once resolved\n  return () => {\n    if (instance === null) {\n      instance = requestor.get(key);\n    }\n\n    return instance;\n  };\n});\n\nexport const optional = createResolver((key: any, handler: IContainer, requestor: IContainer) =>  {\n  if (requestor.has(key, true)) {\n    return requestor.get(key);\n  } else {\n    return null;\n  }\n});\n\n/** @internal */\nexport const enum ResolverStrategy {\n  instance = 0,\n  singleton = 1,\n  transient = 2,\n  callback = 3,\n  array = 4,\n  alias = 5\n}\n\n/** @internal */\nexport class Resolver implements IResolver, IRegistration {\n  public key: any;\n  public strategy: ResolverStrategy;\n  public state: any;\n  constructor(key: any, strategy: ResolverStrategy, state: any) {\n    this.key = key;\n    this.strategy = strategy;\n    this.state = state;\n  }\n\n  public register(container: IContainer, key?: any): IResolver {\n    return container.registerResolver(key || this.key, this);\n  }\n\n  public resolve(handler: IContainer, requestor: IContainer): any {\n    switch (this.strategy) {\n      case ResolverStrategy.instance:\n        return this.state;\n      case ResolverStrategy.singleton:\n      {\n        this.strategy = ResolverStrategy.instance;\n        const factory = handler.getFactory(this.state);\n        return this.state = factory.construct(handler);\n      }\n      case ResolverStrategy.transient:\n      {\n        // Always create transients from the requesting container\n        const factory = handler.getFactory(this.state);\n        return factory.construct(requestor);\n      }\n      case ResolverStrategy.callback:\n        return (this.state as ResolveCallback)(handler, requestor, this);\n      case ResolverStrategy.array:\n        return this.state[0].resolve(handler, requestor);\n      case ResolverStrategy.alias:\n        return handler.get(this.state);\n      default:\n        throw Reporter.error(6, this.strategy);\n    }\n  }\n\n  public getFactory(container: IContainer): IFactory | null {\n    switch (this.strategy) {\n      case ResolverStrategy.singleton:\n      case ResolverStrategy.transient:\n        return container.getFactory(this.state);\n      default:\n        return null;\n    }\n  }\n}\n\n/** @internal */\nexport interface IInvoker {\n  invoke(container: IContainer, fn: Function, dependencies: Function[]): any;\n  invokeWithDynamicDependencies(\n    container: IContainer,\n    fn: Function,\n    staticDependencies: Function[],\n    dynamicDependencies: Function[]\n  ): any;\n}\n\n/** @internal */\nexport class Factory implements IFactory {\n  public Type: Function;\n  private invoker: IInvoker;\n  private dependencies: Function[];\n  private transformers: ((instance: any) => any)[] | null;\n\n  constructor(Type: Function, invoker: IInvoker, dependencies: Function[]) {\n    this.Type = Type;\n    this.invoker = invoker;\n    this.dependencies = dependencies;\n    this.transformers = null;\n  }\n\n  public static create(Type: Function): IFactory {\n    const dependencies = DI.getDependencies(Type);\n    const invoker = classInvokers[dependencies.length] || fallbackInvoker;\n    return new Factory(Type, invoker, dependencies);\n  }\n\n  public construct(container: IContainer, dynamicDependencies?: Function[]): any {\n    if (Tracer.enabled) { Tracer.enter(`Factory.construct`, slice.call(arguments).concat(this.Type)); }\n    const transformers = this.transformers;\n    let instance = dynamicDependencies !== undefined\n      ? this.invoker.invokeWithDynamicDependencies(container, this.Type, this.dependencies, dynamicDependencies)\n      : this.invoker.invoke(container, this.Type, this.dependencies);\n\n    if (transformers === null) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return instance;\n    }\n\n    for (let i = 0, ii = transformers.length; i < ii; ++i) {\n      instance = transformers[i](instance);\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return instance;\n  }\n\n  public registerTransformer(transformer: (instance: any) => any): boolean {\n    if (this.transformers === null) {\n      this.transformers = [];\n    }\n\n    this.transformers.push(transformer);\n    return true;\n  }\n}\n\n/** @internal */\nexport interface IContainerConfiguration {\n  factories?: Map<Function, IFactory>;\n  resourceLookup?: Record<string, IResourceType<unknown, unknown>>;\n}\n\nconst containerResolver: IResolver = {\n  resolve(handler: IContainer, requestor: IContainer): IContainer {\n    return requestor;\n  }\n};\n\nfunction isRegistry(obj: IRegistry | Record<string, IRegistry>): obj is IRegistry {\n  return typeof obj.register === 'function';\n}\n\n/** @internal */\nexport class Container implements IContainer {\n  private parent: Container | null;\n  private resolvers: Map<any, IResolver>;\n  private factories: Map<Function, IFactory>;\n  private configuration: IContainerConfiguration;\n  private resourceLookup: Record<string, IResolver>;\n\n  constructor(configuration: IContainerConfiguration = {}) {\n    this.parent = null;\n    this.resolvers = new Map<any, IResolver>();\n    this.configuration = configuration;\n    this.factories = configuration.factories || (configuration.factories = new Map());\n    this.resourceLookup = configuration.resourceLookup || (configuration.resourceLookup = Object.create(null));\n    this.resolvers.set(IContainer, containerResolver);\n  }\n\n  public register(registry: (IRegistry | Record<string, Partial<IRegistry>>)): void;\n  public register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): void {\n    for (let i = 0, ii = params.length; i < ii; ++i) {\n      const current = params[i] as IRegistry | Record<string, IRegistry>;\n      if (isRegistry(current)) {\n        current.register(this);\n      } else {\n        const keys = Object.keys(current);\n        for (let j = 0, jj = keys.length; j < jj; ++j) {\n          const value = current[keys[j]];\n          // note: we could remove this if-branch and call this.register directly\n          // - the extra check is just a perf tweak to create fewer unnecessary arrays by the spread operator\n          if (isRegistry(value)) {\n            value.register(this);\n          } else {\n            this.register(value);\n          }\n        }\n      }\n    }\n  }\n\n  public registerResolver(key: any, resolver: IResolver): IResolver {\n    validateKey(key);\n\n    const resolvers = this.resolvers;\n    const result = resolvers.get(key);\n\n    if (result === undefined) {\n      resolvers.set(key, resolver);\n      if (typeof key === 'string') {\n        this.resourceLookup[key] = resolver;\n      }\n    } else if (result instanceof Resolver && result.strategy === ResolverStrategy.array) {\n      result.state.push(resolver);\n    } else {\n      resolvers.set(key, new Resolver(key, ResolverStrategy.array, [result, resolver]));\n    }\n\n    return resolver;\n  }\n\n  public registerTransformer(key: any, transformer: (instance: any) => any): boolean {\n    const resolver = this.getResolver(key);\n\n    if (resolver === null) {\n      return false;\n    }\n\n    if (resolver.getFactory) {\n      const handler = resolver.getFactory(this);\n\n      if (handler === null) {\n        return false;\n      }\n\n      return handler.registerTransformer(transformer);\n    }\n\n    return false;\n  }\n\n  public getResolver(key: any, autoRegister: boolean = true): IResolver | null {\n    validateKey(key);\n\n    if (key.resolve) {\n      return key;\n    }\n\n    let current: Container = this;\n\n    while (current !== null) {\n      const resolver = current.resolvers.get(key);\n\n      if (resolver === undefined) {\n        if (current.parent === null) {\n          return autoRegister ? this.jitRegister(key, current) : null;\n        }\n\n        current = current.parent;\n      } else {\n        return resolver;\n      }\n    }\n\n    return null;\n  }\n\n  public has(key: any, searchAncestors: boolean = false): boolean {\n    return this.resolvers.has(key)\n      ? true\n      : searchAncestors && this.parent !== null\n      ? this.parent.has(key, true)\n      : false;\n  }\n\n  public get(key: any): any {\n    if (Tracer.enabled) { Tracer.enter(`Container.get`, slice.call(arguments)); }\n    validateKey(key);\n\n    if (key.resolve) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return key.resolve(this, this);\n    }\n\n    let current: Container = this;\n\n    while (current !== null) {\n      let resolver = current.resolvers.get(key);\n\n      if (resolver === undefined) {\n        if (current.parent === null) {\n          resolver = this.jitRegister(key, current);\n          if (Tracer.enabled) { Tracer.leave(); }\n          return resolver.resolve(current, this);\n        }\n\n        current = current.parent;\n      } else {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return resolver.resolve(current, this);\n      }\n    }\n  }\n\n  public getAll(key: any): any {\n    validateKey(key);\n\n    let current: Container | null = this;\n\n    while (current !== null) {\n      const resolver = current.resolvers.get(key);\n\n      if (resolver === undefined) {\n        if (this.parent === null) {\n          return PLATFORM.emptyArray;\n        }\n\n        current = current.parent;\n      } else {\n        return buildAllResponse(resolver, current, this);\n      }\n    }\n\n    return PLATFORM.emptyArray;\n  }\n\n  public getFactory(Type: Function): IFactory {\n    let factory = this.factories.get(Type);\n\n    if (factory === undefined) {\n      factory = Factory.create(Type);\n      this.factories.set(Type, factory);\n    }\n\n    return factory;\n  }\n\n  public createChild(): IContainer {\n    const config = this.configuration;\n    const childConfig = { factories: config.factories, resourceLookup: { ...config.resourceLookup } };\n    const child = new Container(childConfig);\n    child.parent = this;\n    return child;\n  }\n\n  private jitRegister(keyAsValue: any, handler: Container): IResolver {\n    if (keyAsValue.register) {\n      const registrationResolver = keyAsValue.register(handler, keyAsValue);\n      if (!(registrationResolver && registrationResolver.resolve)) {\n        throw Reporter.error(40); // did not return a valid resolver from the static register method\n      }\n      return registrationResolver;\n    }\n\n    const resolver = new Resolver(keyAsValue, ResolverStrategy.singleton, keyAsValue);\n    handler.resolvers.set(keyAsValue, resolver);\n    return resolver;\n  }\n}\n\nexport const Registration = {\n  instance(key: any, value: any): IRegistration {\n    return new Resolver(key, ResolverStrategy.instance, value);\n  },\n\n  singleton(key: any, value: Function): IRegistration {\n    return new Resolver(key, ResolverStrategy.singleton, value);\n  },\n\n  transient(key: any, value: Function): IRegistration {\n    return new Resolver(key, ResolverStrategy.transient, value);\n  },\n\n  callback(key: any, callback: ResolveCallback): IRegistration {\n    return new Resolver(key, ResolverStrategy.callback, callback);\n  },\n\n  alias(originalKey: any, aliasKey: any): IRegistration {\n    return new Resolver(aliasKey, ResolverStrategy.alias, originalKey);\n  },\n\n  interpret(interpreterKey: any, ...rest: any[]): IRegistry {\n    return {\n      register(container: IContainer): void {\n        const resolver = container.getResolver<IRegistry>(interpreterKey);\n\n        if (resolver !== null) {\n          let registry: IRegistry | null =  null;\n\n          if (resolver.getFactory) {\n            const factory = resolver.getFactory(container);\n\n            if (factory !== null) {\n              registry = factory.construct(container, rest);\n            }\n          } else {\n            registry = resolver.resolve(container, container);\n          }\n\n          if (registry !== null) {\n            registry.register(container);\n          }\n        }\n      }\n    };\n  }\n};\n\n/** @internal */\nexport function validateKey(key: unknown): void {\n  // note: design:paramTypes which will default to Object if the param types cannot be statically analyzed by tsc\n  // this check is intended to properly report on that problem - under no circumstance should Object be a valid key anyway\n  if (key === null || key === undefined || key === Object) {\n    throw Reporter.error(5);\n  }\n}\n\nfunction buildAllResponse(resolver: IResolver, handler: IContainer, requestor: IContainer): any[] {\n  if (resolver instanceof Resolver && resolver.strategy === ResolverStrategy.array) {\n    const state = resolver.state;\n    let i = state.length;\n    const results = new Array(i);\n\n    while (i--) {\n      results[i] = state[i].resolve(handler, requestor);\n    }\n\n    return results;\n  }\n\n  return [resolver.resolve(handler, requestor)];\n}\n\n/** @internal */\nexport const classInvokers: IInvoker[] = [\n  {\n    invoke<T extends Constructable, K>(container: IContainer, Type: T): K {\n      return new Type();\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T extends Constructable, K>(container: IContainer, Type: T, deps: Function[]): K {\n      return new Type(container.get(deps[0]));\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T extends Constructable, K>(container: IContainer, Type: T, deps: Function[]): K {\n      return new Type(container.get(deps[0]), container.get(deps[1]));\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T extends Constructable, K>(container: IContainer, Type: T, deps: Function[]): K {\n      return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]));\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T extends Constructable, K>(container: IContainer, Type: T, deps: Function[]): K {\n      return new Type(\n        container.get(deps[0]),\n        container.get(deps[1]),\n        container.get(deps[2]),\n        container.get(deps[3])\n      );\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T extends Constructable, K>(container: IContainer, Type: T, deps: Function[]): K {\n      return new Type(\n        container.get(deps[0]),\n        container.get(deps[1]),\n        container.get(deps[2]),\n        container.get(deps[3]),\n        container.get(deps[4])\n      );\n    },\n    invokeWithDynamicDependencies\n  }\n];\n\n/** @internal */\nexport const fallbackInvoker: IInvoker = {\n  invoke: invokeWithDynamicDependencies as (container: IContainer, fn: Function, dependencies: Function[]) => any,\n  invokeWithDynamicDependencies\n};\n\n/** @internal */\nexport function invokeWithDynamicDependencies<T extends Constructable, K>(\n  container: IContainer,\n  Type: T,\n  staticDependencies: Function[],\n  dynamicDependencies: Function[]\n): K {\n  let i = staticDependencies.length;\n  let args: Function[] = new Array(i);\n  let lookup: Function;\n\n  while (i--) {\n    lookup = staticDependencies[i];\n\n    if (lookup === null || lookup === undefined) {\n      throw Reporter.error(7, `Index ${i}.`);\n    } else {\n      args[i] = container.get(lookup);\n    }\n  }\n\n  if (dynamicDependencies !== undefined) {\n    args = args.concat(dynamicDependencies);\n  }\n\n  return Reflect.construct(Type, args);\n}\n","import { IContainer, IRegistry, IResolver } from './di';\nimport { Class, Constructable, Immutable } from './interfaces';\n\nexport interface IResourceDefinition {\n  name: string;\n}\n\nexport interface IResourceKind<TDef, TProto, TClass extends Class<TProto, unknown> = Class<TProto>> {\n  readonly name: string;\n  keyFrom(name: string): string;\n  isType<T>(Type: T & Partial<IResourceType<TDef, TProto>>): Type is T & TClass & IResourceType<TDef, TProto>;\n\n  define<T extends Constructable>(name: string, ctor: T): T & TClass & IResourceType<TDef, TProto>;\n  define<T extends Constructable>(definition: TDef, ctor: T): T & TClass & IResourceType<TDef, TProto>;\n  define<T extends Constructable>(nameOrDefinition: string | TDef, ctor: T): T & TClass & IResourceType<TDef, TProto>;\n}\n\nexport type ResourceDescription<TDef> = Immutable<Required<TDef>>;\n\nexport type ResourcePartDescription<TDef> = Immutable<TDef>;\n\nexport interface IResourceType<TDef, TProto, TClass extends Class<TProto, unknown> = Class<TProto>> extends Class<TProto, unknown>, IRegistry {\n  readonly kind: IResourceKind<TDef, TProto, TClass>;\n  readonly description: ResourceDescription<TDef>;\n}\n\nexport interface IResourceDescriptions {\n  find<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): ResourceDescription<TDef> | null;\n  create<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): TProto | null;\n}\n\nexport class RuntimeCompilationResources implements IResourceDescriptions {\n  private context: IContainer;\n\n  constructor(context: IContainer) {\n    this.context = context;\n  }\n\n  public find<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): ResourceDescription<TDef> | null {\n    const key = kind.keyFrom(name);\n    const resourceLookup = (this.context as unknown as { resourceLookup: Record<string, IResolver> }).resourceLookup;\n    let resolver = resourceLookup[key];\n    if (resolver === undefined) {\n      resolver = resourceLookup[key] = this.context.getResolver(key, false);\n    }\n\n    if (resolver !== null && resolver.getFactory) {\n      const factory = resolver.getFactory(this.context);\n\n      if (factory !== null) {\n        const description = (factory.Type as IResourceType<TDef, TProto>).description;\n        return description === undefined ? null : description;\n      }\n    }\n\n    return null;\n  }\n\n  public create<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): TProto | null {\n    const key = kind.keyFrom(name);\n    const resourceLookup = (this.context as unknown as { resourceLookup: Record<string, IResolver> }).resourceLookup;\n    let resolver = resourceLookup[key];\n    if (resolver === undefined) {\n      resolver = resourceLookup[key] = this.context.getResolver(key, false);\n    }\n    if (resolver !== null) {\n      const instance = resolver.resolve(this.context, this.context);\n      return instance === undefined ? null : instance;\n    }\n    return null;\n  }\n}\n"],"names":[],"mappings":"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"}