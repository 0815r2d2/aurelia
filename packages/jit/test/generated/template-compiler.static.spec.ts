import { expect } from "chai";
import { DI } from "../../../kernel/src/index";
import { CustomElementResource, DOM, Aurelia } from "../../../runtime/src/index";
import { BasicConfiguration } from "../../src/index";

describe.only("template-compiler.generated", function template_compiler_generated() {
    function setup() {
        const container = DI.createContainer();
        container.register(BasicConfiguration);
        const au = new Aurelia(container);
        const host = DOM.createElement("div");
        return { au, host };
    }
    it("tag$01 text$01 _", function tag$01_text$01__() {
        const { au, host } = setup();
        const template = "<template><div>a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 variant$01 _", function tag$01_text$01_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">a</div><div else>b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 variant$02 _", function tag$01_text$01_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 variant$03 _", function tag$01_text$01_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">a</div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$01 _", function tag$01_text$01_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">a</div><div else>b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$02 _", function tag$01_text$01_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">a</div></div><div else><div repeat.for=\"i of 1\">b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$03 _", function tag$01_text$01_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">a</div><div else repeat.for=\"i of 1\">b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$04 _", function tag$01_text$01_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">a</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$05 _", function tag$01_text$01_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\" if.bind=\"true\">a<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$06 _", function tag$01_text$01_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">a</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$07 _", function tag$01_text$01_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$08 _", function tag$01_text$01_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">a</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$11 variant$09 _", function tag$01_text$01_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">a</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$01 _", function tag$01_text$01_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">a</div><div else>b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$02 _", function tag$01_text$01_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">a</div></div><div else><div repeat.for=\"i of 3\">b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$03 _", function tag$01_text$01_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">a</div><div else repeat.for=\"i of 3\">b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$04 _", function tag$01_text$01_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">a</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$05 _", function tag$01_text$01_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\" if.bind=\"true\">a<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$06 _", function tag$01_text$01_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">a</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$07 _", function tag$01_text$01_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$08 _", function tag$01_text$01_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">a</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$01 repeat$12 variant$09 _", function tag$01_text$01_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">a</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 variant$01 _", function tag$01_text$01_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\">a</div><div else>b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 variant$04 _", function tag$01_text$01_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else>b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$11 variant$01 _", function tag$01_text$01_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\">a</div><div else>b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$11 variant$02 _", function tag$01_text$01_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 1\">a</div></div><div else><div repeat.for=\"i of 1\">b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$11 variant$03 _", function tag$01_text$01_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 1\">a</div><div else repeat.for=\"i of 1\">b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$11 variant$08 _", function tag$01_text$01_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\"></div><div else>b</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$11 variant$09 _", function tag$01_text$01_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 1\">b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$11 variant$10 _", function tag$01_text$01_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 1\">b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$12 variant$01 _", function tag$01_text$01_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\">a</div><div else>b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$12 variant$02 _", function tag$01_text$01_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 3\">a</div></div><div else><div repeat.for=\"i of 3\">b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$12 variant$03 _", function tag$01_text$01_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 3\">a</div><div else repeat.for=\"i of 3\">b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$12 variant$08 _", function tag$01_text$01_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\"></div><div else>b</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$12 variant$09 _", function tag$01_text$01_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 3\">b</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$01 if$02 repeat$12 variant$10 _", function tag$01_text$01_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 3\">b</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 variant$01 _", function tag$01_text$02_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">a</div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 variant$02 _", function tag$01_text$02_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 variant$03 _", function tag$01_text$02_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">a</div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$01 _", function tag$01_text$02_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">a</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$02 _", function tag$01_text$02_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">a</div></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$03 _", function tag$01_text$02_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">a</div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$04 _", function tag$01_text$02_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">a</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$05 _", function tag$01_text$02_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\" if.bind=\"true\">a<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$06 _", function tag$01_text$02_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">a</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$07 _", function tag$01_text$02_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$08 _", function tag$01_text$02_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">a</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$11 variant$09 _", function tag$01_text$02_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">a</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$01 _", function tag$01_text$02_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">a</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$02 _", function tag$01_text$02_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">a</div></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$03 _", function tag$01_text$02_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">a</div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$04 _", function tag$01_text$02_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">a</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$05 _", function tag$01_text$02_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\" if.bind=\"true\">a<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$06 _", function tag$01_text$02_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">a</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$07 _", function tag$01_text$02_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">a</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$08 _", function tag$01_text$02_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">a</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$01 repeat$12 variant$09 _", function tag$01_text$02_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">a</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 variant$01 _", function tag$01_text$02_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\">a</div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 variant$04 _", function tag$01_text$02_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$11 variant$01 _", function tag$01_text$02_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\">a</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$11 variant$02 _", function tag$01_text$02_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 1\">a</div></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$11 variant$03 _", function tag$01_text$02_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 1\">a</div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$11 variant$08 _", function tag$01_text$02_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\"></div><div else>${notMsg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$11 variant$09 _", function tag$01_text$02_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$11 variant$10 _", function tag$01_text$02_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$12 variant$01 _", function tag$01_text$02_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\">a</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$12 variant$02 _", function tag$01_text$02_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 3\">a</div></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$12 variant$03 _", function tag$01_text$02_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 3\">a</div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$12 variant$08 _", function tag$01_text$02_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\"></div><div else>${notMsg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$12 variant$09 _", function tag$01_text$02_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$02 if$02 repeat$12 variant$10 _", function tag$01_text$02_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 _", function tag$01_text$03__() {
        const { au, host } = setup();
        const template = "<template><div>${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 variant$01 _", function tag$01_text$03_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">${msg}</div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 variant$02 _", function tag$01_text$03_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 variant$03 _", function tag$01_text$03_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">${msg}</div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$01 _", function tag$01_text$03_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$02 _", function tag$01_text$03_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">${msg}</div></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$03 _", function tag$01_text$03_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">${msg}</div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$04 _", function tag$01_text$03_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">${msg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$05 _", function tag$01_text$03_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\" if.bind=\"true\">${msg}<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$06 _", function tag$01_text$03_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">${msg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$07 _", function tag$01_text$03_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$08 _", function tag$01_text$03_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">${msg}</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$11 variant$09 _", function tag$01_text$03_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">${msg}</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$01 _", function tag$01_text$03_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$02 _", function tag$01_text$03_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">${msg}</div></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$03 _", function tag$01_text$03_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">${msg}</div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$04 _", function tag$01_text$03_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">${msg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$05 _", function tag$01_text$03_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\" if.bind=\"true\">${msg}<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$06 _", function tag$01_text$03_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">${msg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$07 _", function tag$01_text$03_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$08 _", function tag$01_text$03_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">${msg}</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$01 repeat$12 variant$09 _", function tag$01_text$03_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">${msg}</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 variant$01 _", function tag$01_text$03_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\">${msg}</div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 variant$04 _", function tag$01_text$03_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$11 variant$01 _", function tag$01_text$03_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$11 variant$02 _", function tag$01_text$03_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 1\">${msg}</div></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$11 variant$03 _", function tag$01_text$03_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 1\">${msg}</div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$11 variant$08 _", function tag$01_text$03_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\"></div><div else>${notMsg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$11 variant$09 _", function tag$01_text$03_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$11 variant$10 _", function tag$01_text$03_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$12 variant$01 _", function tag$01_text$03_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$12 variant$02 _", function tag$01_text$03_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 3\">${msg}</div></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$12 variant$03 _", function tag$01_text$03_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 3\">${msg}</div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$12 variant$08 _", function tag$01_text$03_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\"></div><div else>${notMsg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$12 variant$09 _", function tag$01_text$03_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$03 if$02 repeat$12 variant$10 _", function tag$01_text$03_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 variant$01 _", function tag$01_text$04_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">${msg}</div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 variant$02 _", function tag$01_text$04_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 variant$03 _", function tag$01_text$04_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\">${msg}</div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$01 _", function tag$01_text$04_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$02 _", function tag$01_text$04_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">${msg}</div></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$03 _", function tag$01_text$04_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">${msg}</div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$04 _", function tag$01_text$04_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">${msg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$05 _", function tag$01_text$04_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\" if.bind=\"true\">${msg}<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$06 _", function tag$01_text$04_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">${msg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$07 _", function tag$01_text$04_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 1\">${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$08 _", function tag$01_text$04_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"true\">${msg}</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$11 variant$09 _", function tag$01_text$04_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 1\">${msg}</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$01 _", function tag$01_text$04_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$02 _", function tag$01_text$04_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">${msg}</div></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$03 _", function tag$01_text$04_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">${msg}</div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$04 _", function tag$01_text$04_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">${msg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$05 _", function tag$01_text$04_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\" if.bind=\"true\">${msg}<div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$06 _", function tag$01_text$04_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">${msg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$07 _", function tag$01_text$04_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\" repeat.for=\"i of 3\">${msg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$08 _", function tag$01_text$04_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"true\">${msg}</div><div else></div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$01 repeat$12 variant$09 _", function tag$01_text$04_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"true\"><div repeat.for=\"i of 3\">${msg}</div></div><div else></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 variant$01 _", function tag$01_text$04_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\">${msg}</div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 variant$04 _", function tag$01_text$04_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else>${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$11 variant$01 _", function tag$01_text$04_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$11 variant$02 _", function tag$01_text$04_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 1\">${msg}</div></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$11 variant$03 _", function tag$01_text$04_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 1\">${msg}</div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$11 variant$08 _", function tag$01_text$04_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 1\"><div if.bind=\"false\"></div><div else>${notMsg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$11 variant$09 _", function tag$01_text$04_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 1\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$11 variant$10 _", function tag$01_text$04_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 1\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$12 variant$01 _", function tag$01_text$04_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\">${msg}</div><div else>${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$12 variant$02 _", function tag$01_text$04_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"><div repeat.for=\"i of 3\">${msg}</div></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$12 variant$03 _", function tag$01_text$04_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\" repeat.for=\"i of 3\">${msg}</div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$12 variant$08 _", function tag$01_text$04_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><div repeat.for=\"i of 3\"><div if.bind=\"false\"></div><div else>${notMsg}</div><div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$12 variant$09 _", function tag$01_text$04_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else><div repeat.for=\"i of 3\">${notMsg}</div></div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$01 text$04 if$02 repeat$12 variant$10 _", function tag$01_text$04_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><div if.bind=\"false\"></div><div else repeat.for=\"i of 3\">${notMsg}</div></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 _", function tag$02_text$01__() {
        const { au, host } = setup();
        const template = "<template>a</template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 variant$01 _", function tag$02_text$01_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">a</template><template else>b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 variant$02 _", function tag$02_text$01_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">a</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 variant$03 _", function tag$02_text$01_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">a</template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$01 _", function tag$02_text$01_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">a</template><template else>b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$02 _", function tag$02_text$01_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">a</template></template><template else><template repeat.for=\"i of 1\">b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$03 _", function tag$02_text$01_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">a</template><template else repeat.for=\"i of 1\">b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$04 _", function tag$02_text$01_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">a</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$05 _", function tag$02_text$01_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\" if.bind=\"true\">a<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$06 _", function tag$02_text$01_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">a</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$07 _", function tag$02_text$01_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">a</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$08 _", function tag$02_text$01_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">a</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$11 variant$09 _", function tag$02_text$01_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">a</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$01 _", function tag$02_text$01_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">a</template><template else>b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$02 _", function tag$02_text$01_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">a</template></template><template else><template repeat.for=\"i of 3\">b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$03 _", function tag$02_text$01_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">a</template><template else repeat.for=\"i of 3\">b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$04 _", function tag$02_text$01_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">a</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$05 _", function tag$02_text$01_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\" if.bind=\"true\">a<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$06 _", function tag$02_text$01_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">a</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$07 _", function tag$02_text$01_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">a</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$08 _", function tag$02_text$01_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">a</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$01 repeat$12 variant$09 _", function tag$02_text$01_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">a</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 variant$01 _", function tag$02_text$01_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\">a</template><template else>b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 variant$04 _", function tag$02_text$01_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else>b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$11 variant$01 _", function tag$02_text$01_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\">a</template><template else>b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$11 variant$02 _", function tag$02_text$01_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 1\">a</template></template><template else><template repeat.for=\"i of 1\">b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$11 variant$03 _", function tag$02_text$01_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 1\">a</template><template else repeat.for=\"i of 1\">b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$11 variant$08 _", function tag$02_text$01_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\"></template><template else>b</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$11 variant$09 _", function tag$02_text$01_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 1\">b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$11 variant$10 _", function tag$02_text$01_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 1\">b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$12 variant$01 _", function tag$02_text$01_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\">a</template><template else>b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$12 variant$02 _", function tag$02_text$01_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 3\">a</template></template><template else><template repeat.for=\"i of 3\">b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$12 variant$03 _", function tag$02_text$01_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 3\">a</template><template else repeat.for=\"i of 3\">b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$12 variant$08 _", function tag$02_text$01_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\"></template><template else>b</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$12 variant$09 _", function tag$02_text$01_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 3\">b</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$01 if$02 repeat$12 variant$10 _", function tag$02_text$01_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 3\">b</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 variant$01 _", function tag$02_text$02_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">a</template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 variant$02 _", function tag$02_text$02_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">a</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 variant$03 _", function tag$02_text$02_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">a</template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$01 _", function tag$02_text$02_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">a</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$02 _", function tag$02_text$02_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">a</template></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$03 _", function tag$02_text$02_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">a</template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$04 _", function tag$02_text$02_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">a</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$05 _", function tag$02_text$02_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\" if.bind=\"true\">a<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$06 _", function tag$02_text$02_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">a</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$07 _", function tag$02_text$02_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">a</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$08 _", function tag$02_text$02_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">a</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$11 variant$09 _", function tag$02_text$02_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">a</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$01 _", function tag$02_text$02_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">a</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$02 _", function tag$02_text$02_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">a</template></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$03 _", function tag$02_text$02_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">a</template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$04 _", function tag$02_text$02_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">a</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$05 _", function tag$02_text$02_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\" if.bind=\"true\">a<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$06 _", function tag$02_text$02_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">a</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$07 _", function tag$02_text$02_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">a</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$08 _", function tag$02_text$02_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">a</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$01 repeat$12 variant$09 _", function tag$02_text$02_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">a</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 variant$01 _", function tag$02_text$02_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\">a</template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 variant$04 _", function tag$02_text$02_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$11 variant$01 _", function tag$02_text$02_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\">a</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$11 variant$02 _", function tag$02_text$02_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 1\">a</template></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$11 variant$03 _", function tag$02_text$02_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 1\">a</template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$11 variant$08 _", function tag$02_text$02_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\"></template><template else>${notMsg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$11 variant$09 _", function tag$02_text$02_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$11 variant$10 _", function tag$02_text$02_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$12 variant$01 _", function tag$02_text$02_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\">a</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$12 variant$02 _", function tag$02_text$02_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 3\">a</template></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$12 variant$03 _", function tag$02_text$02_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 3\">a</template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$12 variant$08 _", function tag$02_text$02_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\"></template><template else>${notMsg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$12 variant$09 _", function tag$02_text$02_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$02 if$02 repeat$12 variant$10 _", function tag$02_text$02_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 _", function tag$02_text$03__() {
        const { au, host } = setup();
        const template = "<template>${msg}</template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 variant$01 _", function tag$02_text$03_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">${msg}</template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 variant$02 _", function tag$02_text$03_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">${msg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 variant$03 _", function tag$02_text$03_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">${msg}</template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$01 _", function tag$02_text$03_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$02 _", function tag$02_text$03_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">${msg}</template></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$03 _", function tag$02_text$03_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">${msg}</template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$04 _", function tag$02_text$03_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">${msg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$05 _", function tag$02_text$03_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\" if.bind=\"true\">${msg}<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$06 _", function tag$02_text$03_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">${msg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$07 _", function tag$02_text$03_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">${msg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$08 _", function tag$02_text$03_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">${msg}</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$11 variant$09 _", function tag$02_text$03_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">${msg}</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$01 _", function tag$02_text$03_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$02 _", function tag$02_text$03_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">${msg}</template></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$03 _", function tag$02_text$03_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">${msg}</template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$04 _", function tag$02_text$03_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">${msg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$05 _", function tag$02_text$03_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\" if.bind=\"true\">${msg}<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$06 _", function tag$02_text$03_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">${msg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$07 _", function tag$02_text$03_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">${msg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$08 _", function tag$02_text$03_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">${msg}</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$01 repeat$12 variant$09 _", function tag$02_text$03_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">${msg}</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 variant$01 _", function tag$02_text$03_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\">${msg}</template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 variant$04 _", function tag$02_text$03_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$11 variant$01 _", function tag$02_text$03_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$11 variant$02 _", function tag$02_text$03_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 1\">${msg}</template></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$11 variant$03 _", function tag$02_text$03_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 1\">${msg}</template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$11 variant$08 _", function tag$02_text$03_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\"></template><template else>${notMsg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$11 variant$09 _", function tag$02_text$03_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$11 variant$10 _", function tag$02_text$03_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$12 variant$01 _", function tag$02_text$03_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$12 variant$02 _", function tag$02_text$03_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 3\">${msg}</template></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$12 variant$03 _", function tag$02_text$03_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 3\">${msg}</template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$12 variant$08 _", function tag$02_text$03_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\"></template><template else>${notMsg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$12 variant$09 _", function tag$02_text$03_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$03 if$02 repeat$12 variant$10 _", function tag$02_text$03_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 variant$01 _", function tag$02_text$04_if$01_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">${msg}</template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 variant$02 _", function tag$02_text$04_if$01_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">${msg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 variant$03 _", function tag$02_text$04_if$01_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\">${msg}</template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$01 _", function tag$02_text$04_if$01_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$02 _", function tag$02_text$04_if$01_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">${msg}</template></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$03 _", function tag$02_text$04_if$01_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">${msg}</template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$04 _", function tag$02_text$04_if$01_repeat$11_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">${msg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$05 _", function tag$02_text$04_if$01_repeat$11_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\" if.bind=\"true\">${msg}<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$06 _", function tag$02_text$04_if$01_repeat$11_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">${msg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$07 _", function tag$02_text$04_if$01_repeat$11_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 1\">${msg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$08 _", function tag$02_text$04_if$01_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"true\">${msg}</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$11 variant$09 _", function tag$02_text$04_if$01_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 1\">${msg}</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "a");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("a", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$01 _", function tag$02_text$04_if$01_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$02 _", function tag$02_text$04_if$01_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">${msg}</template></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$03 _", function tag$02_text$04_if$01_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">${msg}</template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$04 _", function tag$02_text$04_if$01_repeat$12_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">${msg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$05 _", function tag$02_text$04_if$01_repeat$12_variant$05__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\" if.bind=\"true\">${msg}<template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$06 _", function tag$02_text$04_if$01_repeat$12_variant$06__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">${msg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$07 _", function tag$02_text$04_if$01_repeat$12_variant$07__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\" repeat.for=\"i of 3\">${msg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$08 _", function tag$02_text$04_if$01_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"true\">${msg}</template><template else></template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$01 repeat$12 variant$09 _", function tag$02_text$04_if$01_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"true\"><template repeat.for=\"i of 3\">${msg}</template></template><template else></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "aaa");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("aaa", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 variant$01 _", function tag$02_text$04_if$02_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\">${msg}</template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 variant$04 _", function tag$02_text$04_if$02_variant$04__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else>${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$11 variant$01 _", function tag$02_text$04_if$02_repeat$11_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$11 variant$02 _", function tag$02_text$04_if$02_repeat$11_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 1\">${msg}</template></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$11 variant$03 _", function tag$02_text$04_if$02_repeat$11_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 1\">${msg}</template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$11 variant$08 _", function tag$02_text$04_if$02_repeat$11_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 1\"><template if.bind=\"false\"></template><template else>${notMsg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$11 variant$09 _", function tag$02_text$04_if$02_repeat$11_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 1\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$11 variant$10 _", function tag$02_text$04_if$02_repeat$11_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 1\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "b");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("b", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$12 variant$01 _", function tag$02_text$04_if$02_repeat$12_variant$01__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\">${msg}</template><template else>${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$12 variant$02 _", function tag$02_text$04_if$02_repeat$12_variant$02__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"><template repeat.for=\"i of 3\">${msg}</template></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$12 variant$03 _", function tag$02_text$04_if$02_repeat$12_variant$03__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\" repeat.for=\"i of 3\">${msg}</template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$12 variant$08 _", function tag$02_text$04_if$02_repeat$12_variant$08__() {
        const { au, host } = setup();
        const template = "<template><template repeat.for=\"i of 3\"><template if.bind=\"false\"></template><template else>${notMsg}</template><template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$12 variant$09 _", function tag$02_text$04_if$02_repeat$12_variant$09__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else><template repeat.for=\"i of 3\">${notMsg}</template></template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
    it("tag$02 text$04 if$02 repeat$12 variant$10 _", function tag$02_text$04_if$02_repeat$12_variant$10__() {
        const { au, host } = setup();
        const template = "<template><template if.bind=\"false\"></template><template else repeat.for=\"i of 3\">${notMsg}</template></template>";
        const name = "app";
        const App = CustomElementResource.define({ name, template }, class {
            msg = "a";
            notMsg = "b";
        });
        const component = new App();
        au.app({ host, component });
        console.log("template", template);
        console.log("expected", "bbb");
        au.start();
        console.log("after start $1", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #1");
        au.stop();
        console.log("after stop $1", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #1");
        au.start();
        console.log("after start $2", host.outerHTML);
        expect(host.textContent).to.equal("bbb", "after start #2");
        au.stop();
        au.stop();
        console.log("after stop $2", host.outerHTML);
        expect(host.textContent).to.equal("", "after stop #2");
    });
});