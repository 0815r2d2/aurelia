{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/history-browser.ts","../src/link-handler.ts","../src/viewport.ts","../src/scope.ts","../src/router.ts","../src/resources/viewport.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface IHistoryEntry {\n  path: string;\n  fullStatePath: string;\n  index?: number;\n  title?: string;\n  data?: Object;\n}\n\nexport interface IHistoryOptions {\n  callback?: Function;\n}\n\nexport interface INavigationFlags {\n  isFirst?: boolean;\n  isNew?: boolean;\n  isRefresh?: boolean;\n  isForward?: boolean;\n  isBack?: boolean;\n  isReplace?: boolean;\n  isCancel?: boolean;\n}\n\nexport interface INavigationInstruction extends IHistoryEntry, INavigationFlags { }\n\nexport class HistoryBrowser {\n  public currentEntry: IHistoryEntry;\n  public historyEntries: IHistoryEntry[];\n  public historyOffset: number;\n  public replacedEntry: IHistoryEntry;\n\n  public history: History;\n  public location: Location;\n\n  private activeEntry: IHistoryEntry = null;\n\n  private options: IHistoryOptions;\n  private isActive: boolean = false;\n\n  private lastHistoryMovement: number;\n  private cancelRedirectHistoryMovement: number;\n  private isCancelling: boolean = false;\n  private isReplacing: boolean = false;\n  private isRefreshing: boolean = false;\n\n  constructor() {\n    this.location = window.location;\n    this.history = window.history;\n  }\n\n  public activate(options?: IHistoryOptions): Promise<void> {\n    if (this.isActive) {\n      throw new Error('History has already been activated.');\n    }\n\n    this.isActive = true;\n    this.options = { ...options };\n\n    window.addEventListener('popstate', this.pathChanged);\n\n    return Promise.resolve().then(() => {\n      this.setPath(this.getPath(), true);\n    });\n  }\n\n  public deactivate(): void {\n    window.removeEventListener('popstate', this.pathChanged);\n    this.isActive = false;\n  }\n\n  public goto(path: string, title?: string, data?: Object): void {\n    this.activeEntry = {\n      path: path,\n      fullStatePath: path,\n      title: title,\n      data: data,\n    };\n    this.setPath(path);\n  }\n\n  public replace(path: string, title?: string, data?: Object): void {\n    this.isReplacing = true;\n    this.activeEntry = {\n      path: path,\n      fullStatePath: path,\n      title: title,\n      data: data,\n    };\n    this.setPath(path, true);\n  }\n  public redirect(path: string, title?: string, data?: Object): void {\n    // This makes sure we can cancel redirects from both pushes and replaces\n    this.cancelRedirectHistoryMovement = this.lastHistoryMovement + 1;\n    this.replace(path, title, data);\n  }\n\n  public refresh(): void {\n    if (!this.currentEntry) {\n      return;\n    }\n    this.isRefreshing = true;\n    this.replace(this.currentEntry.path, this.currentEntry.title, this.currentEntry.data);\n  }\n\n  public back(): void {\n    this.history.go(-1);\n  }\n\n  public forward(): void {\n    this.history.go(1);\n  }\n\n  public cancel(): void {\n    this.isCancelling = true;\n    const movement = this.lastHistoryMovement || this.cancelRedirectHistoryMovement;\n    if (movement) {\n      this.history.go(-movement);\n    } else {\n      this.replace(this.replacedEntry.path, this.replacedEntry.title, this.replacedEntry.data);\n    }\n  }\n\n  public setState(key: string | Object, value?: Object): void {\n    const { pathname, search, hash } = this.location;\n    let state = { ...this.history.state };\n    if (typeof key === 'string') {\n      state[key] = JSON.parse(JSON.stringify(value));\n    } else {\n      state = { ...state, ...JSON.parse(JSON.stringify(key)) };\n    }\n    this.history.replaceState(state, null, `${pathname}${search}${hash}`);\n  }\n\n  public getState(key: string): Object {\n    const state = { ...this.history.state };\n    return state[key];\n  }\n\n  public setEntryTitle(title: string): void {\n    this.currentEntry.title = title;\n    this.historyEntries[this.currentEntry.index] = this.currentEntry;\n    this.setState({\n      'HistoryEntries': this.historyEntries,\n      'HistoryEntry': this.currentEntry,\n    });\n  }\n\n  public replacePath(path: string, fullStatePath: string): void {\n    const newHash = `#/${path}`;\n    const { pathname, search, hash } = this.location;\n    // tslint:disable-next-line:possible-timing-attack\n    if (newHash === hash) {\n      return;\n    }\n    this.currentEntry.path = path;\n    this.currentEntry.fullStatePath = fullStatePath;\n    const state = {\n      ...this.history.state,\n      ...{\n        'HistoryEntry': this.currentEntry,\n        'HistoryEntries': this.historyEntries,\n      }\n    };\n    this.history.replaceState(state, null, `${pathname}${search}${newHash}`);\n  }\n\n  public setHash(hash: string): void {\n    if (!hash.startsWith('#')) {\n      hash = `#${hash}`;\n    }\n    this.location.hash = hash;\n  }\n\n  get titles(): string[] {\n    return (this.historyEntries ? this.historyEntries.slice(0, this.currentEntry.index + 1).map((value) => value.title) : []);\n  }\n\n  public pathChanged = (): void => {\n    const path: string = this.getPath();\n    // tslint:disable-next-line:no-console\n    console.log('path changed to', path, this.activeEntry, this.currentEntry);\n\n    const navigationFlags: INavigationFlags = {};\n\n    let historyEntry: IHistoryEntry = this.getState('HistoryEntry') as IHistoryEntry;\n    if (this.activeEntry && this.activeEntry.path === path) { // Only happens with new history entries (including replacing ones)\n      navigationFlags.isNew = true;\n      const index = (this.isReplacing ? this.currentEntry.index : this.history.length - this.historyOffset);\n      this.currentEntry = this.activeEntry;\n      this.currentEntry.index = index;\n      if (this.isReplacing) {\n        this.lastHistoryMovement = 0;\n        this.historyEntries[this.currentEntry.index] = this.currentEntry;\n        if (this.isCancelling) {\n          navigationFlags.isCancel = true;\n          this.isCancelling = false;\n          // Prevent another cancel by clearing lastHistoryMovement?\n        } else if (this.isRefreshing) {\n          navigationFlags.isRefresh = true;\n          this.isRefreshing = false;\n        } else {\n          navigationFlags.isReplace = true;\n        }\n        this.isReplacing = false;\n      } else {\n        this.lastHistoryMovement = 1;\n        this.historyEntries = this.historyEntries.slice(0, this.currentEntry.index);\n        this.historyEntries.push(this.currentEntry);\n      }\n      this.setState({\n        'HistoryEntries': this.historyEntries,\n        'HistoryOffset': this.historyOffset,\n        'HistoryEntry': this.currentEntry\n      });\n    } else { // Refresh, history navigation, first navigation, manual navigation or cancel\n      this.historyEntries = (this.historyEntries || this.getState('HistoryEntries') || []) as IHistoryEntry[];\n      // tslint:disable-next-line:strict-boolean-expressions\n      this.historyOffset = (this.historyOffset || this.getState('HistoryOffset') || 0) as number;\n      if (!historyEntry && !this.currentEntry) {\n        navigationFlags.isNew = true;\n        navigationFlags.isFirst = true;\n        this.historyOffset = this.history.length;\n      } else if (!historyEntry) {\n        navigationFlags.isNew = true;\n      } else if (!this.currentEntry) {\n        navigationFlags.isRefresh = true;\n      } else if (this.currentEntry.index < historyEntry.index) {\n        navigationFlags.isForward = true;\n      } else if (this.currentEntry.index > historyEntry.index) {\n        navigationFlags.isBack = true;\n      }\n\n      if (!historyEntry) {\n        // TODO: max history length of 50, find better new index\n        historyEntry = {\n          path: path,\n          fullStatePath: path,\n          index: this.history.length - this.historyOffset,\n        };\n        this.historyEntries = this.historyEntries.slice(0, historyEntry.index);\n        this.historyEntries.push(historyEntry);\n        this.setState({\n          'HistoryEntries': this.historyEntries,\n          'HistoryOffset': this.historyOffset,\n          'HistoryEntry': historyEntry\n        });\n      }\n      this.lastHistoryMovement = (this.currentEntry ? historyEntry.index - this.currentEntry.index : 0);\n      this.currentEntry = historyEntry;\n\n      if (this.isCancelling) {\n        navigationFlags.isCancel = true;\n        this.isCancelling = false;\n        // Prevent another cancel by clearing lastHistoryMovement?\n      }\n    }\n    this.activeEntry = null;\n\n    if (this.cancelRedirectHistoryMovement) {\n      this.cancelRedirectHistoryMovement--;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log('navigated', this.getState('HistoryEntry'), this.historyEntries, this.getState('HistoryOffset'));\n    this.callback(this.currentEntry, navigationFlags);\n  }\n\n  private getPath(): string {\n    return this.location.hash.substr(1);\n  }\n  private setPath(path: string, replace: boolean = false): void {\n    // More checks, such as parameters, needed\n    if (this.currentEntry && this.currentEntry.path === path && !this.isRefreshing) {\n      return;\n    }\n\n    const { pathname, search } = this.location;\n    const hash = `#${path}`;\n    if (replace) {\n      this.replacedEntry = this.currentEntry;\n      this.history.replaceState({}, null, `${pathname}${search}${hash}`);\n    } else {\n      // tslint:disable-next-line:no-commented-code\n      // this.location.hash = hash;\n      this.history.pushState({}, null, `${pathname}${search}${hash}`);\n    }\n    this.pathChanged();\n  }\n\n  private callback(currentEntry: IHistoryEntry, navigationFlags: INavigationFlags): void {\n    const instruction: INavigationInstruction = { ...currentEntry, ...navigationFlags };\n    // tslint:disable-next-line:no-console\n    console.log('callback', currentEntry, navigationFlags);\n    if (this.options.callback) {\n      this.options.callback(instruction);\n    }\n  }\n}\n","/**\n * Provides information about how to handle an anchor event.\n */\nexport interface ILinkHandlerOptions {\n  /**\n   * Callback method for when a link is clicked\n   */\n  callback?: Function;\n}\n\n/**\n * Provides information about how to handle an anchor event.\n */\nexport interface AnchorEventInfo {\n  /**\n   * Indicates whether the event should be handled or not.\n   */\n  shouldHandleEvent: boolean;\n  /**\n   * The href of the link or null if not-applicable.\n   */\n  href: string;\n  /**\n   * The anchor element or null if not-applicable.\n   */\n  anchor: Element;\n}\n\n/**\n * Class responsible for handling interactions that should trigger navigation.\n */\nexport class LinkHandler {\n  private static window: Window;\n\n  private options: ILinkHandlerOptions;\n  private isActive: boolean = false;\n\n  // private handler: EventListener;\n  private document: Document;\n\n  constructor() {\n    this.document = document;\n  }\n  /**\n   * Gets the href and a \"should handle\" recommendation, given an Event.\n   *\n   * @param event The Event to inspect for target anchor and href.\n   */\n  private static getEventInfo(event: Event): AnchorEventInfo {\n    const info = {\n      shouldHandleEvent: false,\n      href: null,\n      anchor: null\n    };\n\n    const target = LinkHandler.findClosestAnchor(event.target as Element);\n    if (!target || !LinkHandler.targetIsThisWindow(target)) {\n      return info;\n    }\n\n    if (target.hasAttribute('external')) {\n      return info;\n    }\n\n    if ((event as MouseEvent).altKey || (event as MouseEvent).ctrlKey || (event as MouseEvent).metaKey || (event as MouseEvent).shiftKey) {\n      return info;\n    }\n\n    const href = target.getAttribute('href');\n    info.anchor = target;\n    info.href = href;\n\n    const leftButtonClicked = (event as MouseEvent).which === 1;\n\n    info.shouldHandleEvent = leftButtonClicked;\n    return info;\n  }\n\n  /**\n   * Finds the closest ancestor that's an anchor element.\n   *\n   * @param el The element to search upward from.\n   * @returns The link element that is the closest ancestor.\n   */\n  private static findClosestAnchor(el: Element): Element {\n    while (el) {\n      if (el.tagName === 'A') {\n        return el;\n      }\n      el = el.parentNode as Element;\n    }\n  }\n\n  /**\n   * Gets a value indicating whether or not an anchor targets the current window.\n   *\n   * @param target The anchor element whose target should be inspected.\n   * @returns True if the target of the link element is this window; false otherwise.\n   */\n  private static targetIsThisWindow(target: Element): boolean {\n    const targetWindow = target.getAttribute('target');\n    const win = LinkHandler.window;\n\n    return !targetWindow ||\n      targetWindow === win.name ||\n      targetWindow === '_self';\n  }\n\n  /**\n   * Activate the instance.\n   *\n   */\n  public activate(options: ILinkHandlerOptions): void {\n    if (this.isActive) {\n      throw new Error('LinkHandler has already been activated.');\n    }\n\n    this.isActive = true;\n    this.options = { ...options };\n\n    this.document.addEventListener('click', this.handler, true);\n  }\n\n  /**\n   * Deactivate the instance. Event handlers and other resources should be cleaned up here.\n   */\n  public deactivate(): void {\n    this.document.removeEventListener('click', this.handler);\n    this.isActive = false;\n  }\n\n  private handler: EventListener = (e) => {\n    const info = LinkHandler.getEventInfo(e);\n\n    if (info.shouldHandleEvent) {\n      e.preventDefault();\n      this.options.callback(info);\n    }\n  }\n}\n","import { PLATFORM } from '@aurelia/kernel';\nimport { CustomElementResource, ICustomElement, ICustomElementType, IDOM, INode, IProjectorLocator, IRenderingEngine, LifecycleFlags } from '@aurelia/runtime';\nimport { INavigationInstruction } from './history-browser';\nimport { Router } from './router';\nimport { Scope } from './scope';\nimport { IViewportOptions } from './viewport';\n\nexport interface IRouteableCustomElement extends ICustomElement {\n  canEnter?: Function;\n  enter?: Function;\n  canLeave?: Function;\n  leave?: Function;\n}\n\nexport interface IViewportOptions {\n  scope?: boolean;\n  usedBy?: string | string[];\n  forceDescription?: boolean;\n}\n\nexport class Viewport {\n  public content: ICustomElementType;\n  public nextContent: ICustomElementType;\n\n  public instruction: INavigationInstruction;\n  public nextInstruction: INavigationInstruction;\n\n  public component: IRouteableCustomElement;\n  public nextComponent: IRouteableCustomElement;\n\n  private clear: boolean = false;\n\n  constructor(private router: Router, public name: string, public element: Element, public owningScope: Scope, public scope: Scope, public options?: IViewportOptions) {\n  }\n\n  public setNextContent(content: ICustomElementType | string, instruction: INavigationInstruction): boolean {\n    this.clear = false;\n    if (typeof content === 'string') {\n      if (content === this.router.separators.clear) {\n        this.clear = true;\n        content = null;\n      } else {\n        const resolver = this.router.container.getResolver(CustomElementResource.keyFrom(content));\n        if (resolver !== null) {\n          content = resolver.getFactory(this.router.container).Type as ICustomElementType;\n        }\n      }\n    }\n\n    this.nextContent = content as ICustomElementType;\n    this.nextInstruction = instruction;\n\n    if (this.content !== content || instruction.isRefresh) {\n      return true;\n    }\n\n    // Add comparisons against path and data here\n\n    return false;\n  }\n\n  public canLeave(): Promise<boolean> {\n    if (!this.component) {\n      return Promise.resolve(true);\n    }\n\n    const component: IRouteableCustomElement = this.component;\n    if (!component.canLeave) {\n      return Promise.resolve(true);\n    }\n    // tslint:disable-next-line:no-console\n    console.log('viewport canLeave', component.canLeave(this.instruction, this.nextInstruction));\n\n    const result = component.canLeave(this.instruction, this.nextInstruction);\n    if (typeof result === 'boolean') {\n      return Promise.resolve(result);\n    }\n    return result;\n  }\n\n  public canEnter(): Promise<boolean> {\n    if (this.clear) {\n      return Promise.resolve(true);\n    }\n\n    if (!this.nextContent) {\n      return Promise.resolve(false);\n    }\n\n    this.loadComponent(this.nextContent);\n    if (!this.nextComponent) {\n      return Promise.resolve(false);\n    }\n\n    const component: IRouteableCustomElement = this.nextComponent;\n    if (!component.canEnter) {\n      return Promise.resolve(true);\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log('viewport canEnter', component.canEnter(this.nextInstruction, this.instruction));\n    const result = component.canEnter(this.nextInstruction, this.instruction);\n    if (typeof result === 'boolean') {\n      return Promise.resolve(result);\n    }\n    return result;\n  }\n\n  public async loadContent(guard?: number): Promise<boolean> {\n    // tslint:disable-next-line:no-console\n    console.log('Viewport loadContent', this.name);\n\n    if (!this.element) {\n      // TODO: Refactor this once multi level recursiveness is fixed\n      await this.waitForElement(50);\n      if (!this.element) {\n        return Promise.resolve(false);\n      }\n    }\n\n    const host: INode = this.element as INode;\n    const container = this.router.container;\n    const dom = container.get(IDOM);\n    const projectorLocator = container.get(IProjectorLocator);\n    const renderingEngine = container.get(IRenderingEngine);\n\n    if (this.component) {\n      if (this.component.leave) {\n        this.component.leave(this.instruction, this.nextInstruction);\n      }\n      this.component.$detach(LifecycleFlags.fromStopTask);\n      this.component.$unbind(LifecycleFlags.fromStopTask | LifecycleFlags.fromUnbind);\n    }\n\n    if (this.nextComponent) {\n      if (this.nextComponent.enter) {\n        this.nextComponent.enter(this.nextInstruction, this.instruction);\n      }\n      this.nextComponent.$hydrate(dom, projectorLocator, renderingEngine, host);\n      this.nextComponent.$bind(LifecycleFlags.fromStartTask | LifecycleFlags.fromBind, null);\n      this.nextComponent.$attach(LifecycleFlags.fromStartTask);\n\n      this.content = this.nextContent;\n      this.instruction = this.nextInstruction;\n      this.component = this.nextComponent;\n    }\n\n    if (this.clear) {\n      this.content = this.component = null;\n      this.instruction = this.nextInstruction;\n    }\n\n    this.nextContent = this.nextInstruction = this.nextComponent = null;\n\n    return Promise.resolve(true);\n  }\n\n  public description(full: boolean = false): string {\n    if (this.content) {\n      const component = this.content.description.name;\n      const newScope: string = this.scope ? this.router.separators.ownsScope : '';\n      if (full || newScope.length || this.options.forceDescription) {\n        return `${component}${this.router.separators.viewport}${this.name}${newScope}`;\n      }\n      const viewports = {};\n      viewports[component] = component;\n      const found = this.owningScope.findViewports(viewports);\n      if (!found) {\n        return `${component}${this.router.separators.viewport}${this.name}${newScope}`;\n      }\n      return component;\n    }\n  }\n\n  public scopedDescription(full: boolean = false): string {\n    const descriptions = [this.owningScope.context(full), this.description(full)];\n    return descriptions.filter((value) => value && value.length).join(this.router.separators.scope);\n  }\n\n  // TODO: Deal with non-string components\n  public wantComponent(component: ICustomElementType | string): boolean {\n    let usedBy = this.options.usedBy || [];\n    if (typeof usedBy === 'string') {\n      usedBy = usedBy.split(',');\n    }\n    return usedBy.indexOf(component as string) >= 0;\n  }\n  // TODO: Deal with non-string components\n  public acceptComponent(component: ICustomElementType | string): boolean {\n    if (component === '-' || component === null) {\n      return true;\n    }\n    let usedBy = this.options.usedBy;\n    if (!usedBy || !usedBy.length) {\n      return true;\n    }\n    if (typeof usedBy === 'string') {\n      usedBy = usedBy.split(',');\n    }\n    if (usedBy.indexOf(component as string) >= 0) {\n      return true;\n    }\n    if (usedBy.filter((value) => value.indexOf('*') >= 0).length) {\n      return true;\n    }\n    return false;\n  }\n\n  private loadComponent(component: ICustomElementType): void {\n    this.nextComponent = this.router.container.get<IRouteableCustomElement>(CustomElementResource.keyFrom(component.description.name));\n  }\n\n  private async waitForElement(guard: number): Promise<void> {\n    if (this.element) {\n      return Promise.resolve();\n    }\n    if (!guard) {\n      return Promise.resolve();\n    }\n    await this.wait(100);\n    return this.waitForElement(--guard);\n  }\n\n  private async wait(time: number = 0): Promise<void> {\n    await new Promise((resolve) => {\n      PLATFORM.global.setTimeout(resolve, time);\n    });\n  }\n}\n","import { CustomElementResource, ICustomElementType } from '@aurelia/runtime';\nimport { Router } from './router';\nimport { IFindViewportsResult } from './scope';\nimport { IViewportOptions, Viewport } from './viewport';\n\nexport interface IViewportCustomElementType extends ICustomElementType {\n  viewport?: string;\n}\n\nexport interface IComponentViewport {\n  component: ICustomElementType | string;\n  viewport: Viewport;\n}\n\nexport interface IFindViewportsResult {\n  componentViewports?: IComponentViewport[];\n  viewportsRemaining?: boolean;\n}\n\nexport class Scope {\n  public viewport: Viewport;\n\n  public children: Scope[] = [];\n  public viewports: Object = {};\n\n  private scopeViewportParts: Object = {};\n  private availableViewports: Object;\n\n  constructor(private router: Router, public element: Element, public parent: Scope) {\n    if (this.parent) {\n      this.parent.addChild(this);\n    }\n  }\n\n  public findViewports(viewports?: Object): IFindViewportsResult {\n    const componentViewports: IComponentViewport[] = [];\n    let viewportsRemaining: boolean = false;\n\n    // Get a shallow copy of all available viewports (clean if it's the first find)\n    if (viewports) {\n      this.availableViewports = {};\n      this.scopeViewportParts = {};\n    }\n    this.availableViewports = { ...this.viewports, ...this.availableViewports };\n\n    // Get the parts for this scope (pointing to the rest)\n    for (const viewport in viewports) {\n      const parts = viewport.split(this.router.separators.scope);\n      const vp = parts.shift();\n      if (!this.scopeViewportParts[vp]) {\n        this.scopeViewportParts[vp] = [];\n      }\n      this.scopeViewportParts[vp].push(parts);\n    }\n\n    // Configured viewport is ruling\n    for (const viewportPart in this.scopeViewportParts) {\n      const component = viewportPart.split(this.router.separators.viewport).shift();\n      for (const name in this.availableViewports) {\n        const viewport: Viewport = this.availableViewports[name];\n        // TODO: Also check if (resolved) component wants a specific viewport\n        if (viewport && viewport.wantComponent(component)) {\n          const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, component, viewport);\n          componentViewports.push(...found.componentViewports);\n          viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n          this.availableViewports[name] = null;\n          delete this.scopeViewportParts[viewportPart];\n          break;\n        }\n      }\n    }\n\n    // Next in line is specified viewport\n    for (const viewportPart in this.scopeViewportParts) {\n      const parts = viewportPart.split(this.router.separators.viewport);\n      const component = parts.shift();\n      let name = parts.shift();\n      if (!name || !name.length || name.startsWith('?')) {\n        continue;\n      }\n      let newScope = false;\n      if (name.endsWith(this.router.separators.ownsScope)) {\n        newScope = true;\n        name = name.substr(0, name.length - 1);\n      }\n      if (!this.viewports[name]) {\n        this.addViewport(name, null, { scope: newScope, forceDescription: true });\n        this.availableViewports[name] = this.viewports[name];\n      }\n      const viewport = this.availableViewports[name];\n      if (viewport && viewport.acceptComponent(component)) {\n        const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, component, viewport);\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n        this.availableViewports[name] = null;\n        delete this.scopeViewportParts[viewportPart];\n      }\n    }\n\n    // Finally, only one accepting viewport left?\n    for (const viewportPart in this.scopeViewportParts) {\n      const component = viewportPart.split(this.router.separators.viewport).shift();\n      const remainingViewports = [];\n      for (const name in this.availableViewports) {\n        const viewport: Viewport = this.availableViewports[name];\n        if (viewport && viewport.acceptComponent(component)) {\n          remainingViewports.push(viewport);\n        }\n      }\n      if (remainingViewports.length === 1) {\n        const viewport = remainingViewports.shift();\n        const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, component, viewport);\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n        this.availableViewports[viewport.name] = null;\n        delete this.scopeViewportParts[viewportPart];\n        break;\n      }\n    }\n\n    viewportsRemaining = viewportsRemaining || Object.keys(this.scopeViewportParts).length > 0;\n\n    // If it's a repeat there might be remaining viewports in scope children\n    if (!viewports) {\n      for (const child of this.children) {\n        const found = child.findViewports();\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n      }\n    }\n\n    return {\n      componentViewports: componentViewports,\n      viewportsRemaining: viewportsRemaining,\n    };\n  }\n\n  public foundViewport(viewports: Object, scopeViewportParts: Object, viewportPart: string, component: ICustomElementType | string, viewport: Viewport): IFindViewportsResult {\n    const componentViewports: IComponentViewport[] = [{ component: component, viewport: viewport }];\n    let viewportsRemaining: boolean = false;\n\n    if (scopeViewportParts[viewportPart].length) {\n      const scope = viewport.scope || viewport.owningScope;\n      for (const remainingParts of scopeViewportParts[viewportPart]) {\n        if (remainingParts.length) {\n          const remaining = remainingParts.join(this.router.separators.scope);\n          const vps = {};\n          vps[remaining] = viewports[viewportPart + this.router.separators.scope + remaining];\n          const scoped = scope.findViewports(vps);\n          componentViewports.push(...scoped.componentViewports);\n          viewportsRemaining = viewportsRemaining || scoped.viewportsRemaining;\n        }\n      }\n    }\n    return {\n      componentViewports: componentViewports,\n      viewportsRemaining: viewportsRemaining,\n    };\n  }\n\n  // public findViewport(name: string): Viewport {\n  //   const parts = name.split(this.router.separators.scope);\n  //   const names = parts.shift().split(this.router.separators.viewport);\n  //   const comp = names.shift();\n  //   name = names.shift();\n  //   let newScope = false;\n  //   if (name.endsWith(this.router.separators.ownsScope)) {\n  //     newScope = true;\n  //     name = name.substr(0, name.length - 1);\n  //   }\n  //   const viewport = this.resolveViewport(name, comp) || this.addViewport(name, null, { scope: newScope });\n  //   if (!parts.length) {\n  //     return viewport;\n  //   } else {\n  //     const scope = viewport.scope || viewport.owningScope;\n  //     return scope.findViewport(parts.join(this.router.separators.scope));\n  //   }\n  // }\n\n  // public resolveViewport(name: string, component: string): Viewport {\n  //   if (name.length && name.charAt(0) !== '?') {\n  //     return this.viewports[name];\n  //   }\n  //   // Need more ways to resolve viewport based on component name!\n  //   const comp = this.resolveComponent(component);\n  //   if (comp.viewport) {\n  //     name = comp.viewport;\n  //     return this.viewports[name];\n  //   }\n  //   return null;\n  // }\n\n  public addViewport(name: string, element: Element, options?: IViewportOptions): Viewport {\n    let viewport = this.viewports[name];\n    if (!viewport) {\n      let scope: Scope;\n      if (options.scope) {\n        scope = new Scope(this.router, element, this);\n        this.router.scopes.push(scope);\n      }\n\n      viewport = this.viewports[name] = new Viewport(this.router, name, element, this, scope, options);\n    }\n    if (element) {\n      // First added viewport with element is always scope viewport (except for root scope)\n      if (viewport.scope && viewport.scope.parent && !viewport.scope.viewport) {\n        viewport.scope.viewport = viewport;\n      }\n      if (viewport.scope && !viewport.scope.element) {\n        viewport.scope.element = element;\n      }\n      if (!viewport.element) {\n        viewport.element = element;\n        if (!viewport.element.children) {\n          this.renderViewport(viewport).catch(error => { throw error; });\n        }\n      }\n    }\n    return viewport;\n  }\n  public removeViewport(viewport: Viewport): number {\n    if (viewport.scope) {\n      this.router.removeScope(viewport.scope);\n    }\n    delete this.viewports[viewport.name];\n    return Object.keys(this.viewports).length;\n  }\n\n  public removeScope(): void {\n    for (const child of this.children) {\n      child.removeScope();\n    }\n    for (const viewport in this.viewports) {\n      this.router.removeViewport(this.viewports[viewport]);\n    }\n  }\n\n  public renderViewport(viewport: Viewport): Promise<boolean> {\n    return viewport.canEnter().then(() => viewport.loadContent());\n  }\n\n  public addChild(child: Scope): void {\n    if (this.children.indexOf(child) < 0) {\n      this.children.push(child);\n    }\n  }\n  public removeChild(child: Scope): void {\n    this.children.splice(this.children.indexOf(child), 1);\n  }\n\n  public viewportStates(full: boolean = false): string[] {\n    const states: string[] = [];\n    for (const viewport in this.viewports) {\n      states.push((this.viewports[viewport] as Viewport).scopedDescription(full));\n    }\n    for (const scope of this.children) {\n      states.push(...scope.viewportStates(full));\n    }\n    return states.filter((value) => value && value.length);\n  }\n\n  public allViewports(): Viewport[] {\n    const viewports: Viewport[] = [];\n    for (const viewport in this.viewports) {\n      viewports.push(this.viewports[viewport]);\n    }\n    for (const scope of this.children) {\n      viewports.push(...scope.allViewports());\n    }\n    return viewports;\n  }\n\n  public context(full: boolean = false): string {\n    if (!this.element || !this.parent) {\n      return '';\n    }\n    const parents: string[] = [];\n    if (this.viewport) {\n      parents.unshift(this.viewport.description(full));\n    }\n    let viewport: Viewport = this.parent.closestViewport(this.element.parentElement);\n    while (viewport && viewport.owningScope === this.parent) {\n      parents.unshift(viewport.description(full));\n      viewport = this.closestViewport(viewport.element.parentElement);\n    }\n    parents.unshift(this.parent.context(full));\n\n    return parents.filter((value) => value && value.length).join(this.router.separators.scope);\n  }\n\n  private resolveComponent(component: ICustomElementType | string): IViewportCustomElementType {\n    if (typeof component === 'string') {\n      const resolver = this.router.container.getResolver(CustomElementResource.keyFrom(component));\n      if (resolver !== null) {\n        component = resolver.getFactory(this.router.container).Type as ICustomElementType;\n      }\n    }\n    return component as ICustomElementType;\n  }\n\n  // This is not an optimal way of doing this\n  private closestViewport(element: Element): Viewport {\n    let closest: number = Number.MAX_SAFE_INTEGER;\n    let viewport: Viewport;\n    for (const vp in this.viewports) {\n      const viewportElement = this.viewports[vp].element;\n      let el = element;\n      let i = 0;\n      while (el) {\n        if (el === viewportElement) {\n          break;\n        }\n        i++;\n        el = el.parentElement;\n      }\n      if (i < closest) {\n        closest = i;\n        viewport = this.viewports[vp];\n      }\n    }\n    return viewport;\n  }\n}\n","import { IContainer, inject } from '@aurelia/kernel';\nimport { Aurelia, ICustomElementType } from '@aurelia/runtime';\nimport { HistoryBrowser, IHistoryEntry, IHistoryOptions, INavigationInstruction } from './history-browser';\nimport { AnchorEventInfo, LinkHandler } from './link-handler';\nimport { Scope } from './scope';\nimport { IViewportOptions, Viewport } from './viewport';\n\nexport interface IRouterOptions extends IHistoryOptions {\n  reportCallback?: Function;\n  separators?: IRouteSeparators;\n}\n\nexport interface IRoute {\n  name?: string;\n  path: string;\n  redirect?: string;\n  title?: string;\n  viewports?: Object;\n  meta?: Object;\n}\n\nexport interface IRouteViewport {\n  name: string;\n  component: ICustomElementType | string;\n}\n\nexport interface IRouteSeparators {\n  viewport: string;\n  sibling: string;\n  scope: string;\n  ownsScope: string;\n  parameters: string;\n  add: string;\n  clear: string;\n  action: string;\n}\n\n@inject(IContainer)\nexport class Router {\n  public routes: IRoute[] = [];\n  public viewports: Object = {};\n\n  public rootScope: Scope;\n  public scopes: Scope[] = [];\n\n  public separators: IRouteSeparators;\n\n  public historyBrowser: HistoryBrowser;\n  public linkHandler: LinkHandler;\n\n  private options: IRouterOptions;\n  private isActive: boolean = false;\n  private isRedirecting: boolean = false;\n\n  constructor(public container: IContainer) {\n    this.historyBrowser = new HistoryBrowser();\n    this.linkHandler = new LinkHandler();\n  }\n\n  public activate(options?: IRouterOptions): Promise<void> {\n    if (this.isActive) {\n      throw new Error('Router has already been activated.');\n    }\n\n    this.isActive = true;\n    this.options = {\n      ...{\n        callback: (navigationInstruction) => {\n          this.historyCallback(navigationInstruction).catch(error => { throw error; });\n        }\n      }, ...options\n    };\n\n    this.separators = {\n      ... {\n        viewport: '@', // ':',\n        sibling: '+', // '/',\n        scope: '/', // '+',\n        ownsScope: '!',\n        parameters: '=',\n        add: '+',\n        clear: '-',\n        action: '.',\n      }, ...this.options.separators\n    };\n\n    this.linkHandler.activate({ callback: this.linkCallback });\n    return this.historyBrowser.activate(this.options).catch(error => { throw error; });\n  }\n\n  public deactivate(): void {\n    if (!this.isActive) {\n      throw new Error('Router has not been activated.');\n    }\n    this.linkHandler.deactivate();\n    this.historyBrowser.deactivate();\n    return;\n  }\n\n  public linkCallback = (info: AnchorEventInfo): void => {\n    let href = info.href;\n    if (href.startsWith('#')) {\n      href = href.substr(1);\n    }\n    if (!href.startsWith('/')) {\n      const scope = this.closestScope(info.anchor);\n      const context = scope.context();\n      if (context) {\n        href = `/${context}${this.separators.scope}${href}`;\n      }\n    }\n    this.historyBrowser.setHash(href);\n  }\n\n  public async historyCallback(instruction: INavigationInstruction): Promise<void> {\n    if (this.options.reportCallback) {\n      this.options.reportCallback(instruction);\n    }\n\n    if (instruction.isCancel) {\n      return Promise.resolve();\n    }\n\n    let clearViewports: boolean = false;\n    if (instruction.isBack || instruction.isForward) {\n      instruction.path = instruction.fullStatePath;\n    }\n    const path = instruction.path;\n    if (path === this.separators.clear || path.startsWith(this.separators.clear + this.separators.add)) {\n      clearViewports = true;\n      if (path.startsWith(this.separators.clear)) {\n        instruction.path = path.substr(1);\n      }\n    }\n\n    let title;\n    let views: Object;\n    let route: IRoute = this.findRoute(instruction);\n    if (route) {\n      if (route.redirect) {\n        route = this.resolveRedirect(route, instruction.data);\n        this.isRedirecting = true;\n        this.historyBrowser.redirect(route.path, route.title, instruction.data);\n        return Promise.resolve();\n      }\n\n      if (route.title) {\n        title = route.title;\n      }\n\n      views = route.viewports;\n    } else {\n      views = this.findViews(instruction);\n    }\n\n    if (!views && !Object.keys(views).length && !clearViewports) {\n      return Promise.resolve();\n    }\n\n    if (title) {\n      this.historyBrowser.setEntryTitle(title);\n    }\n\n    const usedViewports = (clearViewports ? this.rootScope.allViewports().filter((value) => value.component !== null) : []);\n\n    // TODO: Take care of cancellations down in subsets/iterations\n    let { componentViewports, viewportsRemaining } = this.rootScope.findViewports(views);\n    let guard = 100;\n    while (componentViewports.length || viewportsRemaining) {\n      // Guard against endless loop\n      if (!guard--) {\n        break;\n      }\n      const changedViewports: Viewport[] = [];\n      for (const componentViewport of componentViewports) {\n        const { component, viewport } = componentViewport;\n        if (viewport.setNextContent(component, instruction)) {\n          changedViewports.push(viewport);\n        }\n        const usedIndex = usedViewports.findIndex((value) => value === viewport);\n        if (usedIndex >= 0) {\n          usedViewports.splice(usedIndex, 1);\n        }\n      }\n      for (const viewport of usedViewports) {\n        if (viewport.setNextContent(this.separators.clear, instruction)) {\n          changedViewports.push(viewport);\n        }\n      }\n\n      // We've gone via a redirected route back to same viewport status so\n      // we need to remove the added history entry for the redirect\n      // TODO: Take care of empty subsets/iterations where previous has length\n      if (!changedViewports.length && this.isRedirecting) {\n        this.historyBrowser.cancel();\n        this.isRedirecting = false;\n      }\n\n      let results = await Promise.all(changedViewports.map((value) => value.canLeave()));\n      if (results.findIndex((value) => value === false) >= 0) {\n        this.historyBrowser.cancel();\n        return Promise.resolve();\n      }\n      results = await Promise.all(changedViewports.map((value) => value.canEnter()));\n      if (results.findIndex((value) => value === false) >= 0) {\n        this.historyBrowser.cancel();\n        return Promise.resolve();\n      }\n      results = await Promise.all(changedViewports.map((value) => value.loadContent()));\n      // TODO: Remove this once multi level recursiveness has been fixed\n      // if (results.findIndex((value) => value === false) >= 0) {\n      //   this.historyBrowser.cancel();\n      //   return Promise.resolve();\n      // }\n\n      // TODO: Fix multi level recursiveness!\n      const remaining = this.rootScope.findViewports();\n      componentViewports = remaining.componentViewports;\n      viewportsRemaining = remaining.viewportsRemaining;\n    }\n    // TODO: Make sure replace paths isn't called on wrong (later) navigation\n    this.replacePaths();\n  }\n\n  // public view(views: Object, title?: string, data?: Object): Promise<void> {\n  //   console.log('Router.view:', views, title, data);\n\n  // tslint:disable-next-line:no-commented-code\n  //   if (title) {\n  //     this.historyBrowser.setEntryTitle(title);\n  //   }\n\n  // tslint:disable-next-line:no-commented-code\n  //   const viewports: Viewport[] = [];\n  //   for (const v in views) {\n  //     const component: ICustomElementType = views[v];\n  //     const viewport = this.findViewport(`${v}:${component}`);\n  //     if (viewport.setNextContent(component, { path: '' })) {\n  //       viewports.push(viewport);\n  //     }\n  //   }\n\n  // tslint:disable-next-line:no-commented-code\n  //   // We've gone via a redirected route back to same viewport status so\n  //   // we need to remove the added history entry for the redirect\n  //   if (!viewports.length && this.isRedirecting) {\n  //     this.historyBrowser.cancel();\n  //     this.isRedirecting = false;\n  //   }\n\n  // tslint:disable-next-line:no-commented-code\n  //   let cancel: boolean = false;\n  //   return Promise.all(viewports.map((value) => value.canLeave()))\n  //     .then((promises: boolean[]) => {\n  //       if (cancel || promises.findIndex((value) => value === false) >= 0) {\n  //         cancel = true;\n  //         return Promise.resolve([]);\n  //       } else {\n  //         return Promise.all(viewports.map((value) => value.canEnter()));\n  //       }\n  //     }).then((promises: boolean[]) => {\n  //       if (cancel || promises.findIndex((value) => value === false) >= 0) {\n  //         cancel = true;\n  //         return Promise.resolve([]);\n  //       } else {\n  //         return Promise.all(viewports.map((value) => value.loadContent()));\n  //       }\n  //     }).then(() => {\n  //       if (cancel) {\n  //         this.historyBrowser.cancel();\n  //       }\n  //     }).then(() => {\n  //       const viewports = Object.values(this.viewports).map((value) => value.description()).filter((value) => value && value.length);\n  //       this.historyBrowser.history.replaceState({}, null, '#/' + viewports.join('/'));\n  //     });\n  // }\n\n  public findRoute(entry: IHistoryEntry): IRoute {\n    return this.routes.find((value) => value.path === entry.path);\n  }\n  public resolveRedirect(route: IRoute, data?: Object): IRoute {\n    while (route.redirect) {\n      const redirectRoute: IRoute = this.findRoute({\n        path: route.redirect,\n        fullStatePath: route.redirect,\n        data: data,\n      });\n      if (redirectRoute) {\n        route = redirectRoute;\n      } else {\n        break;\n      }\n    }\n    return route;\n  }\n\n  public findViews(entry: IHistoryEntry): Object {\n    const views: Object = {};\n    let path = entry.path;\n    // TODO: Let this govern start of scope\n    if (path.startsWith('/')) {\n      path = path.substr(1);\n    }\n    let sections: string[] = path.split(this.separators.sibling);\n\n    // TODO: Remove this once multi level recursiveness is fixed\n    // Expand with instances for all containing views\n    // const expandedSections: string[] = [];\n    // while (sections.length) {\n    //   const part = sections.shift();\n    //   const parts = part.split(this.separators.scope);\n    //   for (let i = 1; i <= parts.length; i++) {\n    //     expandedSections.push(parts.slice(0, i).join(this.separators.scope));\n    //   }\n    // }\n    // sections = expandedSections;\n\n    let index = 0;\n    while (sections.length) {\n      const view = sections.shift();\n      // TODO: implement parameters\n      // As a = part at the end of the view!\n      const scopes = view.split(this.separators.scope);\n      const leaf = scopes.pop();\n      const parts = leaf.split(this.separators.viewport);\n      // Noooooo?\n      const component = parts[0];\n      scopes.push(parts.length ? parts.join(this.separators.viewport) : `?${index++}`);\n      const name = scopes.join(this.separators.scope);\n      if (component) {\n        views[name] = component;\n      }\n    }\n    return views;\n  }\n\n  // public findViewport(name: string): Viewport {\n  //   return this.rootScope.findViewport(name);\n  // }\n\n  public findScope(element: Element): Scope {\n    if (!this.rootScope) {\n      const aureliaRootElement = this.container.get(Aurelia).root().$host;\n      this.rootScope = new Scope(this, aureliaRootElement as Element, null);\n      this.scopes.push(this.rootScope);\n    }\n    return this.closestScope(element);\n  }\n\n  // Called from the viewport custom element in attached()\n  public addViewport(name: string, element: Element, options?: IViewportOptions): Viewport {\n    // tslint:disable-next-line:no-console\n    console.log('Viewport added', name, element);\n    const parentScope = this.findScope(element);\n    return parentScope.addViewport(name, element, options);\n  }\n  // Called from the viewport custom element\n  public removeViewport(viewport: Viewport): void {\n    // TODO: There's something hinky with remove!\n    const scope = viewport.owningScope;\n    if (!scope.removeViewport(viewport)) {\n      this.removeScope(scope);\n    }\n  }\n\n  public removeScope(scope: Scope): void {\n    if (scope !== this.rootScope) {\n      scope.removeScope();\n      const index = this.scopes.indexOf(scope);\n      if (index >= 0) {\n        this.scopes.splice(index, 1);\n      }\n    }\n  }\n\n  public addRoute(route: IRoute): void {\n    this.routes.push(route);\n  }\n\n  public goto(pathOrViewports: string | Object, title?: string, data?: Object): void {\n    if (typeof pathOrViewports === 'string') {\n      this.historyBrowser.goto(pathOrViewports, title, data);\n    }\n    // else {\n    //   this.view(pathOrViewports, title, data);\n    // }\n  }\n\n  public replace(pathOrViewports: string | Object, title?: string, data?: Object): void {\n    if (typeof pathOrViewports === 'string') {\n      this.historyBrowser.replace(pathOrViewports, title, data);\n    }\n  }\n\n  public refresh(): void {\n    this.historyBrowser.refresh();\n  }\n\n  public back(): void {\n    this.historyBrowser.back();\n  }\n\n  public forward(): void {\n    this.historyBrowser.forward();\n  }\n\n  private closestScope(element: Element): Scope {\n    let closest: number = Number.MAX_SAFE_INTEGER;\n    let scope: Scope;\n    for (const sc of this.scopes) {\n      let el = element;\n      let i = 0;\n      while (el) {\n        if (el === sc.element) {\n          break;\n        }\n        i++;\n        el = el.parentElement;\n      }\n      if (i < closest) {\n        closest = i;\n        scope = sc;\n      }\n    }\n    return scope;\n  }\n\n  private removeStateDuplicates(states: string[]): string[] {\n    let sorted: string[] = states.slice().sort((a, b) => b.split(this.separators.scope).length - a.split(this.separators.scope).length);\n    sorted = sorted.map((value) => `${this.separators.scope}${value}${this.separators.scope}`);\n\n    let unique: string[] = [];\n    if (sorted.length) {\n      unique.push(sorted.shift());\n      while (sorted.length) {\n        const state = sorted.shift();\n        if (unique.find((value) => {\n          return value.indexOf(state) === -1;\n        })) {\n          unique.push(state);\n        }\n      }\n    }\n    unique = unique.map((value) => value.substring(1, value.length - 1));\n    unique.sort((a, b) => a.split(this.separators.scope).length - b.split(this.separators.scope).length);\n\n    return unique;\n  }\n\n  private replacePaths(): void {\n    let viewportStates = this.rootScope.viewportStates();\n    viewportStates = this.removeStateDuplicates(viewportStates);\n    let fullViewportStates = this.rootScope.viewportStates(true);\n    fullViewportStates = this.removeStateDuplicates(fullViewportStates);\n    fullViewportStates.unshift(this.separators.clear);\n    this.historyBrowser.replacePath(viewportStates.join(this.separators.sibling), fullViewportStates.join(this.separators.sibling));\n  }\n}\n","import { inject } from '@aurelia/kernel';\nimport { bindable, customElement } from '@aurelia/runtime';\nimport { Router } from '../router';\nimport { IViewportOptions, Viewport } from '../viewport';\n\n@inject(Router, Element)\n@customElement({ name: 'au-viewport', template: '<template><div class=\"viewport-header\"> Viewport: <b>${name}</b> </div></template>' })\nexport class ViewportCustomElement {\n  @bindable public name: string = 'default';\n  @bindable public scope: boolean;\n  @bindable public usedBy: string;\n\n  public viewport: Viewport;\n\n  constructor(private router: Router, private element: Element) { }\n\n  public attached(): void {\n    const options: IViewportOptions = { scope: this.element.hasAttribute('scope') };\n    if (this.usedBy && this.usedBy.length) {\n      options.usedBy = this.usedBy;\n    }\n    this.viewport = this.router.addViewport(this.name, this.element, options);\n  }\n  public unbound(): void {\n    this.router.removeViewport(this.viewport);\n  }\n}\n"],"names":["CustomElementResource","IDOM","IProjectorLocator","IRenderingEngine","LifecycleFlags","PLATFORM","Router","Aurelia","inject","IContainer","ViewportCustomElement","tslib_1.__decorate","bindable","customElement"],"mappings":"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"}