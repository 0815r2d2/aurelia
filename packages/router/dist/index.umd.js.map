{"version":3,"file":"index.umd.js","sources":["../src/queued-browser-history.ts","../src/history-browser.ts","../src/link-handler.ts","../src/viewport-instruction.ts","../src/nav-route.ts","../src/nav.ts","../src/route-recognizer.ts","../src/instruction-resolver.ts","../src/parser.ts","../src/viewport-content.ts","../src/viewport.ts","../src/scope.ts","../src/utils.ts","../src/router.ts","../../../node_modules/tslib/tslib.es6.js","../src/resources/viewport.ts","../src/resources/nav.ts"],"sourcesContent":["import { PLATFORM, Reporter } from '@aurelia/kernel';\n\nexport interface QueuedBrowserHistory extends History {\n  activate(callback: (ev?: PopStateEvent) => void): void;\n  deactivate(): void;\n}\n\ninterface QueueItem {\n  target: object;\n  methodName: string;\n  parameters: unknown[];\n  // TODO: Could someone verify this? It's the resolve from a Promise<void>\n  resolve: ((value?: void | PromiseLike<void>) => void);\n}\n\nexport class QueuedBrowserHistory implements QueuedBrowserHistory {\n  public window: Window;\n  public history: History;\n\n  private readonly queue: QueueItem[];\n  private isActive: boolean;\n  private currentHistoryActivity: QueueItem;\n  private callback: (ev?: PopStateEvent) => void;\n\n  private goResolve: ((value?: void | PromiseLike<void>) => void);\n  private suppressPopstateResolve: ((value?: void | PromiseLike<void>) => void);\n\n  constructor() {\n    this.window = window;\n    this.history = window.history;\n    this.queue = [];\n    this.isActive = false;\n    this.currentHistoryActivity = null;\n    this.callback = null;\n    this.goResolve = null;\n    this.suppressPopstateResolve = null;\n  }\n\n  public activate(callback: (ev?: PopStateEvent) => void): void {\n    if (this.isActive) {\n      throw Reporter.error(2003);\n    }\n    this.isActive = true;\n    this.callback = callback;\n    PLATFORM.ticker.add(this.dequeue, this);\n    this.window.addEventListener('popstate', this.handlePopstate);\n  }\n  public deactivate(): void {\n    this.window.removeEventListener('popstate', this.handlePopstate);\n    PLATFORM.ticker.remove(this.dequeue, this);\n    this.callback = null;\n    this.isActive = false;\n  }\n\n  get length(): number {\n    return this.history.length;\n  }\n  // tslint:disable-next-line:no-any - typed according to DOM\n  get state(): any {\n    return this.history.state;\n  }\n  get scrollRestoration(): ScrollRestoration {\n    return this.history.scrollRestoration;\n  }\n\n  public async go(delta?: number, suppressPopstate: boolean = false): Promise<void> {\n    if (!suppressPopstate) {\n      return this.enqueue(this, '_go', [delta], true);\n    }\n    const promise = this.enqueue(this, 'suppressPopstate', [], true);\n    this.enqueue(this.history, 'go', [delta]).catch(error => { throw error; });\n    return promise;\n  }\n  public back(): Promise<void> {\n    return this.go(-1);\n  }\n  public forward(): Promise<void> {\n    return this.go(1);\n  }\n\n  // tslint:disable-next-line:no-any - typed according to DOM\n  public async pushState(data: any, title: string, url?: string | null): Promise<void> {\n    return this.enqueue(this.history, 'pushState', [data, title, url]);\n  }\n\n  // tslint:disable-next-line:no-any - typed according to DOM\n  public async replaceState(data: any, title: string, url?: string | null): Promise<void> {\n    return this.enqueue(this.history, 'replaceState', [data, title, url]);\n  }\n\n  private readonly handlePopstate = async (ev: PopStateEvent): Promise<void> => {\n    return this.enqueue(this, 'popstate', [ev]);\n  }\n\n  private async popstate(ev: PopStateEvent): Promise<void> {\n    if (!this.suppressPopstateResolve) {\n      if (this.goResolve) {\n        const resolve = this.goResolve;\n        this.goResolve = null;\n        resolve();\n        await Promise.resolve();\n      }\n      this.callback(ev);\n    } else {\n      const resolve = this.suppressPopstateResolve;\n      this.suppressPopstateResolve = null;\n      resolve();\n    }\n  }\n\n  private _go(delta: number, resolve: ((value?: void | PromiseLike<void>) => void)): void {\n    this.goResolve = resolve;\n    this.history.go(delta);\n  }\n\n  private suppressPopstate(resolve: ((value?: void | PromiseLike<void>) => void)): void {\n    this.suppressPopstateResolve = resolve;\n  }\n\n  private enqueue(target: object, methodName: string, parameters: unknown[], resolveInParameters: boolean = false): Promise<void> {\n    let _resolve;\n    // tslint:disable-next-line:promise-must-complete\n    const promise: Promise<void> = new Promise((resolve) => {\n      _resolve = resolve;\n    });\n    if (resolveInParameters) {\n      parameters.push(_resolve);\n      _resolve = null;\n    }\n    this.queue.push({\n      target: target,\n      methodName: methodName,\n      parameters: parameters,\n      resolve: _resolve,\n    });\n    return promise;\n  }\n\n  private async dequeue(delta?: number): Promise<void> {\n    if (!this.queue.length || this.currentHistoryActivity !== null) {\n      return;\n    }\n    this.currentHistoryActivity = this.queue.shift();\n    const method = this.currentHistoryActivity.target[this.currentHistoryActivity.methodName];\n    Reporter.write(10000, 'DEQUEUE', this.currentHistoryActivity.methodName, this.currentHistoryActivity.parameters);\n    method.apply(this.currentHistoryActivity.target, this.currentHistoryActivity.parameters);\n    const resolve = this.currentHistoryActivity.resolve;\n    this.currentHistoryActivity = null;\n    if (resolve) {\n      resolve();\n    }\n  }\n}\n","import { Reporter } from '@aurelia/kernel';\nimport { QueuedBrowserHistory } from './queued-browser-history';\nexport interface IHistoryEntry {\n  path: string;\n  fullStatePath: string;\n  index?: number;\n  firstEntry?: boolean; // Index might change to not require first === 0, firstEntry should be reliable\n  title?: string;\n  query?: string;\n  parameters?: Record<string, string>;\n  parameterList?: string[];\n  data?: Record<string, unknown>;\n}\n\nexport interface IHistoryOptions {\n  callback?(instruction: INavigationInstruction): void;\n}\n\nexport interface INavigationFlags {\n  isFirst?: boolean;\n  isNew?: boolean;\n  isRefresh?: boolean;\n  isForward?: boolean;\n  isBack?: boolean;\n  isReplace?: boolean;\n  isCancel?: boolean;\n  isRepeat?: boolean;\n}\n\nexport interface INavigationInstruction extends IHistoryEntry, INavigationFlags {\n  previous?: IHistoryEntry;\n}\n\nexport class HistoryBrowser {\n  public currentEntry: IHistoryEntry;\n  public historyEntries: IHistoryEntry[];\n  public historyOffset: number;\n  public replacedEntry: IHistoryEntry;\n\n  public history: QueuedBrowserHistory;\n  public location: Location;\n\n  private activeEntry: IHistoryEntry;\n\n  private options: IHistoryOptions;\n  private isActive: boolean;\n\n  private lastHistoryMovement: number;\n  private cancelRedirectHistoryMovement: number;\n  private isCancelling: boolean;\n  private isReplacing: boolean;\n  private isRefreshing: boolean;\n\n  constructor() {\n    this.location = window.location;\n    this.history = new QueuedBrowserHistory();\n\n    this.currentEntry = null;\n    this.historyEntries = null;\n    this.historyOffset = null;\n    this.replacedEntry = null;\n\n    this.activeEntry = null;\n\n    this.options = null;\n    this.isActive = false;\n\n    this.lastHistoryMovement = null;\n    this.cancelRedirectHistoryMovement = null;\n    this.isCancelling = false;\n    this.isReplacing = false;\n    this.isRefreshing = false;\n  }\n\n  public activate(options?: IHistoryOptions): Promise<void> {\n    if (this.isActive) {\n      throw Reporter.error(0); // TODO: create error code for 'History has already been activated.'\n    }\n\n    this.isActive = true;\n    this.options = { ...options };\n\n    this.history.activate(this.pathChanged);\n\n    return Promise.resolve().then(() => {\n      this.setPath(this.getPath(), true).catch(error => { throw error; });\n    });\n  }\n\n  public deactivate(): void {\n    this.history.deactivate();\n    this.isActive = false;\n  }\n\n  public goto(path: string, title?: string, data?: Record<string, unknown>): Promise<void> {\n    this.activeEntry = {\n      path: path,\n      fullStatePath: null,\n      title: title,\n      data: data,\n    };\n    return this.setPath(path);\n  }\n\n  public replace(path: string, title?: string, data?: Record<string, unknown>): Promise<void> {\n    this.isReplacing = true;\n    this.activeEntry = {\n      path: path,\n      fullStatePath: null,\n      title: title,\n      data: data,\n    };\n    return this.setPath(path, true);\n  }\n  public redirect(path: string, title?: string, data?: Record<string, unknown>): Promise<void> {\n    // This makes sure we can cancel redirects from both pushes and replaces\n    this.cancelRedirectHistoryMovement = this.lastHistoryMovement + 1;\n    return this.replace(path, title, data);\n  }\n\n  public async refresh(): Promise<void> {\n    if (!this.currentEntry) {\n      return;\n    }\n    this.isRefreshing = true;\n    return this.replace(this.currentEntry.path, this.currentEntry.title, this.currentEntry.data);\n  }\n\n  public back(): Promise<void> {\n    return this.history.go(-1);\n  }\n\n  public forward(): Promise<void> {\n    return this.history.go(1);\n  }\n\n  public cancel(): Promise<void> {\n    this.isCancelling = true;\n    const movement = this.lastHistoryMovement || this.cancelRedirectHistoryMovement;\n    if (movement) {\n      return this.history.go(-movement);\n    } else {\n      return this.replace(this.replacedEntry.path, this.replacedEntry.title, this.replacedEntry.data);\n    }\n  }\n\n  public async pop(): Promise<void> {\n    await this.history.go(-1, true);\n    const path = this.location.toString();\n    const state = this.history.state;\n    // TODO: Fix browser forward bug after pop on first entry\n    if (!state.HistoryEntry.firstEntry) {\n      await this.history.go(-1, true);\n      return this.history.pushState(state, null, path);\n    }\n  }\n\n  public async setState(key: string | Record<string, unknown>, value?: Record<string, unknown>): Promise<void> {\n    const { pathname, search, hash } = this.location;\n    let state = { ...this.history.state };\n    if (typeof key === 'string') {\n      state[key] = JSON.parse(JSON.stringify(value));\n    } else {\n      state = { ...state, ...JSON.parse(JSON.stringify(key)) };\n    }\n    return this.history.replaceState(state, null, `${pathname}${search}${hash}`);\n  }\n\n  public getState(key: string): Record<string, unknown> {\n    const state = { ...this.history.state };\n    return state[key];\n  }\n\n  public setEntryTitle(title: string): Promise<void> {\n    this.currentEntry.title = title;\n    this.historyEntries[this.currentEntry.index] = this.currentEntry;\n    return this.setState({\n      'HistoryEntries': this.historyEntries,\n      'HistoryEntry': this.currentEntry,\n    });\n  }\n\n  public replacePath(path: string, fullStatePath: string, entry: INavigationInstruction): Promise<void> {\n    if (entry.index !== this.currentEntry.index) {\n      // TODO: Store unresolved in localStorage to set if we should ever navigate back to it\n      // tslint:disable-next-line:no-console\n      console.warn('replacePath: entry not matching currentEntry', entry, this.currentEntry);\n      return;\n    }\n\n    const newHash = `#/${path}`;\n    const { pathname, search, hash } = this.location;\n    // tslint:disable-next-line:possible-timing-attack\n    if (newHash === hash && this.currentEntry.path === path && this.currentEntry.fullStatePath === fullStatePath) {\n      return;\n    }\n    this.currentEntry.path = path;\n    this.currentEntry.fullStatePath = fullStatePath;\n    const state = {\n      ...this.history.state,\n      ...{\n        'HistoryEntry': this.currentEntry,\n        'HistoryEntries': this.historyEntries,\n      }\n    };\n    return this.history.replaceState(state, null, `${pathname}${search}${newHash}`);\n  }\n\n  public setHash(hash: string): void {\n    if (!hash.startsWith('#')) {\n      hash = `#${hash}`;\n    }\n    this.location.hash = hash;\n  }\n\n  get titles(): string[] {\n    return (this.historyEntries ? this.historyEntries.slice(0, this.currentEntry.index + 1).map((value) => value.title) : []);\n  }\n\n  public pathChanged = async (): Promise<void> => {\n    const path: string = this.getPath();\n    const search: string = this.getSearch();\n    Reporter.write(10000, 'path changed to', path, this.activeEntry, this.currentEntry);\n\n    const navigationFlags: INavigationFlags = {};\n\n    let previousEntry: IHistoryEntry;\n    let historyEntry: IHistoryEntry = this.getState('HistoryEntry') as IHistoryEntry;\n    if (this.activeEntry && this.activeEntry.path === path) { // Only happens with new history entries (including replacing ones)\n      navigationFlags.isNew = true;\n      const index = (this.isReplacing ? this.currentEntry.index : this.history.length - this.historyOffset);\n      previousEntry = this.currentEntry;\n      this.currentEntry = this.activeEntry;\n      this.currentEntry.index = index;\n      if (this.isReplacing) {\n        this.lastHistoryMovement = 0;\n        this.historyEntries[this.currentEntry.index] = this.currentEntry;\n        if (this.isCancelling) {\n          navigationFlags.isCancel = true;\n          this.isCancelling = false;\n          // Prevent another cancel by clearing lastHistoryMovement?\n        } else if (this.isRefreshing) {\n          navigationFlags.isRefresh = true;\n          this.isRefreshing = false;\n        } else {\n          navigationFlags.isReplace = true;\n        }\n        this.isReplacing = false;\n      } else {\n        this.lastHistoryMovement = 1;\n        this.historyEntries = this.historyEntries.slice(0, this.currentEntry.index);\n        this.historyEntries.push(this.currentEntry);\n      }\n      await this.setState({\n        'HistoryEntries': this.historyEntries,\n        'HistoryOffset': this.historyOffset,\n        'HistoryEntry': this.currentEntry\n      });\n    } else { // Refresh, history navigation, first navigation, manual navigation or cancel\n      this.historyEntries = (this.historyEntries || this.getState('HistoryEntries') || []) as IHistoryEntry[];\n      // tslint:disable-next-line:strict-boolean-expressions\n      this.historyOffset = (this.historyOffset || this.getState('HistoryOffset') || 0) as number;\n      if (!historyEntry && !this.currentEntry) {\n        navigationFlags.isNew = true;\n        navigationFlags.isFirst = true;\n        this.historyOffset = this.history.length;\n      } else if (!historyEntry) {\n        navigationFlags.isNew = true;\n      } else if (!this.currentEntry) {\n        navigationFlags.isRefresh = true;\n      } else if (this.currentEntry.index < historyEntry.index) {\n        navigationFlags.isForward = true;\n      } else if (this.currentEntry.index > historyEntry.index) {\n        navigationFlags.isBack = true;\n      }\n\n      if (!historyEntry) {\n        // TODO: max history length of 50, find better new index\n        historyEntry = {\n          path: path,\n          fullStatePath: null,\n          index: this.history.length - this.historyOffset,\n          query: search,\n        };\n        if (navigationFlags.isFirst) {\n          historyEntry.firstEntry = true;\n        }\n        this.historyEntries = this.historyEntries.slice(0, historyEntry.index);\n        this.historyEntries.push(historyEntry);\n        await this.setState({\n          'HistoryEntries': this.historyEntries,\n          'HistoryOffset': this.historyOffset,\n          'HistoryEntry': historyEntry\n        });\n      }\n      this.lastHistoryMovement = (this.currentEntry ? historyEntry.index - this.currentEntry.index : 0);\n      previousEntry = this.currentEntry;\n      this.currentEntry = historyEntry;\n\n      if (this.isCancelling) {\n        navigationFlags.isCancel = true;\n        this.isCancelling = false;\n        // Prevent another cancel by clearing lastHistoryMovement?\n      }\n    }\n    this.activeEntry = null;\n\n    if (this.cancelRedirectHistoryMovement) {\n      this.cancelRedirectHistoryMovement--;\n    }\n\n    Reporter.write(10000, 'navigated', this.getState('HistoryEntry'), this.historyEntries, this.getState('HistoryOffset'));\n    this.callback(this.currentEntry, navigationFlags, previousEntry);\n  }\n\n  private getPath(): string {\n    const hash = this.location.hash.substring(1);\n    return hash.split('?')[0];\n  }\n  private async setPath(path: string, replace: boolean = false): Promise<void> {\n    // More checks, such as parameters, needed\n    if (this.currentEntry && this.currentEntry.path === path && !this.isRefreshing) {\n      return;\n    }\n\n    const { pathname, search } = this.location;\n    const hash = `#${path}`;\n    if (replace) {\n      this.replacedEntry = this.currentEntry;\n      await this.history.replaceState({}, null, `${pathname}${search}${hash}`);\n    } else {\n      // tslint:disable-next-line:no-commented-code\n      // this.location.hash = hash;\n      await this.history.pushState({}, null, `${pathname}${search}${hash}`);\n    }\n    return this.pathChanged();\n  }\n\n  private getSearch(): string {\n    const hash = this.location.hash.substring(1);\n    const hashSearches = hash.split('?');\n    hashSearches.shift();\n    return hashSearches.length > 0 ? hashSearches.shift() : '';\n  }\n\n  private callback(currentEntry: IHistoryEntry, navigationFlags: INavigationFlags, previousEntry: IHistoryEntry): void {\n    const instruction: INavigationInstruction = { ...currentEntry, ...navigationFlags };\n    instruction.previous = previousEntry;\n    Reporter.write(10000, 'callback', currentEntry, navigationFlags);\n    if (this.options.callback) {\n      this.options.callback(instruction);\n    }\n  }\n}\n","import { Reporter } from '@aurelia/kernel';\n\n/**\n * Provides information about how to handle an anchor event.\n */\nexport interface ILinkHandlerOptions {\n  /**\n   * Callback method for when a link is clicked\n   */\n  callback?(info: AnchorEventInfo): void;\n}\n\n/**\n * Provides information about how to handle an anchor event.\n */\nexport interface AnchorEventInfo {\n  /**\n   * Indicates whether the event should be handled or not.\n   */\n  shouldHandleEvent: boolean;\n  /**\n   * The href of the link or null if not-applicable.\n   */\n  href: string;\n  /**\n   * The anchor element or null if not-applicable.\n   */\n  anchor: Element;\n}\n\n/**\n * Class responsible for handling interactions that should trigger navigation.\n */\nexport class LinkHandler {\n  private static readonly window: Window;\n\n  private options: ILinkHandlerOptions;\n  private isActive: boolean = false;\n\n  // private handler: EventListener;\n  private readonly document: Document;\n\n  constructor() {\n    this.document = document;\n  }\n  /**\n   * Gets the href and a \"should handle\" recommendation, given an Event.\n   *\n   * @param event The Event to inspect for target anchor and href.\n   */\n  private static getEventInfo(event: Event): AnchorEventInfo {\n    const info = {\n      shouldHandleEvent: false,\n      href: null,\n      anchor: null\n    };\n\n    const target = LinkHandler.closestAnchor(event.target as Element);\n    if (!target || !LinkHandler.targetIsThisWindow(target)) {\n      return info;\n    }\n\n    if (target.hasAttribute('external')) {\n      return info;\n    }\n\n    if ((event as MouseEvent).altKey || (event as MouseEvent).ctrlKey || (event as MouseEvent).metaKey || (event as MouseEvent).shiftKey) {\n      return info;\n    }\n\n    const href = target.getAttribute('href');\n    info.anchor = target;\n    info.href = href;\n\n    const leftButtonClicked = (event as MouseEvent).which === 1;\n\n    info.shouldHandleEvent = leftButtonClicked;\n    return info;\n  }\n\n  /**\n   * Finds the closest ancestor that's an anchor element.\n   *\n   * @param el The element to search upward from.\n   * @returns The link element that is the closest ancestor.\n   */\n  private static closestAnchor(el: Element): Element {\n    while (el) {\n      if (el.tagName === 'A') {\n        return el;\n      }\n      el = el.parentNode as Element;\n    }\n  }\n\n  /**\n   * Gets a value indicating whether or not an anchor targets the current window.\n   *\n   * @param target The anchor element whose target should be inspected.\n   * @returns True if the target of the link element is this window; false otherwise.\n   */\n  private static targetIsThisWindow(target: Element): boolean {\n    const targetWindow = target.getAttribute('target');\n    const win = LinkHandler.window;\n\n    return !targetWindow ||\n      targetWindow === win.name ||\n      targetWindow === '_self';\n  }\n\n  /**\n   * Activate the instance.\n   *\n   */\n  public activate(options: ILinkHandlerOptions): void {\n    if (this.isActive) {\n      throw Reporter.error(2004);\n    }\n\n    this.isActive = true;\n    this.options = { ...options };\n\n    this.document.addEventListener('click', this.handler, true);\n  }\n\n  /**\n   * Deactivate the instance. Event handlers and other resources should be cleaned up here.\n   */\n  public deactivate(): void {\n    this.document.removeEventListener('click', this.handler, true);\n    this.isActive = false;\n  }\n\n  private readonly handler: EventListener = (e) => {\n    const info = LinkHandler.getEventInfo(e);\n\n    if (info.shouldHandleEvent) {\n      e.preventDefault();\n      this.options.callback(info);\n    }\n  }\n}\n","import { IContainer } from '@aurelia/kernel';\nimport { CustomElementResource, ICustomElementType, IRenderContext } from '@aurelia/runtime';\nimport { Router } from './router';\nimport { Viewport } from './viewport';\nimport { IRouteableCustomElementType } from './viewport-content';\n\nexport class ViewportInstruction {\n  public component?: Partial<ICustomElementType>;\n  public componentName?: string;\n  public viewport?: Viewport;\n  public viewportName?: string;\n  public parametersString?: string;\n  public parameters?: Record<string, unknown>;\n  public parametersList?: string[];\n\n  constructor(component: Partial<ICustomElementType> | string, viewport?: Viewport | string, parameters?: Record<string, unknown> | string) {\n    this.initialize(component, viewport, parameters);\n  }\n\n  public initialize(component: Partial<ICustomElementType> | string, viewport?: Viewport | string, parameters?: Record<string, unknown> | string): void {\n    if (typeof component === 'string') {\n      this.componentName = component;\n      this.component = null;\n    } else {\n      this.component = component;\n      this.componentName = component.description.name;\n    }\n    if (typeof viewport === 'string') {\n      this.viewportName = viewport;\n      this.viewport = null;\n    } else {\n      this.viewport = viewport;\n      if (viewport) {\n        this.viewportName = viewport.name;\n      }\n    }\n    if (typeof parameters === 'string') {\n      this.parametersString = parameters;\n      // TODO: Initialize parameters better and more of them and just fix this\n      this.parameters = { id: parameters };\n    } else {\n      this.parameters = parameters;\n      // TODO: Create parametersString\n    }\n    // TODO: Deal with parametersList\n  }\n\n  public componentType(context: IRenderContext): IRouteableCustomElementType {\n    if (this.component !== null) {\n      return this.component;\n    }\n    const container = context.get(IContainer);\n    const resolver = container.getResolver(CustomElementResource.keyFrom(this.componentName));\n    if (resolver !== null) {\n      return resolver.getFactory(container).Type as IRouteableCustomElementType;\n    }\n    return null;\n  }\n\n  public viewportInstance(router: Router): Viewport {\n    if (this.viewport !== null) {\n      return this.viewport;\n    }\n    return router.allViewports()[this.viewportName];\n  }\n\n  public sameComponent(other: ViewportInstruction, compareParameters: boolean = false, compareType: boolean = false): boolean {\n    if (compareParameters && this.parametersString !== other.parametersString) {\n      return false;\n    }\n    return compareType ? this.component === other.component : this.componentName === other.componentName;\n  }\n}\n","import { ICustomElementType, INode, IObserverLocator, IPropertyObserver, LifecycleFlags } from '@aurelia/runtime';\nimport { INavRoute, IViewportComponent, Nav, NavInstruction } from './nav';\nimport { Router } from './router';\nimport { ViewportInstruction } from './viewport-instruction';\n\nexport class NavRoute {\n  public nav: Nav;\n  public instructions: ViewportInstruction[];\n  public title: string;\n  public link?: string;\n  public linkActive?: string;\n  public children?: NavRoute[];\n  public meta?: Record<string, unknown>;\n\n  public active: string = '';\n\n  private readonly observerLocator: IObserverLocator;\n  private readonly observer: IPropertyObserver<Router, 'activeComponents'>;\n\n  constructor(nav: Nav, route?: INavRoute) {\n    this.nav = nav;\n    Object.assign(this, {\n      title: route.title,\n      children: null,\n      meta: route.meta,\n      active: '',\n    });\n    this.instructions = this.parseRoute(route.route);\n    this.link = this._link(this.instructions);\n    this.linkActive = route.consideredActive ? this._link(this.parseRoute(route.consideredActive)) : this.link;\n    this.observerLocator = this.nav.router.container.get(IObserverLocator);\n    this.observer = this.observerLocator.getObserver(LifecycleFlags.none, this.nav.router, 'activeComponents') as IPropertyObserver<Router, 'activeComponents'>;\n    this.observer.subscribe(this);\n  }\n\n  public get hasChildren(): string {\n    return (this.children && this.children.length ? 'nav-has-children' : '');\n  }\n\n  public handleChange(): void {\n    if (this.link && this.link.length) {\n      this.active = this._active();\n    } else {\n      this.active = (this.active === 'nav-active' ? 'nav-active' : (this.activeChild() ? 'nav-active-child' : ''));\n    }\n  }\n\n  public _active(): string {\n    const components = this.nav.router.instructionResolver.viewportInstructionsFromString(this.linkActive);\n    const activeComponents = this.nav.router.activeComponents.map((state) => this.nav.router.instructionResolver.parseViewportInstruction(state));\n    for (const component of components) {\n      if (!activeComponents.find((active) => active.sameComponent(component))) {\n        return '';\n      }\n    }\n    return 'nav-active';\n  }\n\n  public toggleActive(): void {\n    this.active = (this.active.startsWith('nav-active') ? '' : 'nav-active');\n  }\n\n  public _link(instructions: ViewportInstruction[]): string {\n    return this.nav.router.instructionResolver.viewportInstructionsToString(instructions);\n  }\n\n  private parseRoute(routes: NavInstruction | NavInstruction[]): ViewportInstruction[] {\n    if (!Array.isArray(routes)) {\n      return this.parseRoute([routes]);\n    }\n    const instructions: ViewportInstruction[] = [];\n    for (const route of routes) {\n      if (typeof route === 'string') {\n        instructions.push(this.nav.router.instructionResolver.parseViewportInstruction(route));\n      } else if (route as ViewportInstruction instanceof ViewportInstruction) {\n        instructions.push(route as ViewportInstruction);\n      } else if (route['component']) {\n        const viewportComponent = route as IViewportComponent;\n        instructions.push(new ViewportInstruction(viewportComponent.component, viewportComponent.viewport, viewportComponent.parameters));\n      } else {\n        instructions.push(new ViewportInstruction(route as Partial<ICustomElementType<INode>>));\n      }\n    }\n    return instructions;\n  }\n\n  private activeChild(): boolean {\n    if (this.children) {\n      for (const child of this.children) {\n        if (child.active.startsWith('nav-active') || child.activeChild()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import { ICustomElementType } from '@aurelia/runtime';\nimport { NavRoute } from './nav-route';\nimport { Router } from './router';\nimport { ViewportInstruction } from './viewport-instruction';\n\nexport interface IViewportComponent {\n  component: string | Partial<ICustomElementType>;\n  viewport?: string;\n  parameters?: Record<string, unknown> | string;\n}\n\nexport type NavInstruction = string | Partial<ICustomElementType> | IViewportComponent | ViewportInstruction;\n\nexport interface INavRoute {\n  route: NavInstruction | NavInstruction[];\n  consideredActive?: NavInstruction | NavInstruction[];\n  link?: string;\n  title: string;\n  children?: INavRoute[];\n  meta?: Record<string, unknown>;\n}\n\nexport class Nav {\n  public name: string;\n  public routes: NavRoute[];\n\n  public router: Router;\n\n  constructor(router: Router, name: string) {\n    this.router = router;\n    this.name = name;\n\n    this.routes = [];\n  }\n\n  public addRoutes(routes: INavRoute[]): void {\n    for (const route of routes) {\n      this.addRoute(this.routes, route);\n    }\n  }\n\n  public addRoute(routes: NavRoute[], route: INavRoute): void {\n    const newRoute = new NavRoute(this, route);\n    routes.push(newRoute);\n    if (route.children) {\n      newRoute.children = [];\n      for (const child of route.children) {\n        this.addRoute(newRoute.children, child);\n      }\n    }\n  }\n}\n","import { buildQueryString, IQueryParams, parseQueryString } from '@aurelia/kernel';\n\nexport interface RouteHandler {\n  href?: string;\n  generationUsesHref?: boolean;\n  name?: string | string[];\n}\n\nexport interface ConfigurableRoute {\n  path: string;\n  handler: RouteHandler;\n  caseSensitive?: boolean;\n}\n\nexport class HandlerEntry {\n  public handler: RouteHandler;\n  public names: string[];\n\n  constructor(handler: RouteHandler, names: string[]) {\n    this.handler = handler;\n    this.names = names;\n  }\n}\n\n/*\n* An object that is indexed and used for route generation, particularly for dynamic routes.\n*/\nexport class RouteGenerator {\n  public segments: Segment[];\n  public handlers: HandlerEntry[];\n\n  constructor(segments: Segment[], handlers: HandlerEntry[]) {\n    this.segments = segments;\n    this.handlers = handlers;\n  }\n}\n\nexport class TypesRecord {\n  public statics: number;\n  public dynamics: number;\n  public stars: number;\n\n  constructor() {\n    this.statics = 0;\n    this.dynamics = 0;\n    this.stars = 0;\n  }\n}\n\nexport class RecognizeResult {\n  public handler: RouteHandler;\n  public params: Record<string, string>;\n  public isDynamic: boolean;\n\n  constructor(\n    handler: RouteHandler,\n    params: Record<string, string>,\n    isDynamic: boolean\n  ) {\n    this.handler = handler;\n    this.params = params;\n    this.isDynamic = isDynamic;\n  }\n}\n\nexport interface RecognizeResults extends Array<RecognizeResult> {\n  queryParams: IQueryParams;\n}\n\nexport class CharSpec {\n  public invalidChars: string | null;\n  public validChars: string | null;\n  public repeat: boolean;\n\n  constructor(\n    invalidChars: string | null,\n    validChars: string | null,\n    repeat: boolean\n  ) {\n    this.invalidChars = invalidChars;\n    this.validChars = validChars;\n    this.repeat = repeat;\n  }\n\n  public equals(other: CharSpec): boolean {\n    return this.validChars === other.validChars && this.invalidChars === other.invalidChars;\n  }\n}\n\nexport class State {\n  public handlers: HandlerEntry[];\n  public regex: RegExp;\n  public types: TypesRecord;\n  public charSpec: CharSpec;\n  public nextStates: State[];\n\n  constructor(charSpec?: CharSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  public put(charSpec: CharSpec): State {\n    let state = this.nextStates.find(s => s.charSpec.equals(charSpec));\n\n    if (state === undefined) {\n      state = new State(charSpec);\n      this.nextStates.push(state);\n\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n    }\n\n    return state;\n  }\n}\nconst specials = [\n  '/', '.', '*', '+', '?', '|',\n  '(', ')', '[', ']', '{', '}', '\\\\'\n];\n\nconst escapeRegex = new RegExp(`(\\\\${specials.join('|\\\\')})`, 'g');\n\n// A Segment represents a segment in the original route description.\n// Each Segment type provides an `eachChar` and `regex` method.\n//\n// The `eachChar` method invokes the callback with one or more character\n// specifications. A character specification consumes one or more input\n// characters.\n//\n// The `regex` method returns a regex fragment for the segment. If the\n// segment is a dynamic or star segment, the regex fragment also includes\n// a capture.\n//\n// A character specification contains:\n//\n// * `validChars`: a String with a list of all valid characters, or\n// * `invalidChars`: a String with a list of all invalid characters\n// * `repeat`: true if the character specification can repeat\n\nexport class StaticSegment {\n  public name: string;\n  public string: string;\n  public optional: boolean;\n  public caseSensitive: boolean;\n\n  constructor(str: string, caseSensitive: boolean) {\n    this.name = str;\n    this.string = str;\n    this.caseSensitive = caseSensitive;\n    this.optional = false;\n  }\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    const s = this.string;\n    const len = s.length;\n    let i = 0;\n    let ch = '';\n    if (this.caseSensitive) {\n      for (; i < len; ++i) {\n        ch = s.charAt(i);\n        callback(new CharSpec(null, ch, false));\n      }\n    } else {\n      for (; i < len; ++i) {\n        ch = s.charAt(i);\n        callback(new CharSpec(null, ch.toUpperCase() + ch.toLowerCase(), false));\n      }\n    }\n  }\n\n  public regex(): string {\n    return this.string.replace(escapeRegex, '\\\\$1');\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    return this.string;\n  }\n}\n\nexport class DynamicSegment {\n  public name: string;\n  public optional: boolean;\n\n  constructor(name: string, optional: boolean) {\n    this.name = name;\n    this.optional = optional;\n  }\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    callback(new CharSpec('/', null, true));\n  }\n\n  public regex(): string {\n    return '([^/]+)';\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n}\n\nexport class StarSegment {\n  public name: string;\n  public optional: boolean;\n\n  constructor(name: string) {\n    this.name = name;\n    this.optional = false;\n  }\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    callback(new CharSpec('', null, true));\n  }\n\n  public regex(): string {\n    return '(.+)';\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n}\n\nexport class EpsilonSegment {\n  public name?: string;\n  public optional?: boolean;\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    return;\n  }\n\n  public regex(): string {\n    return '';\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    return '';\n  }\n}\nexport type Segment = StaticSegment | DynamicSegment | StarSegment | EpsilonSegment;\n\n/**\n * Class that parses route patterns and matches path strings.\n */\nexport class RouteRecognizer {\n  public rootState: State;\n  public names: Record<string, RouteGenerator>;\n  public routes: Map<RouteHandler, RouteGenerator>;\n\n  constructor() {\n    this.rootState = new State();\n    this.names = {};\n    this.routes = new Map();\n  }\n\n  /**\n   * Parse a route pattern and add it to the collection of recognized routes.\n   *\n   * @param route The route to add.\n   */\n  public add(route: ConfigurableRoute|ConfigurableRoute[]): State | undefined {\n    if (Array.isArray(route)) {\n      route.forEach(r => {\n        this.add(r);\n      });\n      return;\n    }\n\n    let currentState = this.rootState;\n    const skippableStates: State[] = [];\n    let regex = '^';\n    const types = new TypesRecord();\n    const names: string[] = [];\n    const routeName = route.handler.name;\n    let isEmpty = true;\n\n    let normalizedRoute = route.path;\n    if (normalizedRoute.charAt(0) === '/') {\n      normalizedRoute = normalizedRoute.slice(1);\n    }\n\n    const segments: Segment[] = [];\n\n    const splitRoute = normalizedRoute.split('/');\n    let part: string;\n    let segment: Segment;\n    for (let i = 0, ii = splitRoute.length; i < ii; ++i) {\n      part = splitRoute[i];\n\n      // Try to parse a parameter :param?\n      let match = part.match(/^:([^?]+)(\\?)?$/);\n      if (match) {\n        const [, name, optional] = match;\n        if (name.indexOf('=') !== -1) {\n          throw new Error(`Parameter ${name} in route ${route} has a default value, which is not supported.`);\n        }\n        segments.push(segment = new DynamicSegment(name, !!optional));\n        names.push(name);\n        types.dynamics++;\n      } else {\n        // Try to parse a star segment *whatever\n        match = part.match(/^\\*(.+)$/);\n        if (match) {\n          segments.push(segment = new StarSegment(match[1]));\n          names.push(match[1]);\n          types.stars++;\n        } else if (part === '') {\n          segments.push(new EpsilonSegment());\n          continue;\n        } else {\n          segments.push(segment = new StaticSegment(part, route.caseSensitive));\n          types.statics++;\n        }\n      }\n\n      // Add a representation of the segment to the NFA and regex\n      const firstState = currentState.put(new CharSpec(null, '/', false));\n      let nextState = firstState;\n      segment.eachChar(ch => {\n        nextState = nextState.put(ch);\n      });\n\n      // add the first part of the next segment to the end of any skipped states\n      for (let j = 0, jj = skippableStates.length; j < jj; j++) {\n        skippableStates[j].nextStates.push(firstState);\n      }\n\n      // If the segment was optional we don't fast forward to the end of the\n      // segment, but we do hold on to a reference to the end of the segment\n      // for adding future segments. Multiple consecutive optional segments\n      // will accumulate.\n      if (segment.optional) {\n        skippableStates.push(nextState);\n        regex += `(?:/${segment.regex()})?`;\n\n      // Otherwise, we fast forward to the end of the segment and remove any\n      // references to skipped segments since we don't need them anymore.\n      } else {\n        currentState = nextState;\n        regex += `/${segment.regex()}`;\n        skippableStates.length = 0;\n        isEmpty = false;\n      }\n    }\n\n    // An \"all optional\" path is technically empty since currentState is this.rootState\n    if (isEmpty) {\n      currentState = currentState.put(new CharSpec(null, '/', false));\n      regex += '/?';\n    }\n\n    const handlers = [new HandlerEntry(route.handler, names)];\n\n    this.routes.set(route.handler, new RouteGenerator(segments, handlers));\n    if (routeName) {\n      const routeNames = Array.isArray(routeName) ? routeName : [routeName];\n      for (let i = 0; i < routeNames.length; i++) {\n        if (!(routeNames[i] in this.names)) {\n          this.names[routeNames[i]] = new RouteGenerator(segments, handlers);\n        }\n      }\n    }\n\n    // Any trailing skipped states need to be endpoints and need to have\n    // handlers attached.\n    for (let i = 0; i < skippableStates.length; i++) {\n      const state = skippableStates[i];\n      state.handlers = handlers;\n      state.regex = new RegExp(`${regex}$`, route.caseSensitive ? '' : 'i');\n      state.types = types;\n    }\n\n    currentState.handlers = handlers;\n    currentState.regex = new RegExp(`${regex}$`, route.caseSensitive ? '' : 'i');\n    currentState.types = types;\n\n    return currentState;\n  }\n\n  /**\n   * Retrieve a RouteGenerator for a route by name or RouteConfig (RouteHandler).\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @returns The RouteGenerator for that route.\n   */\n  public getRoute(nameOrRoute: string | RouteHandler): RouteGenerator {\n    return typeof(nameOrRoute) === 'string' ? this.names[nameOrRoute] : this.routes.get(nameOrRoute);\n  }\n\n  /**\n   * Retrieve the handlers registered for the route by name or RouteConfig (RouteHandler).\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @returns The handlers.\n   */\n  public handlersFor(nameOrRoute: string | RouteHandler): HandlerEntry[] {\n    const route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    return [...route.handlers];\n  }\n\n  /**\n   * Check if this RouteRecognizer recognizes a route by name or RouteConfig (RouteHandler).\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @returns True if the named route is recognized.\n   */\n  public hasRoute(nameOrRoute: string | RouteHandler): boolean {\n    return !!this.getRoute(nameOrRoute);\n  }\n\n  /**\n   * Generate a path and query string from a route name or RouteConfig (RouteHandler) and params object.\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @param params The route params to use when populating the pattern.\n   *  Properties not required by the pattern will be appended to the query string.\n   * @returns The generated absolute path and query string.\n   */\n  public generate(nameOrRoute: string | RouteHandler, params?: object): string {\n    const route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    const handler = route.handlers[0].handler;\n    if (handler.generationUsesHref) {\n      return handler.href;\n    }\n\n    const routeParams = {...params};\n    const segments = route.segments;\n    const consumed = {};\n    let output = '';\n\n    for (let i = 0, l = segments.length; i < l; i++) {\n      const segment = segments[i];\n\n      if (segment instanceof EpsilonSegment) {\n        continue;\n      }\n\n      const segmentValue = segment.generate(routeParams, consumed);\n      if (segmentValue === null || segmentValue === undefined) {\n        if (!segment.optional) {\n          throw new Error(`A value is required for route parameter '${segment.name}' in route '${nameOrRoute}'.`);\n        }\n      } else {\n        output += '/';\n        output += segmentValue;\n      }\n    }\n\n    if (output.charAt(0) !== '/') {\n      output = `/${output}`;\n    }\n\n    // remove params used in the path and add the rest to the querystring\n    for (const param in consumed) {\n      Reflect.deleteProperty(routeParams, param);\n    }\n\n    const queryString = buildQueryString(routeParams);\n    output += queryString ? `?${queryString}` : '';\n\n    return output;\n  }\n\n  /**\n   * Match a path string against registered route patterns.\n   *\n   * @param path The path to attempt to match.\n   * @returns Array of objects containing `handler`, `params`, and\n   *  `isDynamic` values for the matched route(s), or undefined if no match\n   *  was found.\n   */\n  public recognize(path: string): RecognizeResults {\n    let states = [this.rootState];\n    let queryParams: IQueryParams = {};\n    let isSlashDropped = false;\n    let normalizedPath = path;\n\n    const queryStart = normalizedPath.indexOf('?');\n    if (queryStart !== -1) {\n      const queryString = normalizedPath.slice(queryStart + 1);\n      normalizedPath = normalizedPath.slice(0, queryStart);\n      queryParams = parseQueryString(queryString);\n    }\n\n    normalizedPath = decodeURI(normalizedPath);\n\n    if (normalizedPath.charAt(0) !== '/') {\n      normalizedPath = `/${normalizedPath}`;\n    }\n\n    let pathLen = normalizedPath.length;\n    if (pathLen > 1 && normalizedPath.charAt(pathLen - 1) === '/') {\n      normalizedPath = normalizedPath.slice(0, -1);\n      isSlashDropped = true;\n      --pathLen;\n    }\n\n    for (let i = 0; i < pathLen; ++i) {\n      const nextStates: State[] = [];\n      const ch = normalizedPath.charAt(i);\n\n      states.forEach(state => {\n        state.nextStates.forEach(nextState => {\n          if (nextState.charSpec.validChars !== null) {\n            if (nextState.charSpec.validChars.indexOf(ch) !== -1) {\n              nextStates.push(nextState);\n            }\n          } else if (nextState.charSpec.invalidChars !== null\n            && nextState.charSpec.invalidChars.indexOf(ch) === -1) {\n              nextStates.push(nextState);\n          }\n        });\n      });\n      states = nextStates;\n      if (states.length === 0) {\n        break;\n      }\n    }\n\n    const solutions: State[] = [];\n    for (let i = 0, l = states.length; i < l; i++) {\n      if (states[i].handlers) {\n        solutions.push(states[i]);\n      }\n    }\n\n    // This is a somewhat naive strategy, but should work in a lot of cases\n    // A better strategy would properly resolve /posts/:id/new and /posts/edit/:id.\n    //\n    // This strategy generally prefers more static and less dynamic matching.\n    // Specifically, it\n    //\n    //  * prefers fewer stars to more, then\n    //  * prefers using stars for less of the match to more, then\n    //  * prefers fewer dynamic segments to more, then\n    //  * prefers more static segments to more\n    solutions.sort((a, b) => {\n      if (a.types.stars !== b.types.stars) {\n        return a.types.stars - b.types.stars;\n      }\n      if (a.types.stars) {\n        if (a.types.statics !== b.types.statics) {\n          return b.types.statics - a.types.statics;\n        }\n        if (a.types.dynamics !== b.types.dynamics) {\n          return b.types.dynamics - a.types.dynamics;\n        }\n      }\n      if (a.types.dynamics !== b.types.dynamics) {\n        return a.types.dynamics - b.types.dynamics;\n      }\n      if (a.types.statics !== b.types.statics) {\n        return b.types.statics - a.types.statics;\n      }\n      return 0;\n    });\n\n    const solution = solutions[0];\n    if (solution && solution.handlers) {\n      // if a trailing slash was dropped and a star segment is the last segment\n      // specified, put the trailing slash back\n      if (isSlashDropped && solution.regex.source.slice(-5) === '(.+)$') {\n        normalizedPath = `${normalizedPath}/`;\n      }\n      const captures = normalizedPath.match(solution.regex);\n      let currentCapture = 1;\n      const result = [] as RecognizeResults;\n      result.queryParams = queryParams;\n\n      solution.handlers.forEach(handler => {\n        const params: Record<string, string> = {};\n        handler.names.forEach(name => {\n          params[name] = captures[currentCapture++];\n        });\n        result.push(new RecognizeResult(handler.handler, params, handler.names.length > 0));\n      });\n\n      return result;\n    }\n  }\n}\n","import { ViewportInstruction } from './viewport-instruction';\n\nexport interface IInstructionResolverOptions {\n  separators?: IRouteSeparators;\n}\n\nexport interface IRouteSeparators {\n  viewport: string;\n  sibling: string;\n  scope: string;\n  ownsScope: string;\n  parameters: string;\n  add: string;\n  clear: string;\n  action: string;\n}\n\nexport class InstructionResolver {\n\n  public separators: IRouteSeparators;\n\n  public activate(options?: IInstructionResolverOptions): void {\n    this.separators = {\n      ... {\n        viewport: '@', // ':',\n        sibling: '+', // '/',\n        scope: '/', // '+',\n        ownsScope: '!',\n        parameters: '=',\n        add: '+',\n        clear: '-',\n        action: '.',\n      }, ...options.separators\n    };\n  }\n\n  public get clearViewportInstruction(): string {\n    return this.separators.clear;\n  }\n\n  public parseViewportInstruction(instruction: string): ViewportInstruction {\n    let component, viewport, parameters;\n    const [componentPart, rest] = instruction.split(this.separators.viewport);\n    if (rest === undefined) {\n      [component, parameters] = componentPart.split(this.separators.parameters);\n    } else {\n      component = componentPart;\n      [viewport, parameters] = rest.split(this.separators.parameters);\n    }\n    return new ViewportInstruction(component, viewport, parameters);\n  }\n\n  public stringifyViewportInstruction(instruction: ViewportInstruction): string {\n    let instructionString = instruction.componentName;\n    if (instruction.viewportName) {\n      instructionString += this.separators.viewport + instruction.viewportName;\n    }\n    if (instruction.parametersString) {\n      // TODO: Review parameters in ViewportInstruction\n      instructionString += this.separators.parameters + instruction.parametersString;\n    }\n    return instructionString;\n  }\n\n  public buildScopedLink(scopeContext: string, href: string): string {\n    if (scopeContext) {\n      href = `/${scopeContext}${this.separators.scope}${href}`;\n    }\n    return href;\n  }\n\n  public shouldClearViewports(path: string): { clearViewports: boolean; newPath: string } {\n    const clearViewports = (path === this.separators.clear || path.startsWith(this.separators.clear + this.separators.add));\n    const newPath = path.startsWith(this.separators.clear) ? path.substring(1) : path;\n    return { clearViewports, newPath };\n  }\n\n  public findViews(path: string): Record<string, string> {\n    const views: Record<string, string> = {};\n    // TODO: Let this govern start of scope\n    if (path.startsWith('/')) {\n      path = path.substring(1);\n    }\n    const sections: string[] = path.split(this.separators.sibling);\n\n    // TODO: Remove this once multi level recursiveness is fixed\n    // Expand with instances for all containing views\n    // const expandedSections: string[] = [];\n    // while (sections.length) {\n    //   const part = sections.shift();\n    //   const parts = part.split(this.separators.scope);\n    //   for (let i = 1; i <= parts.length; i++) {\n    //     expandedSections.push(parts.slice(0, i).join(this.separators.scope));\n    //   }\n    // }\n    // sections = expandedSections;\n\n    let index = 0;\n    while (sections.length) {\n      const view = sections.shift();\n      const scopes = view.split(this.separators.scope);\n      const leaf = scopes.pop();\n      const parts = leaf.split(this.separators.viewport);\n      // Noooooo?\n      const component = parts[0];\n      scopes.push(parts.length ? parts.join(this.separators.viewport) : `?${index++}`);\n      const name = scopes.join(this.separators.scope);\n      if (component) {\n        views[name] = component;\n      }\n    }\n    return views;\n  }\n\n  public viewportInstructionsToString(instructions: ViewportInstruction[]): string {\n    const stringInstructions: string[] = [];\n    for (const instruction of instructions) {\n      stringInstructions.push(this.stringifyViewportInstruction(instruction));\n    }\n    return stringInstructions.join(this.separators.sibling);\n  }\n\n  public viewportInstructionsFromString(instructionsString: string): ViewportInstruction[] {\n    const instructions = [];\n    const instructionStrings = instructionsString.split(this.separators.sibling);\n    for (const instructionString of instructionStrings) {\n      instructions.push(this.parseViewportInstruction(instructionString));\n    }\n    return instructions;\n  }\n\n  public removeStateDuplicates(states: string[]): string[] {\n    let sorted: string[] = states.slice().sort((a, b) => b.split(this.separators.scope).length - a.split(this.separators.scope).length);\n    sorted = sorted.map((value) => `${this.separators.scope}${value}${this.separators.scope}`);\n\n    let unique: string[] = [];\n    if (sorted.length) {\n      unique.push(sorted.shift());\n      while (sorted.length) {\n        const state = sorted.shift();\n        if (unique.find((value) => {\n          return value.indexOf(state) === -1;\n        })) {\n          unique.push(state);\n        }\n      }\n    }\n    unique = unique.map((value) => value.substring(1, value.length - 1));\n    unique.sort((a, b) => a.split(this.separators.scope).length - b.split(this.separators.scope).length);\n\n    return unique;\n  }\n\n  public stateStringsToString(stateStrings: string[], clear: boolean = false): string {\n    const strings = stateStrings.slice();\n    if (clear) {\n      strings.unshift(this.clearViewportInstruction);\n    }\n    return strings.join(this.separators.sibling);\n  }\n}\n","export interface IParsedQuery {\n  parameters: Record<Exclude<string, '-unnamed'>, string> | (Record<Exclude<string, '-unnamed'>, string> & Record<'-unnamed', string[]>);\n  list: string[];\n}\n\nexport interface IMergedParameters {\n  namedParameters: Record<string, string>;\n  parameterList: string[];\n  merged: string[] | Record<string, string>;\n}\n\nexport function parseQuery(query: string): IParsedQuery {\n  const parameters = {};\n  const list = [];\n  if (!query || !query.length) {\n    return { parameters: parameters, list: list };\n  }\n  const params = query.replace('+', ' ').split('&');\n  for (const param of params) {\n    const kv = param.split('=');\n    const key = decodeURIComponent(kv.shift());\n    if (!kv.length) {\n      list.push(key);\n      continue;\n    }\n    const value = decodeURIComponent(kv.shift());\n    parameters[key] = value;\n    // TODO: Deal with complex parameters such as lists and objects\n  }\n  return { parameters: parameters, list: list };\n}\n\nexport function mergeParameters(parameters: string, query: string, specifiedParameters: string[]): IMergedParameters {\n  const parsedQuery = parseQuery(query);\n  const parsedParameters = parseQuery(parameters);\n  const params = { ...parsedQuery.parameters, ...parsedParameters.parameters };\n  const list = [...parsedQuery.list, ...parsedParameters.list];\n\n  if (list.length && specifiedParameters && specifiedParameters.length) {\n    for (const param of specifiedParameters) {\n      // TODO: Support data types\n      params[param] = list.shift();\n    }\n  }\n\n  if (list.length && Object.keys(params).length) {\n    params['-unnamed'] = list.splice(0, list.length);\n  }\n  let merged: string[] | Record<string, string>;\n  if (list.length) {\n    merged = list;\n  } else {\n    merged = params;\n  }\n\n  return {\n    namedParameters: params,\n    parameterList: list,\n    merged: merged,\n  };\n}\n","import { IContainer } from '@aurelia/kernel';\nimport { CustomElementResource, ICustomElement, ICustomElementType, INode, IRenderContext, LifecycleFlags } from '@aurelia/runtime';\nimport { INavigationInstruction } from './history-browser';\nimport { ViewportInstruction } from './viewport-instruction';\n\nexport interface IRouteableCustomElementType extends Partial<ICustomElementType> {\n  parameters?: string[];\n}\n\nexport interface IRouteableCustomElement extends ICustomElement {\n  canEnter?(nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): boolean | string | ViewportInstruction[] | Promise<boolean | string | ViewportInstruction[]>;\n  enter?(parameters?: string[] | Record<string, string>, nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): void | Promise<void>;\n  canLeave?(nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): boolean | Promise<boolean>;\n  leave?(nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): void | Promise<void>;\n}\n\nexport const enum ContentStatus {\n  none = 0,\n  loaded = 1,\n  initialized = 2,\n  entered = 3,\n  added = 4,\n}\n\nexport class ViewportContent {\n  public content: IRouteableCustomElementType | string;\n  public parameters: string;\n  public instruction: INavigationInstruction;\n  public component: IRouteableCustomElement;\n  public contentStatus: ContentStatus;\n  public fromCache: boolean;\n\n  constructor(content: Partial<ICustomElementType> | string = null, parameters: string = null, instruction: INavigationInstruction = null, context: IRenderContext = null) {\n    // Can be a (resolved) type or a string (to be resolved later)\n    this.content = content;\n    this.parameters = parameters;\n    this.instruction = instruction;\n    this.component = null;\n    this.contentStatus = ContentStatus.none;\n    this.fromCache = false;\n\n    // If we've got a container, we're good to resolve type\n    if (this.content !== null && typeof this.content === 'string' && context !== null) {\n      this.content = this.componentType(context);\n    }\n  }\n\n  public isChange(other: ViewportContent): boolean {\n    return ((typeof other.content === 'string' && this.componentName() !== other.content) ||\n      (typeof other.content !== 'string' && this.content !== other.content) ||\n      this.parameters !== other.parameters ||\n      !this.instruction || this.instruction.query !== other.instruction.query);\n  }\n\n  public isCacheEqual(other: ViewportContent): boolean {\n    return ((typeof other.content === 'string' && this.componentName() === other.content) ||\n      (typeof other.content !== 'string' && this.content === other.content)) &&\n      this.parameters === other.parameters;\n  }\n\n  public loadComponent(context: IRenderContext, element: Element): Promise<void> {\n    // Don't load cached content\n    if (!this.fromCache) {\n      this.component = this.componentInstance(context);\n      const host: INode = element as INode;\n      const container = context;\n      this.component.$hydrate(LifecycleFlags.none, container, host);\n    }\n    this.contentStatus = ContentStatus.loaded;\n    return Promise.resolve();\n  }\n  public unloadComponent(): void {\n    // TODO: We might want to do something here eventually, who knows?\n    if (this.contentStatus !== ContentStatus.loaded) {\n      return;\n    }\n    // Don't unload components when stateful\n    this.contentStatus = ContentStatus.none;\n  }\n\n  public initializeComponent(): void {\n    // Don't initialize cached content\n    if (!this.fromCache) {\n      this.component.$bind(LifecycleFlags.fromStartTask | LifecycleFlags.fromBind, null);\n    }\n    this.contentStatus = ContentStatus.initialized;\n  }\n  public terminateComponent(stateful: boolean = false): void {\n    if (this.contentStatus !== ContentStatus.initialized) {\n      return;\n    }\n    // Don't terminate cached content\n    if (!stateful) {\n      this.component.$unbind(LifecycleFlags.fromStopTask | LifecycleFlags.fromUnbind);\n      this.contentStatus = ContentStatus.loaded;\n    }\n  }\n\n  public addComponent(element: Element): void {\n    this.component.$attach(LifecycleFlags.fromStartTask);\n    if (this.fromCache) {\n      const elements = Array.from(element.getElementsByTagName('*'));\n      for (const el of elements) {\n        if (el.hasAttribute('au-element-scroll')) {\n          const [top, left] = el.getAttribute('au-element-scroll').split(',');\n          el.removeAttribute('au-element-scroll');\n          el.scrollTo(+left, +top);\n        }\n      }\n    }\n    this.contentStatus = ContentStatus.added;\n  }\n  public removeComponent(element: Element, stateful: boolean = false): void {\n    if (this.contentStatus !== ContentStatus.added) {\n      return;\n    }\n    if (stateful) {\n      const elements = Array.from(element.getElementsByTagName('*'));\n      for (const el of elements) {\n        if (el.scrollTop > 0 || el.scrollLeft) {\n          el.setAttribute('au-element-scroll', `${el.scrollTop},${el.scrollLeft}`);\n        }\n      }\n    }\n    this.component.$detach(LifecycleFlags.fromStopTask);\n    this.contentStatus = ContentStatus.added;\n  }\n\n  public async freeContent(element: Element, stateful: boolean = false): Promise<void> {\n    switch (this.contentStatus) {\n      case ContentStatus.added:\n        this.removeComponent(element, stateful);\n      case ContentStatus.entered:\n        if (this.component.leave) {\n          await this.component.leave();\n        }\n        this.contentStatus = ContentStatus.initialized;\n      case ContentStatus.initialized:\n        this.terminateComponent(stateful);\n      case ContentStatus.loaded:\n        this.unloadComponent();\n    }\n    this.contentStatus = ContentStatus.none;\n  }\n\n  public componentName(): string {\n    if (this.content === null) {\n      return null;\n    } else if (typeof this.content === 'string') {\n      return this.content;\n    } else {\n      return (this.content).description.name;\n    }\n  }\n  public componentType(context: IRenderContext): IRouteableCustomElementType {\n    if (this.content === null) {\n      return null;\n    } else if (typeof this.content !== 'string') {\n      return this.content;\n    } else {\n      const container = context.get(IContainer);\n      const resolver = container.getResolver(CustomElementResource.keyFrom(this.content));\n      if (resolver !== null) {\n        return resolver.getFactory(container).Type as IRouteableCustomElementType;\n      }\n      return null;\n    }\n  }\n  public componentInstance(context: IRenderContext): IRouteableCustomElement {\n    if (this.content === null) {\n      return null;\n    }\n    // TODO: Remove once \"local registration is fixed\"\n    const component = this.componentName();\n    const container = context.get(IContainer);\n    if (typeof component !== 'string') {\n      return container.get<IRouteableCustomElement>(component);\n    } else {\n      return container.get<IRouteableCustomElement>(CustomElementResource.keyFrom(component));\n    }\n  }\n}\n","import { Reporter } from '@aurelia/kernel';\nimport { ICustomElementType, IRenderContext, LifecycleFlags } from '@aurelia/runtime';\nimport { INavigationInstruction } from './history-browser';\nimport { mergeParameters } from './parser';\nimport { Router } from './router';\nimport { Scope } from './scope';\nimport { IViewportOptions } from './viewport';\nimport { ContentStatus, IRouteableCustomElement, IRouteableCustomElementType, ViewportContent } from './viewport-content';\nimport { ViewportInstruction } from './viewport-instruction';\n\nexport interface IViewportOptions {\n  scope?: boolean;\n  usedBy?: string | string[];\n  default?: string;\n  noLink?: boolean;\n  noHistory?: boolean;\n  stateful?: boolean;\n  forceDescription?: boolean;\n}\n\nexport class Viewport {\n  public name: string;\n  public element: Element;\n  public context: IRenderContext;\n  public owningScope: Scope;\n  public scope: Scope;\n  public options?: IViewportOptions;\n\n  public content: ViewportContent;\n  public nextContent: ViewportContent;\n\n  public enabled: boolean;\n\n  private readonly router: Router;\n\n  private clear: boolean;\n  private elementResolve?: ((value?: void | PromiseLike<void>) => void) | null;\n\n  private previousViewportState?: Viewport;\n\n  private cache: ViewportContent[];\n\n  constructor(router: Router, name: string, element: Element, context: IRenderContext, owningScope: Scope, scope: Scope, options?: IViewportOptions) {\n    this.router = router;\n    this.name = name;\n    this.element = element;\n    this.context = context;\n    this.owningScope = owningScope;\n    this.scope = scope;\n    this.options = options;\n\n    this.clear = false;\n\n    this.content = new ViewportContent();\n    this.nextContent = null;\n    this.elementResolve = null;\n    this.previousViewportState = null;\n    this.cache = [];\n    this.enabled = true;\n  }\n\n  public setNextContent(content: Partial<ICustomElementType> | string, instruction: INavigationInstruction): boolean {\n    let parameters;\n    this.clear = false;\n    if (typeof content === 'string') {\n      if (content === this.router.instructionResolver.clearViewportInstruction) {\n        this.clear = true;\n        content = null;\n      } else {\n        const cp = content.split(this.router.instructionResolver.separators.parameters);\n        content = cp.shift();\n        parameters = cp.length ? cp.join(this.router.instructionResolver.separators.parameters) : null;\n      }\n    }\n\n    // Can have a (resolved) type or a string (to be resolved later)\n    this.nextContent = new ViewportContent(content, parameters, instruction, this.context);\n    if (this.options.stateful) {\n      // TODO: Add a parameter here to decide required equality\n      const cached = this.cache.find((item) => this.nextContent.isCacheEqual(item));\n      if (cached) {\n        this.nextContent = cached;\n        this.nextContent.fromCache = true;\n      } else {\n        this.cache.push(this.nextContent);\n      }\n    }\n\n    return this.content.isChange(this.nextContent) || instruction.isRefresh;\n  }\n\n  public setElement(element: Element, context: IRenderContext, options: IViewportOptions): void {\n    // First added viewport with element is always scope viewport (except for root scope)\n    if (this.scope && this.scope.parent && !this.scope.viewport) {\n      this.scope.viewport = this;\n    }\n    if (this.scope && !this.scope.element) {\n      this.scope.element = element;\n    }\n    if (this.element !== element) {\n      // TODO: Restore this state on navigation cancel\n      this.previousViewportState = { ...this };\n      this.clearState();\n      this.element = element;\n      if (options && options.usedBy) {\n        this.options.usedBy = options.usedBy;\n      }\n      if (options && options.default) {\n        this.options.default = options.default;\n      }\n      if (options && options.noLink) {\n        this.options.noLink = options.noLink;\n      }\n      if (options && options.noHistory) {\n        this.options.noHistory = options.noHistory;\n      }\n      if (options && options.stateful) {\n        this.options.stateful = options.stateful;\n      }\n      if (this.elementResolve) {\n        this.elementResolve();\n      }\n    }\n    if (this.context !== context) {\n      this.context = context;\n    }\n\n    if (!this.content.component && (!this.nextContent || !this.nextContent.component) && this.options.default) {\n      this.router.addProcessingViewport(this.options.default, this);\n    }\n  }\n\n  public remove(element: Element, context: IRenderContext): boolean {\n    if (this.element === element && this.context === context) {\n      if (this.content.component) {\n        this.content.freeContent(this.element, this.options.stateful).catch(error => { throw error; });\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public async canLeave(): Promise<boolean> {\n    if (!this.content.component) {\n      return true;\n    }\n\n    const component: IRouteableCustomElement = this.content.component;\n    if (!component.canLeave) {\n      return true;\n    }\n    Reporter.write(10000, 'viewport canLeave', component.canLeave(this.content.instruction, this.nextContent.instruction));\n\n    return component.canLeave(this.content.instruction, this.nextContent.instruction);\n  }\n\n  public async canEnter(): Promise<boolean | ViewportInstruction[]> {\n    if (this.clear) {\n      return true;\n    }\n\n    if (!this.nextContent.content) {\n      return false;\n    }\n\n    await this.waitForElement();\n\n    await this.nextContent.loadComponent(this.context, this.element);\n    if (!this.nextContent.component) {\n      return false;\n    }\n\n    const component: IRouteableCustomElement = this.nextContent.component;\n    if (!component.canEnter) {\n      return true;\n    }\n\n    const result = component.canEnter(this.nextContent.instruction, this.content.instruction);\n    Reporter.write(10000, 'viewport canEnter', result);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n    if (typeof result === 'string') {\n      return [new ViewportInstruction(result, this)];\n    }\n    return result as Promise<ViewportInstruction[]>;\n  }\n\n  public async enter(): Promise<boolean> {\n    Reporter.write(10000, 'Viewport enter', this.name);\n\n    if (this.clear) {\n      return true;\n    }\n\n    if (!this.nextContent.component) {\n      return false;\n    }\n\n    if (this.nextContent.component.enter) {\n      const merged = mergeParameters(this.nextContent.parameters, this.nextContent.instruction.query, (this.nextContent.content as IRouteableCustomElementType).parameters);\n      this.nextContent.instruction.parameters = merged.namedParameters;\n      this.nextContent.instruction.parameterList = merged.parameterList;\n      await this.nextContent.component.enter(merged.merged, this.nextContent.instruction, this.content.instruction);\n      this.nextContent.contentStatus = ContentStatus.entered;\n    }\n    this.nextContent.initializeComponent();\n    return true;\n  }\n\n  public async loadContent(): Promise<boolean> {\n    Reporter.write(10000, 'Viewport loadContent', this.name);\n\n    if (this.content.component) {\n      if (this.content.component.leave) {\n        await this.content.component.leave(this.content.instruction, this.nextContent.instruction);\n      }\n      // No need to wait for next component activation\n      if (!this.nextContent.component) {\n        this.content.removeComponent(this.element, this.options.stateful);\n        this.content.terminateComponent(this.options.stateful);\n        this.content.unloadComponent();\n      }\n    }\n\n    if (this.nextContent.component) {\n      // Only when next component activation is done\n      if (this.content.component) {\n        this.content.removeComponent(this.element, this.options.stateful);\n        this.content.terminateComponent(this.options.stateful);\n        this.content.unloadComponent();\n      }\n      this.nextContent.addComponent(this.element);\n\n      this.content = this.nextContent;\n    }\n\n    if (this.clear) {\n      this.content = new ViewportContent(null, null, this.nextContent.instruction);\n    }\n\n    this.nextContent = null;\n\n    return true;\n  }\n\n  public finalizeContentChange(): void {\n    this.previousViewportState = null;\n  }\n  public async abortContentChange(): Promise<void> {\n    await this.nextContent.freeContent(this.element, this.options.stateful);\n    if (this.previousViewportState) {\n      Object.assign(this, this.previousViewportState);\n    }\n  }\n\n  public description(full: boolean = false): string {\n    if (this.content.content) {\n      const component = this.content.componentName();\n      const newScope: string = this.scope ? this.router.instructionResolver.separators.ownsScope : '';\n      const parameters = this.content.parameters ? this.router.instructionResolver.separators.parameters + this.content.parameters : '';\n      if (full || newScope.length || this.options.forceDescription) {\n        return `${component}${this.router.instructionResolver.separators.viewport}${this.name}${newScope}${parameters}`;\n      }\n      const viewports = {};\n      viewports[component] = component;\n      const found = this.owningScope.findViewports(viewports);\n      if (!found) {\n        return `${component}${this.router.instructionResolver.separators.viewport}${this.name}${newScope}${parameters}`;\n      }\n      return `${component}${parameters}`;\n    }\n  }\n\n  public scopedDescription(full: boolean = false): string {\n    const descriptions = [this.owningScope.scopeContext(full), this.description(full)];\n    return descriptions.filter((value) => value && value.length).join(this.router.instructionResolver.separators.scope);\n  }\n\n  // TODO: Deal with non-string components\n  public wantComponent(component: ICustomElementType | string): boolean {\n    let usedBy = this.options.usedBy || [];\n    if (typeof usedBy === 'string') {\n      usedBy = usedBy.split(',');\n    }\n    return usedBy.indexOf(component as string) >= 0;\n  }\n  // TODO: Deal with non-string components\n  public acceptComponent(component: ICustomElementType | string): boolean {\n    if (component === '-' || component === null) {\n      return true;\n    }\n    let usedBy = this.options.usedBy;\n    if (!usedBy || !usedBy.length) {\n      return true;\n    }\n    if (typeof usedBy === 'string') {\n      usedBy = usedBy.split(',');\n    }\n    if (usedBy.indexOf(component as string) >= 0) {\n      return true;\n    }\n    if (usedBy.filter((value) => value.indexOf('*') >= 0).length) {\n      return true;\n    }\n    return false;\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    if (this.content.component) {\n      this.content.initializeComponent();\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    Reporter.write(10000, 'ATTACHING viewport', this.name, this.content, this.nextContent);\n    this.enabled = true;\n    if (this.content.component) {\n      this.content.addComponent(this.element);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    Reporter.write(10000, 'DETACHING viewport', this.name);\n    if (this.content.component) {\n      this.content.removeComponent(this.element, this.options.stateful);\n    }\n    this.enabled = false;\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    if (this.content.component) {\n      this.content.terminateComponent(this.options.stateful);\n    }\n  }\n\n  private clearState(): void {\n    this.options = {};\n\n    this.content = new ViewportContent();\n    this.cache = [];\n  }\n\n  private async waitForElement(): Promise<void> {\n    if (this.element) {\n      return Promise.resolve();\n    }\n    // tslint:disable-next-line:promise-must-complete\n    return new Promise((resolve) => {\n      this.elementResolve = resolve;\n    });\n  }\n}\n","import { IContainer } from '@aurelia/kernel';\nimport { ICustomElementType, IRenderContext } from '@aurelia/runtime';\nimport { Router } from './router';\nimport { IFindViewportsResult } from './scope';\nimport { IViewportOptions, Viewport } from './viewport';\n\nexport interface IViewportCustomElementType extends ICustomElementType {\n  viewport?: string;\n}\n\nexport interface IComponentViewport {\n  component: Partial<ICustomElementType> | string;\n  viewport: Viewport;\n}\n\nexport interface IFindViewportsResult {\n  componentViewports?: IComponentViewport[];\n  viewportsRemaining?: boolean;\n}\n\nexport type ChildContainer = IContainer & { parent?: ChildContainer };\n\nexport class Scope {\n  public element: Element;\n  public context: IRenderContext;\n  public parent: Scope;\n\n  public viewport: Viewport;\n\n  public children: Scope[];\n  public viewports: Viewport[];\n\n  private readonly router: Router;\n\n  private scopeViewportParts: Record<string, string[][]>;\n  private availableViewports: Record<string, Viewport>;\n\n  constructor(router: Router, element: Element, context: IRenderContext, parent: Scope) {\n    this.router = router;\n    this.element = element;\n    this.context = context;\n    this.parent = parent;\n\n    this.viewport = null;\n    this.children = [];\n    this.viewports = [];\n    this.scopeViewportParts = {};\n    this.availableViewports = null;\n\n    if (this.parent) {\n      this.parent.addChild(this);\n    }\n  }\n\n  public getEnabledViewports(): Record<string, Viewport> {\n    return this.viewports.filter((viewport) => viewport.enabled).reduce(\n      (viewports, viewport) => {\n        viewports[viewport.name] = viewport;\n        return viewports;\n      },\n      {});\n  }\n\n  // TODO: Reduce complexity (currently at 45)\n  public findViewports(viewports?: Record<string, string | Viewport>): IFindViewportsResult {\n    const componentViewports: IComponentViewport[] = [];\n    let viewportsRemaining: boolean = false;\n\n    // Get a shallow copy of all available viewports (clean if it's the first find)\n    if (viewports) {\n      this.availableViewports = {};\n      this.scopeViewportParts = {};\n    }\n    this.availableViewports = { ...this.getEnabledViewports(), ...this.availableViewports };\n\n    // Get the parts for this scope (pointing to the rest)\n    for (const viewport in viewports) {\n      const parts = viewport.split(this.router.instructionResolver.separators.scope);\n      const vp = parts.shift();\n      if (!this.scopeViewportParts[vp]) {\n        this.scopeViewportParts[vp] = [];\n      }\n      this.scopeViewportParts[vp].push(parts);\n    }\n\n    // Configured viewport is ruling\n    for (const viewportPart in this.scopeViewportParts) {\n      const parameters = viewportPart.split(this.router.instructionResolver.separators.parameters);\n      const componentViewportPart = parameters.shift();\n      const component = componentViewportPart.split(this.router.instructionResolver.separators.viewport).shift();\n      const componentParameters = component + (parameters.length ? this.router.instructionResolver.separators.parameters + parameters.join(this.router.instructionResolver.separators.parameters) : '');\n      for (const name in this.availableViewports) {\n        const viewport: Viewport = this.availableViewports[name];\n        // TODO: Also check if (resolved) component wants a specific viewport\n        if (viewport && viewport.wantComponent(component)) {\n          const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, componentParameters, viewport);\n          componentViewports.push(...found.componentViewports);\n          viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n          this.availableViewports[name] = null;\n          Reflect.deleteProperty(this.scopeViewportParts, viewportPart);\n          break;\n        }\n      }\n    }\n\n    // Next in line is specified viewport\n    for (const viewportPart in this.scopeViewportParts) {\n      const parameters = viewportPart.split(this.router.instructionResolver.separators.parameters);\n      const componentViewportPart = parameters.shift();\n      const parts = componentViewportPart.split(this.router.instructionResolver.separators.viewport);\n      const component = parts.shift();\n      const componentParameters = component + (parameters.length ? this.router.instructionResolver.separators.parameters + parameters.join(this.router.instructionResolver.separators.parameters) : '');\n      let name = parts.shift();\n      if (!name || !name.length || name.startsWith('?')) {\n        continue;\n      }\n      let newScope = false;\n      if (name.endsWith(this.router.instructionResolver.separators.ownsScope)) {\n        newScope = true;\n        name = name.substring(0, name.length - 1);\n      }\n      if (!this.getEnabledViewports()[name]) {\n        this.addViewport(name, null, null, { scope: newScope, forceDescription: true });\n        this.availableViewports[name] = this.getEnabledViewports()[name];\n      }\n      const viewport = this.availableViewports[name];\n      if (viewport && viewport.acceptComponent(component)) {\n        const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, componentParameters, viewport);\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n        this.availableViewports[name] = null;\n        Reflect.deleteProperty(this.scopeViewportParts, viewportPart);\n      }\n    }\n\n    // Finally, only one accepting viewport left?\n    for (const viewportPart in this.scopeViewportParts) {\n      const parameters = viewportPart.split(this.router.instructionResolver.separators.parameters);\n      const componentViewportPart = parameters.shift();\n      const component = componentViewportPart.split(this.router.instructionResolver.separators.viewport).shift();\n      const componentParameters = component + (parameters.length ? this.router.instructionResolver.separators.parameters + parameters.join(this.router.instructionResolver.separators.parameters) : '');\n      const remainingViewports: Viewport[] = [];\n      for (const name in this.availableViewports) {\n        const viewport: Viewport = this.availableViewports[name];\n        if (viewport && viewport.acceptComponent(component)) {\n          remainingViewports.push(viewport);\n        }\n      }\n      if (remainingViewports.length === 1) {\n        const viewport = remainingViewports.shift();\n        const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, componentParameters, viewport);\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n        this.availableViewports[viewport.name] = null;\n        Reflect.deleteProperty(this.scopeViewportParts, viewportPart);\n        break;\n      }\n    }\n\n    viewportsRemaining = viewportsRemaining || Object.keys(this.scopeViewportParts).length > 0;\n\n    // If it's a repeat there might be remaining viewports in scope children\n    if (!viewports) {\n      for (const child of this.children) {\n        const found = child.findViewports();\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n      }\n    }\n\n    return {\n      componentViewports: componentViewports,\n      viewportsRemaining: viewportsRemaining,\n    };\n  }\n\n  public foundViewport(viewports: Record<string, string | Viewport>, scopeViewportParts: Record<string, string[][]>, viewportPart: string, component: ICustomElementType | string, viewport: Viewport): IFindViewportsResult {\n    const componentViewports: IComponentViewport[] = [{ component: component, viewport: viewport }];\n    let viewportsRemaining: boolean = false;\n\n    if (scopeViewportParts[viewportPart].length) {\n      const scope = viewport.scope || viewport.owningScope;\n      for (const remainingParts of scopeViewportParts[viewportPart]) {\n        if (remainingParts.length) {\n          const remaining = remainingParts.join(this.router.instructionResolver.separators.scope);\n          const vps: Record<string, string | Viewport> = {};\n          vps[remaining] = viewports[viewportPart + this.router.instructionResolver.separators.scope + remaining];\n          const scoped = scope.findViewports(vps);\n          componentViewports.push(...scoped.componentViewports);\n          viewportsRemaining = viewportsRemaining || scoped.viewportsRemaining;\n        }\n      }\n    }\n    return {\n      componentViewports: componentViewports,\n      viewportsRemaining: viewportsRemaining,\n    };\n  }\n\n  public addViewport(name: string, element: Element, context: IRenderContext, options?: IViewportOptions): Viewport {\n    let viewport = this.getEnabledViewports()[name];\n    // Each au-viewport element has its own Viewport\n    if (element && viewport && viewport.element !== null && viewport.element !== element) {\n      viewport.enabled = false;\n      viewport = this.viewports.find(vp => vp.name === name && vp.element === element);\n      if (viewport) {\n        viewport.enabled = true;\n      }\n    }\n    if (!viewport) {\n      let scope: Scope;\n      if (options.scope) {\n        scope = new Scope(this.router, element, context, this);\n        this.router.scopes.push(scope);\n      }\n\n      viewport = new Viewport(this.router, name, null, null, this, scope, options);\n      this.viewports.push(viewport);\n    }\n    // TODO: Either explain why || instead of && here (might only need one) or change it to && if that should turn out to not be relevant\n    if (element || context) {\n      viewport.setElement(element, context, options);\n    }\n    return viewport;\n  }\n  public removeViewport(viewport: Viewport, element: Element, context: IRenderContext): number {\n    if ((!element && !context) || viewport.remove(element, context)) {\n      if (viewport.scope) {\n        this.router.removeScope(viewport.scope);\n      }\n      this.viewports.splice(this.viewports.indexOf(viewport), 1);\n    }\n    return Object.keys(this.viewports).length;\n  }\n\n  public removeScope(): void {\n    for (const child of this.children) {\n      child.removeScope();\n    }\n    const viewports = this.getEnabledViewports();\n    for (const name in viewports) {\n      this.router.removeViewport(viewports[name], null, null);\n    }\n  }\n\n  public renderViewport(viewport: Viewport): Promise<boolean> {\n    return viewport.canEnter().then(() => viewport.loadContent());\n  }\n\n  public addChild(child: Scope): void {\n    if (this.children.indexOf(child) < 0) {\n      this.children.push(child);\n    }\n  }\n  public removeChild(child: Scope): void {\n    this.children.splice(this.children.indexOf(child), 1);\n  }\n\n  public viewportStates(full: boolean = false, active: boolean = false): string[] {\n    const states: string[] = [];\n    for (const vp in this.getEnabledViewports()) {\n      const viewport: Viewport = this.getEnabledViewports()[vp];\n      if ((viewport.options.noHistory || (viewport.options.noLink && !full)) && !active) {\n        continue;\n      }\n      states.push(viewport.scopedDescription(full));\n    }\n    for (const scope of this.children) {\n      states.push(...scope.viewportStates(full));\n    }\n    return states.filter((value) => value && value.length);\n  }\n\n  public allViewports(): Viewport[] {\n    const viewports = this.viewports.filter((viewport) => viewport.enabled);\n    for (const scope of this.children) {\n      viewports.push(...scope.allViewports());\n    }\n    return viewports;\n  }\n\n  public scopeContext(full: boolean = false): string {\n    if (!this.element || !this.parent) {\n      return '';\n    }\n    const parents: string[] = [];\n    if (this.viewport) {\n      parents.unshift(this.viewport.description(full));\n    }\n    let viewport: Viewport = this.parent.closestViewport((this.context.get(IContainer) as ChildContainer).parent);\n    while (viewport && viewport.owningScope === this.parent) {\n      parents.unshift(viewport.description(full));\n      viewport = this.closestViewport((viewport.context.get(IContainer) as ChildContainer).parent);\n    }\n    parents.unshift(this.parent.scopeContext(full));\n\n    return parents.filter((value) => value && value.length).join(this.router.instructionResolver.separators.scope);\n  }\n\n  private closestViewport(container: ChildContainer): Viewport {\n    const viewports = Object.values(this.getEnabledViewports());\n    while (container) {\n      const viewport = viewports.find((item) => item.context.get(IContainer) === container);\n      if (viewport) {\n        return viewport;\n      }\n      container = container.parent;\n    }\n    return null;\n  }\n}\n","import { CustomElementHost } from '@aurelia/runtime';\n\nexport function closestCustomElement(element: CustomElementHost<Element>): CustomElementHost {\n  while (element) {\n    if ((element).$customElement) {\n      break;\n    }\n    element = element.parentElement;\n  }\n  return element;\n}\n","import { IContainer, InterfaceSymbol, Reporter } from '@aurelia/kernel';\nimport { Aurelia, ICustomElementType, IRenderContext } from '@aurelia/runtime';\nimport { HistoryBrowser, IHistoryOptions, INavigationInstruction } from './history-browser';\nimport { InstructionResolver, IRouteSeparators } from './instruction-resolver';\nimport { AnchorEventInfo, LinkHandler } from './link-handler';\nimport { INavRoute, Nav } from './nav';\nimport { IParsedQuery, parseQuery } from './parser';\nimport { ChildContainer, IComponentViewport, Scope } from './scope';\nimport { closestCustomElement } from './utils';\nimport { IViewportOptions, Viewport } from './viewport';\nimport { ViewportInstruction } from './viewport-instruction';\n\nexport interface IRouterOptions extends IHistoryOptions {\n  separators?: IRouteSeparators;\n  reportCallback?(instruction: INavigationInstruction): void;\n  transformFromUrl?(path: string, router: Router): string;\n  transformToUrl?(instructions: ViewportInstruction[], router: Router): string;\n}\n\nexport interface IRouteViewport {\n  name: string;\n  component: Partial<ICustomElementType> | string;\n}\n\nexport class Router {\n  public static readonly inject: ReadonlyArray<InterfaceSymbol> = [IContainer];\n\n  public rootScope: Scope;\n  public scopes: Scope[] = [];\n\n  public historyBrowser: HistoryBrowser;\n  public linkHandler: LinkHandler;\n  public instructionResolver: InstructionResolver;\n\n  public navs: Record<string, Nav> = {};\n  public activeComponents: string[] = [];\n\n  public addedViewports: IComponentViewport[] = [];\n\n  private options: IRouterOptions;\n  private isActive: boolean = false;\n  private isRedirecting: boolean = false;\n\n  private readonly pendingNavigations: INavigationInstruction[] = [];\n  private processingNavigation: INavigationInstruction = null;\n  private lastNavigation: INavigationInstruction = null;\n\n  constructor(public container: IContainer) {\n    this.historyBrowser = new HistoryBrowser();\n    this.linkHandler = new LinkHandler();\n    this.instructionResolver = new InstructionResolver();\n  }\n\n  public get isNavigating(): boolean {\n    return this.processingNavigation !== null;\n  }\n\n  public activate(options?: IRouterOptions): Promise<void> {\n    if (this.isActive) {\n      throw Reporter.error(2001);\n    }\n\n    this.isActive = true;\n    this.options = {\n      ...{\n        callback: (navigationInstruction) => {\n          this.historyCallback(navigationInstruction);\n        }\n      }, ...options\n    };\n\n    this.instructionResolver.activate({ separators: this.options.separators });\n    this.linkHandler.activate({ callback: this.linkCallback });\n    return this.historyBrowser.activate(this.options).catch(error => { throw error; });\n  }\n\n  public deactivate(): void {\n    if (!this.isActive) {\n      throw Reporter.error(2000);\n    }\n    this.linkHandler.deactivate();\n    this.historyBrowser.deactivate();\n  }\n\n  public linkCallback = (info: AnchorEventInfo): void => {\n    let href = info.href;\n    if (href.startsWith('#')) {\n      href = href.substring(1);\n    }\n    if (!href.startsWith('/')) {\n      const scope = this.closestScope(info.anchor);\n      const context = scope.scopeContext();\n      href = this.instructionResolver.buildScopedLink(context, href);\n    }\n    this.historyBrowser.setHash(href);\n  }\n\n  public historyCallback(instruction: INavigationInstruction): void {\n    this.pendingNavigations.push(instruction);\n    this.processNavigations().catch(error => { throw error; });\n  }\n\n  // TODO: Reduce complexity (currently at 46)\n  public async processNavigations(): Promise<void> {\n    if (this.processingNavigation !== null || !this.pendingNavigations.length) {\n      return Promise.resolve();\n    }\n\n    const instruction: INavigationInstruction = this.pendingNavigations.shift();\n    this.processingNavigation = instruction;\n\n    if (this.options.reportCallback) {\n      this.options.reportCallback(instruction);\n    }\n\n    if (instruction.isCancel) {\n      this.processingNavigation = null;\n      return this.processNavigations();\n    }\n\n    let fullStateInstruction: boolean = false;\n    if ((instruction.isBack || instruction.isForward) && instruction.fullStatePath) {\n      instruction.path = instruction.fullStatePath;\n      fullStateInstruction = true;\n      // tslint:disable-next-line:no-commented-code\n      // if (!confirm('Perform history navigation?')) {\n      //   this.historyBrowser.cancel();\n      //   this.processingNavigation = null;\n      //   return Promise.resolve();\n      // }\n    }\n\n    let path = instruction.path;\n    if (this.options.transformFromUrl && !fullStateInstruction) {\n      path = this.options.transformFromUrl(path, this);\n      if (Array.isArray(path)) {\n        path = this.instructionResolver.viewportInstructionsToString(path);\n      }\n    }\n\n    const { clearViewports, newPath} = this.instructionResolver.shouldClearViewports(path);\n    if (clearViewports) {\n      path = newPath;\n    }\n\n    const parsedQuery: IParsedQuery = parseQuery(instruction.query);\n    instruction.parameters = parsedQuery.parameters;\n    instruction.parameterList = parsedQuery.list;\n\n    // TODO: Fetch title (probably when done)\n    const title = null;\n    const views: Record<string, string> = this.instructionResolver.findViews(path);\n\n    if (!views && !Object.keys(views).length && !clearViewports) {\n      this.processingNavigation = null;\n      return this.processNavigations();\n    }\n\n    if (title) {\n      await this.historyBrowser.setEntryTitle(title);\n    }\n\n    const usedViewports = (clearViewports ? this.allViewports().filter((value) => value.content.component !== null) : []);\n    const defaultViewports = this.allViewports().filter((value) => value.options.default && value.content.component === null);\n\n    const updatedViewports: Viewport[] = [];\n\n    // TODO: Take care of cancellations down in subsets/iterations\n    let { componentViewports, viewportsRemaining } = this.rootScope.findViewports(views);\n    let guard = 100;\n    while (componentViewports.length || viewportsRemaining || defaultViewports.length) {\n      // Guard against endless loop\n      if (!guard--) {\n        throw Reporter.error(2002);\n      }\n      const changedViewports: Viewport[] = [];\n      for (const componentViewport of componentViewports) {\n        const { component, viewport } = componentViewport;\n        if (viewport.setNextContent(component, instruction)) {\n          changedViewports.push(viewport);\n        }\n        const usedIndex = usedViewports.findIndex((value) => value === viewport);\n        if (usedIndex >= 0) {\n          usedViewports.splice(usedIndex, 1);\n        }\n        const defaultIndex = defaultViewports.findIndex((value) => value === viewport);\n        if (defaultIndex >= 0) {\n          defaultViewports.splice(defaultIndex, 1);\n        }\n      }\n      for (const viewport of usedViewports) {\n        if (viewport.setNextContent(this.instructionResolver.clearViewportInstruction, instruction)) {\n          changedViewports.push(viewport);\n        }\n      }\n      // TODO: Support/review viewports not found in first iteration\n      let vp: Viewport;\n      while (vp = defaultViewports.shift()) {\n        if (vp.setNextContent(vp.options.default, instruction)) {\n          changedViewports.push(vp);\n        }\n      }\n\n      // We've gone via a redirected route back to same viewport status so\n      // we need to remove the added history entry for the redirect\n      // TODO: Take care of empty subsets/iterations where previous has length\n      if (!changedViewports.length && this.isRedirecting) {\n        const result = this.cancelNavigation([...changedViewports, ...updatedViewports], instruction);\n        this.isRedirecting = false;\n        await this.processNavigations();\n        return result;\n      }\n\n      let results = await Promise.all(changedViewports.map((value) => value.canLeave()));\n      if (results.findIndex((value) => value === false) >= 0) {\n        return this.cancelNavigation([...changedViewports, ...updatedViewports], instruction);\n      }\n      results = await Promise.all(changedViewports.map(async (value) => {\n        const canEnter = await value.canEnter();\n        if (typeof canEnter === 'boolean') {\n          if (canEnter) {\n            return value.enter();\n          } else {\n            return false;\n          }\n        }\n        for (const cvp of canEnter) {\n          // TODO: Abort content change in the viewports\n          this.addProcessingViewport(cvp.component, cvp.viewport);\n        }\n        value.abortContentChange().catch(error => { throw error; });\n        return true;\n      }));\n      if (results.some(result => result === false)) {\n        return this.cancelNavigation([...changedViewports, ...updatedViewports], instruction);\n      }\n\n      // TODO: Should it be kept here?\n      // await Promise.all(changedViewports.map((value) => value.loadContent()));\n\n      // TODO: Remove this once multi level recursiveness has been fixed\n      // results = await Promise.all(changedViewports.map((value) => value.loadContent()));\n      // if (results.findIndex((value) => value === false) >= 0) {\n      //   return this.historyBrowser.cancel();\n      // }\n\n      for (const viewport of changedViewports) {\n        if (!updatedViewports.find((value) => value === viewport)) {\n          updatedViewports.push(viewport);\n        }\n      }\n\n      // TODO: Fix multi level recursiveness!\n      const remaining = this.rootScope.findViewports();\n      componentViewports = [];\n      let addedViewport: IComponentViewport;\n      while (addedViewport = this.addedViewports.shift()) {\n        // TODO: Should this overwrite instead? I think so.\n        if (!remaining.componentViewports.find((value) => value.viewport === addedViewport.viewport)) {\n          componentViewports.push(addedViewport);\n        }\n      }\n      componentViewports = [...componentViewports, ...remaining.componentViewports];\n      viewportsRemaining = remaining.viewportsRemaining;\n    }\n\n    await Promise.all(updatedViewports.map((value) => value.loadContent()));\n    await this.replacePaths(instruction);\n\n    // Remove history entry if no history viewports updated\n    if (!instruction.isFirst && !instruction.isRepeat && updatedViewports.every(viewport => viewport.options.noHistory)) {\n      await this.historyBrowser.pop();\n    }\n\n    updatedViewports.forEach((viewport) => {\n      viewport.finalizeContentChange();\n    });\n    this.lastNavigation = this.processingNavigation;\n    if (this.lastNavigation.isRepeat) {\n      this.lastNavigation.isRepeat = false;\n    }\n    this.processingNavigation = null;\n\n    this.processNavigations().catch(error => { throw error; });\n  }\n\n  public addProcessingViewport(component: string | Partial<ICustomElementType>, viewport: Viewport | string): void {\n    if (this.processingNavigation) {\n      if (typeof viewport === 'string') {\n        // TODO: Deal with not yet existing viewports\n        viewport = this.allViewports().find((vp) => vp.name === viewport);\n      }\n      this.addedViewports.push({ viewport: viewport, component: component });\n    } else if (this.lastNavigation) {\n      this.pendingNavigations.unshift({ path: '', fullStatePath: '', isRepeat: true });\n      // Don't wait for the (possibly slow) navigation\n      this.processNavigations().catch(error => { throw error; });\n    }\n  }\n\n  // public findViewport(name: string): Viewport {\n  //   return this.rootScope.findViewport(name);\n  // }\n\n  public findScope(element: Element): Scope {\n    this.ensureRootScope();\n    return this.closestScope(element);\n  }\n\n  // Called from the viewport custom element in attached()\n  public addViewport(name: string, element: Element, context: IRenderContext, options?: IViewportOptions): Viewport {\n    Reporter.write(10000, 'Viewport added', name, element);\n    const parentScope = this.findScope(element);\n    return parentScope.addViewport(name, element, context, options);\n  }\n  // Called from the viewport custom element\n  public removeViewport(viewport: Viewport, element: Element, context: IRenderContext): void {\n    // TODO: There's something hinky with remove!\n    const scope = viewport.owningScope;\n    if (!scope.removeViewport(viewport, element, context)) {\n      this.removeScope(scope);\n    }\n  }\n  public allViewports(): Viewport[] {\n    this.ensureRootScope();\n    return this.rootScope.allViewports();\n  }\n\n  public removeScope(scope: Scope): void {\n    if (scope !== this.rootScope) {\n      scope.removeScope();\n      const index = this.scopes.indexOf(scope);\n      if (index >= 0) {\n        this.scopes.splice(index, 1);\n      }\n    }\n  }\n\n  public goto(pathOrViewports: string | Record<string, Viewport>, title?: string, data?: Record<string, unknown>): Promise<void> {\n    if (typeof pathOrViewports === 'string') {\n      return this.historyBrowser.goto(pathOrViewports, title, data);\n    }\n    // else {\n    //   this.view(pathOrViewports, title, data);\n    // }\n  }\n\n  public replace(pathOrViewports: string | Record<string, Viewport>, title?: string, data?: Record<string, unknown>): Promise<void> {\n    if (typeof pathOrViewports === 'string') {\n      return this.historyBrowser.replace(pathOrViewports, title, data);\n    }\n  }\n\n  public refresh(): Promise<void> {\n    return this.historyBrowser.refresh();\n  }\n\n  public back(): Promise<void> {\n    return this.historyBrowser.back();\n  }\n\n  public forward(): Promise<void> {\n    return this.historyBrowser.forward();\n  }\n\n  public setNav(name: string, routes: INavRoute[]): void {\n    const nav = this.findNav(name);\n    if (nav) {\n      nav.routes = [];\n    }\n    this.addNav(name, routes);\n  }\n  public addNav(name: string, routes: INavRoute[]): void {\n    let nav = this.navs[name];\n    if (!nav) {\n      nav = this.navs[name] = new Nav(this, name);\n    }\n    nav.addRoutes(routes);\n  }\n  public findNav(name: string): Nav {\n    return this.navs[name];\n  }\n\n  private async cancelNavigation(updatedViewports: Viewport[], instruction: INavigationInstruction): Promise<void> {\n    updatedViewports.forEach((viewport) => {\n      viewport.abortContentChange().catch(error => { throw error; });\n    });\n    if (instruction.isNew) {\n      await this.historyBrowser.pop();\n    } else {\n      await this.historyBrowser.cancel();\n    }\n    this.processingNavigation = null;\n    this.processNavigations().catch(error => { throw error; });\n  }\n\n  private ensureRootScope(): void {\n    if (!this.rootScope) {\n      const root = this.container.get(Aurelia).root();\n      this.rootScope = new Scope(this, root.$host as Element, root.$context, null);\n      this.scopes.push(this.rootScope);\n    }\n  }\n\n  private closestScope(element: Element): Scope {\n    const el = closestCustomElement(element);\n    let container: ChildContainer = el.$customElement.$context.get(IContainer);\n    while (container) {\n      const scope = this.scopes.find((item) => item.context.get(IContainer) === container);\n      if (scope) {\n        return scope;\n      }\n      container = container.parent;\n    }\n  }\n\n  private replacePaths(instruction: INavigationInstruction): Promise<void> {\n    this.activeComponents = this.rootScope.viewportStates(true, true);\n    this.activeComponents = this.instructionResolver.removeStateDuplicates(this.activeComponents);\n\n    let viewportStates = this.rootScope.viewportStates();\n    viewportStates = this.instructionResolver.removeStateDuplicates(viewportStates);\n    let state = this.instructionResolver.stateStringsToString(viewportStates);\n    if (this.options.transformToUrl) {\n      state = this.options.transformToUrl(this.instructionResolver.viewportInstructionsFromString(state), this);\n    }\n\n    let fullViewportStates = this.rootScope.viewportStates(true);\n    fullViewportStates = this.instructionResolver.removeStateDuplicates(fullViewportStates);\n    const query = (instruction.query && instruction.query.length ? `?${instruction.query}` : '');\n    return this.historyBrowser.replacePath(\n      state + query,\n      this.instructionResolver.stateStringsToString(fullViewportStates, true) + query,\n      instruction);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Constructable, InterfaceSymbol, Writable } from '@aurelia/kernel';\nimport { bindable, createRenderContext, CustomElementResource, ICustomElement, ICustomElementType, IDOM, IElementTemplateProvider, INode, IRenderContext, IRenderingEngine, ITemplate, LifecycleFlags, TemplateDefinition } from '@aurelia/runtime';\nimport { Router } from '../router';\nimport { IViewportOptions, Viewport } from '../viewport';\n\nexport interface ViewportCustomElement extends ICustomElement<Element> { }\nexport class ViewportCustomElement {\n  public static readonly inject: ReadonlyArray<InterfaceSymbol | Constructable> = [Router, INode, IRenderingEngine];\n\n  @bindable public name: string;\n  @bindable public scope: boolean;\n  @bindable public usedBy: string;\n  @bindable public default: string;\n  @bindable public noLink: boolean;\n  @bindable public noHistory: boolean;\n  @bindable public stateful: boolean;\n\n  public viewport: Viewport;\n\n  private readonly router: Router;\n  private readonly element: Element;\n  private readonly renderingEngine: IRenderingEngine;\n\n  constructor(router: Router, element: Element, renderingEngine: IRenderingEngine) {\n    this.router = router;\n    this.element = element;\n    this.renderingEngine = renderingEngine;\n\n    this.name = 'default';\n    this.scope = null;\n    this.usedBy = null;\n    this.default = null;\n    this.noLink = null;\n    this.noHistory = null;\n    this.stateful = null;\n    this.viewport = null;\n  }\n\n  public render(flags: LifecycleFlags, host: INode, parts: Record<string, TemplateDefinition>, parentContext: IRenderContext | null): IElementTemplateProvider | void {\n    const Type = this.constructor as ICustomElementType;\n    const dom = parentContext.get(IDOM);\n    const template = this.renderingEngine.getElementTemplate(dom, Type.description, parentContext, Type);\n    (template as Writable<ITemplate>).renderContext = createRenderContext(dom, parentContext, Type.description.dependencies, Type);\n    template.render(this, host, parts);\n  }\n\n  // public created(...rest): void {\n  //   console.log('Created', rest);\n  //   const booleanAttributes = {\n  //     'scope': 'scope',\n  //     'no-link': 'noLink',\n  //     'no-history': 'noHistory',\n  //   };\n  //   const valueAttributes = {\n  //     'used-by': 'usedBy',\n  //     'default': 'default',\n  //   };\n  //   const name = this.element.hasAttribute('name') ? this.element.getAttribute('name') : 'default';\n  //   const options: IViewportOptions = {};\n  //   for (const attribute in booleanAttributes) {\n  //     if (this.element.hasAttribute[attribute]) {\n  //       options[booleanAttributes[attribute]] = true;\n  //     }\n  //   }\n  //   for (const attribute in valueAttributes) {\n  //     if (this.element.hasAttribute(attribute)) {\n  //       const value = this.element.getAttribute(attribute);\n  //       if (value && value.length) {\n  //         options[valueAttributes[attribute]] = value;\n  //       }\n  //     }\n  //   }\n  //   this.viewport = this.router.addViewport(name, this.element, (this as any).$context.get(IContainer), options);\n  // }\n  public bound(): void {\n    this.connect();\n  }\n  public unbound(): void {\n    this.disconnect();\n  }\n\n  public connect(): void {\n    const options: IViewportOptions = { scope: this.element.hasAttribute('scope') };\n    if (this.usedBy && this.usedBy.length) {\n      options.usedBy = this.usedBy;\n    }\n    if (this.default && this.default.length) {\n      options.default = this.default;\n    }\n    if (this.element.hasAttribute('no-link')) {\n      options.noLink = true;\n    }\n    if (this.element.hasAttribute('no-history')) {\n      options.noHistory = true;\n    }\n    if (this.element.hasAttribute('stateful')) {\n      options.stateful = true;\n    }\n    this.viewport = this.router.addViewport(this.name, this.element, this.$context, options);\n  }\n  public disconnect(): void {\n    this.router.removeViewport(this.viewport, this.element, this.$context);\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.binding(flags);\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.attaching(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.detaching(flags);\n    }\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.unbinding(flags);\n    }\n  }\n}\n// tslint:disable-next-line:no-invalid-template-strings\nCustomElementResource.define({ name: 'au-viewport', template: '<template><div class=\"viewport-header\"> Viewport: <b>${name}</b> </div></template>' }, ViewportCustomElement);\n","// NOTE: this file is currently not in use\n\nimport { inject } from '@aurelia/kernel';\nimport { bindable, customElement } from '@aurelia/runtime';\nimport { NavRoute } from '../nav-route';\nimport { Router } from '../router';\n\n@inject(Router, Element)\n@customElement({\n  name: 'au-nav', template:\n    `<template>\n  <nav if.bind=\"name\" class=\"\\${name}\">\n    <au-nav routes.bind=\"navRoutes\" containerless></au-nav>\n  </nav>\n  <ul if.bind=\"routes\" class=\"nav-level-\\${level}\">\n    <li repeat.for=\"route of routes\" class=\"\\${route.active} \\${route.hasChildren}\">\n      <a if.bind=\"route.link && route.link.length\" href=\"\\${route.link}\">\\${route.title}</a>\n      <a if.bind=\"!route.link || !route.link.length\" click.delegate=\"route.toggleActive()\" href=\"\">\\${route.title}</a>\n      <au-nav if.bind=\"route.children\" routes.bind=\"route.children\" level.bind=\"level + 1\" containerless></au-nav>\n    </li>\n  </ul>\n</template>` })\nexport class NavCustomElement {\n  @bindable public name: string;\n  @bindable public routes: NavRoute[];\n  @bindable public level: number;\n\n  private readonly router: Router;\n\n  constructor(router: Router) {\n    this.router = router;\n\n    this.name = null;\n    this.routes = null;\n    this.level = 0;\n  }\n\n  get navRoutes(): NavRoute[] {\n    const nav = this.router.findNav(this.name);\n    return (nav ? nav.routes : []);\n  }\n\n  public active(route: NavRoute): string {\n    return 'Active';\n  }\n}\n"],"names":["Reporter","PLATFORM","IContainer","CustomElementResource","IObserverLocator","buildQueryString","parseQueryString","Aurelia","IDOM","createRenderContext","INode","IRenderingEngine","tslib_1.__decorate","bindable","NavCustomElement","inject","customElement"],"mappings":"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"}