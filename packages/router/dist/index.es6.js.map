{"version":3,"file":"index.es6.js","sources":["../src/history-browser.ts","../src/link-handler.ts","../src/nav-route.ts","../src/nav.ts","../src/route-recognizer.ts","../src/parser.ts","../src/viewport.ts","../src/scope.ts","../src/utils.ts","../src/router.ts","../../../node_modules/tslib/tslib.es6.js","../src/resources/viewport.ts","../src/resources/nav.ts"],"sourcesContent":["export interface IHistoryEntry {\n  path: string;\n  fullStatePath: string;\n  index?: number;\n  title?: string;\n  query?: string;\n  parameters?: Record<string, string>;\n  parameterList?: string[];\n  data?: Record<string, unknown>;\n}\n\nexport interface IHistoryOptions {\n  callback?(instruction: INavigationInstruction): void;\n}\n\nexport interface INavigationFlags {\n  isFirst?: boolean;\n  isNew?: boolean;\n  isRefresh?: boolean;\n  isForward?: boolean;\n  isBack?: boolean;\n  isReplace?: boolean;\n  isCancel?: boolean;\n}\n\nexport interface INavigationInstruction extends IHistoryEntry, INavigationFlags {\n  previous?: IHistoryEntry;\n}\n\nexport class HistoryBrowser {\n  public currentEntry: IHistoryEntry;\n  public historyEntries: IHistoryEntry[];\n  public historyOffset: number;\n  public replacedEntry: IHistoryEntry;\n\n  public history: History;\n  public location: Location;\n\n  private activeEntry: IHistoryEntry;\n\n  private options: IHistoryOptions;\n  private isActive: boolean;\n\n  private lastHistoryMovement: number;\n  private cancelRedirectHistoryMovement: number;\n  private isCancelling: boolean;\n  private isReplacing: boolean;\n  private isRefreshing: boolean;\n\n  private ignorePathChange?: ((value?: {} | PromiseLike<{}>) => void) | null;\n\n  constructor() {\n    this.location = window.location;\n    this.history = window.history;\n\n    this.currentEntry = null;\n    this.historyEntries = null;\n    this.historyOffset = null;\n    this.replacedEntry = null;\n\n    this.activeEntry = null;\n\n    this.options = null;\n    this.isActive = false;\n\n    this.lastHistoryMovement = null;\n    this.cancelRedirectHistoryMovement = null;\n    this.isCancelling = false;\n    this.isReplacing = false;\n    this.isRefreshing = false;\n\n    this.ignorePathChange = null;\n  }\n\n  public activate(options?: IHistoryOptions): Promise<void> {\n    if (this.isActive) {\n      throw new Error('History has already been activated.');\n    }\n\n    this.isActive = true;\n    this.options = { ...options };\n\n    window.addEventListener('popstate', this.pathChanged);\n\n    return Promise.resolve().then(() => {\n      this.setPath(this.getPath(), true);\n    });\n  }\n\n  public deactivate(): void {\n    window.removeEventListener('popstate', this.pathChanged);\n    this.isActive = false;\n  }\n\n  public goto(path: string, title?: string, data?: Record<string, unknown>): void {\n    this.activeEntry = {\n      path: path,\n      fullStatePath: null,\n      title: title,\n      data: data,\n    };\n    this.setPath(path);\n  }\n\n  public replace(path: string, title?: string, data?: Record<string, unknown>): void {\n    this.isReplacing = true;\n    this.activeEntry = {\n      path: path,\n      fullStatePath: null,\n      title: title,\n      data: data,\n    };\n    this.setPath(path, true);\n  }\n  public redirect(path: string, title?: string, data?: Record<string, unknown>): void {\n    // This makes sure we can cancel redirects from both pushes and replaces\n    this.cancelRedirectHistoryMovement = this.lastHistoryMovement + 1;\n    this.replace(path, title, data);\n  }\n\n  public refresh(): void {\n    if (!this.currentEntry) {\n      return;\n    }\n    this.isRefreshing = true;\n    this.replace(this.currentEntry.path, this.currentEntry.title, this.currentEntry.data);\n  }\n\n  public back(): void {\n    this.history.go(-1);\n  }\n\n  public forward(): void {\n    this.history.go(1);\n  }\n\n  public cancel(): void {\n    this.isCancelling = true;\n    const movement = this.lastHistoryMovement || this.cancelRedirectHistoryMovement;\n    if (movement) {\n      this.history.go(-movement);\n    } else {\n      this.replace(this.replacedEntry.path, this.replacedEntry.title, this.replacedEntry.data);\n    }\n  }\n\n  public async pop(): Promise<void> {\n    // TODO: Make sure we don't back out of application\n    let state;\n    // tslint:disable-next-line:promise-must-complete\n    let wait = new Promise((resolve, reject): void => {\n      this.ignorePathChange = resolve;\n    });\n    this.history.go(-1);\n    await wait;\n    const path = this.location.toString();\n    state = this.history.state;\n    // tslint:disable-next-line:promise-must-complete\n    wait = new Promise((resolve, reject): void => {\n      this.ignorePathChange = resolve;\n    });\n    this.history.go(-1);\n    await wait;\n    this.history.pushState(state, null, path);\n  }\n\n  public setState(key: string | Record<string, unknown>, value?: Record<string, unknown>): void {\n    const { pathname, search, hash } = this.location;\n    let state = { ...this.history.state };\n    if (typeof key === 'string') {\n      state[key] = JSON.parse(JSON.stringify(value));\n    } else {\n      state = { ...state, ...JSON.parse(JSON.stringify(key)) };\n    }\n    this.history.replaceState(state, null, `${pathname}${search}${hash}`);\n  }\n\n  public getState(key: string): Record<string, unknown> {\n    const state = { ...this.history.state };\n    return state[key];\n  }\n\n  public setEntryTitle(title: string): void {\n    this.currentEntry.title = title;\n    this.historyEntries[this.currentEntry.index] = this.currentEntry;\n    this.setState({\n      'HistoryEntries': this.historyEntries,\n      'HistoryEntry': this.currentEntry,\n    });\n  }\n\n  public replacePath(path: string, fullStatePath: string, entry: INavigationInstruction): void {\n    if (entry.index !== this.currentEntry.index) {\n      // TODO: Store unresolved in localStorage to set if we should ever navigate back to it\n      // tslint:disable-next-line:no-console\n      console.warn('replacePath: entry not matching currentEntry', entry, this.currentEntry);\n      return;\n    }\n\n    const newHash = `#/${path}`;\n    const { pathname, search, hash } = this.location;\n    // tslint:disable-next-line:possible-timing-attack\n    if (newHash === hash && this.currentEntry.path === path && this.currentEntry.fullStatePath === fullStatePath) {\n      return;\n    }\n    this.currentEntry.path = path;\n    this.currentEntry.fullStatePath = fullStatePath;\n    const state = {\n      ...this.history.state,\n      ...{\n        'HistoryEntry': this.currentEntry,\n        'HistoryEntries': this.historyEntries,\n      }\n    };\n    this.history.replaceState(state, null, `${pathname}${search}${newHash}`);\n  }\n\n  public setHash(hash: string): void {\n    if (!hash.startsWith('#')) {\n      hash = `#${hash}`;\n    }\n    this.location.hash = hash;\n  }\n\n  get titles(): string[] {\n    return (this.historyEntries ? this.historyEntries.slice(0, this.currentEntry.index + 1).map((value) => value.title) : []);\n  }\n\n  public pathChanged = (): void => {\n    if (this.ignorePathChange !== null) {\n      // tslint:disable-next-line:no-console\n      console.log('=== ignore path change', this.getPath());\n      const resolve = this.ignorePathChange;\n      this.ignorePathChange = null;\n      resolve();\n      return;\n    }\n\n    const path: string = this.getPath();\n    const search: string = this.getSearch();\n    // tslint:disable-next-line:no-console\n    console.log('path changed to', path, this.activeEntry, this.currentEntry);\n\n    const navigationFlags: INavigationFlags = {};\n\n    let previousEntry: IHistoryEntry;\n    let historyEntry: IHistoryEntry = this.getState('HistoryEntry') as IHistoryEntry;\n    if (this.activeEntry && this.activeEntry.path === path) { // Only happens with new history entries (including replacing ones)\n      navigationFlags.isNew = true;\n      const index = (this.isReplacing ? this.currentEntry.index : this.history.length - this.historyOffset);\n      previousEntry = this.currentEntry;\n      this.currentEntry = this.activeEntry;\n      this.currentEntry.index = index;\n      if (this.isReplacing) {\n        this.lastHistoryMovement = 0;\n        this.historyEntries[this.currentEntry.index] = this.currentEntry;\n        if (this.isCancelling) {\n          navigationFlags.isCancel = true;\n          this.isCancelling = false;\n          // Prevent another cancel by clearing lastHistoryMovement?\n        } else if (this.isRefreshing) {\n          navigationFlags.isRefresh = true;\n          this.isRefreshing = false;\n        } else {\n          navigationFlags.isReplace = true;\n        }\n        this.isReplacing = false;\n      } else {\n        this.lastHistoryMovement = 1;\n        this.historyEntries = this.historyEntries.slice(0, this.currentEntry.index);\n        this.historyEntries.push(this.currentEntry);\n      }\n      this.setState({\n        'HistoryEntries': this.historyEntries,\n        'HistoryOffset': this.historyOffset,\n        'HistoryEntry': this.currentEntry\n      });\n    } else { // Refresh, history navigation, first navigation, manual navigation or cancel\n      this.historyEntries = (this.historyEntries || this.getState('HistoryEntries') || []) as IHistoryEntry[];\n      // tslint:disable-next-line:strict-boolean-expressions\n      this.historyOffset = (this.historyOffset || this.getState('HistoryOffset') || 0) as number;\n      if (!historyEntry && !this.currentEntry) {\n        navigationFlags.isNew = true;\n        navigationFlags.isFirst = true;\n        this.historyOffset = this.history.length;\n      } else if (!historyEntry) {\n        navigationFlags.isNew = true;\n      } else if (!this.currentEntry) {\n        navigationFlags.isRefresh = true;\n      } else if (this.currentEntry.index < historyEntry.index) {\n        navigationFlags.isForward = true;\n      } else if (this.currentEntry.index > historyEntry.index) {\n        navigationFlags.isBack = true;\n      }\n\n      if (!historyEntry) {\n        // TODO: max history length of 50, find better new index\n        historyEntry = {\n          path: path,\n          fullStatePath: null,\n          index: this.history.length - this.historyOffset,\n          query: search,\n        };\n        this.historyEntries = this.historyEntries.slice(0, historyEntry.index);\n        this.historyEntries.push(historyEntry);\n        this.setState({\n          'HistoryEntries': this.historyEntries,\n          'HistoryOffset': this.historyOffset,\n          'HistoryEntry': historyEntry\n        });\n      }\n      this.lastHistoryMovement = (this.currentEntry ? historyEntry.index - this.currentEntry.index : 0);\n      previousEntry = this.currentEntry;\n      this.currentEntry = historyEntry;\n\n      if (this.isCancelling) {\n        navigationFlags.isCancel = true;\n        this.isCancelling = false;\n        // Prevent another cancel by clearing lastHistoryMovement?\n      }\n    }\n    this.activeEntry = null;\n\n    if (this.cancelRedirectHistoryMovement) {\n      this.cancelRedirectHistoryMovement--;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log('navigated', this.getState('HistoryEntry'), this.historyEntries, this.getState('HistoryOffset'));\n    this.callback(this.currentEntry, navigationFlags, previousEntry);\n  }\n\n  private getPath(): string {\n    const hash = this.location.hash.substring(1);\n    return hash.split('?')[0];\n  }\n  private setPath(path: string, replace: boolean = false): void {\n    // More checks, such as parameters, needed\n    if (this.currentEntry && this.currentEntry.path === path && !this.isRefreshing) {\n      return;\n    }\n\n    const { pathname, search } = this.location;\n    const hash = `#${path}`;\n    if (replace) {\n      this.replacedEntry = this.currentEntry;\n      this.history.replaceState({}, null, `${pathname}${search}${hash}`);\n    } else {\n      // tslint:disable-next-line:no-commented-code\n      // this.location.hash = hash;\n      this.history.pushState({}, null, `${pathname}${search}${hash}`);\n    }\n    this.pathChanged();\n  }\n\n  private getSearch(): string {\n    const hash = this.location.hash.substring(1);\n    const hashSearches = hash.split('?');\n    hashSearches.shift();\n    return hashSearches.length > 0 ? hashSearches.shift() : '';\n  }\n\n  private callback(currentEntry: IHistoryEntry, navigationFlags: INavigationFlags, previousEntry: IHistoryEntry): void {\n    const instruction: INavigationInstruction = { ...currentEntry, ...navigationFlags };\n    instruction.previous = previousEntry;\n    // tslint:disable-next-line:no-console\n    console.log('callback', currentEntry, navigationFlags);\n    if (this.options.callback) {\n      this.options.callback(instruction);\n    }\n  }\n}\n","/**\n * Provides information about how to handle an anchor event.\n */\nexport interface ILinkHandlerOptions {\n  /**\n   * Callback method for when a link is clicked\n   */\n  callback?(info: AnchorEventInfo): void;\n}\n\n/**\n * Provides information about how to handle an anchor event.\n */\nexport interface AnchorEventInfo {\n  /**\n   * Indicates whether the event should be handled or not.\n   */\n  shouldHandleEvent: boolean;\n  /**\n   * The href of the link or null if not-applicable.\n   */\n  href: string;\n  /**\n   * The anchor element or null if not-applicable.\n   */\n  anchor: Element;\n}\n\n/**\n * Class responsible for handling interactions that should trigger navigation.\n */\nexport class LinkHandler {\n  private static readonly window: Window;\n\n  private options: ILinkHandlerOptions;\n  private isActive: boolean = false;\n\n  // private handler: EventListener;\n  private readonly document: Document;\n\n  constructor() {\n    this.document = document;\n  }\n  /**\n   * Gets the href and a \"should handle\" recommendation, given an Event.\n   *\n   * @param event The Event to inspect for target anchor and href.\n   */\n  private static getEventInfo(event: Event): AnchorEventInfo {\n    const info = {\n      shouldHandleEvent: false,\n      href: null,\n      anchor: null\n    };\n\n    const target = LinkHandler.closestAnchor(event.target as Element);\n    if (!target || !LinkHandler.targetIsThisWindow(target)) {\n      return info;\n    }\n\n    if (target.hasAttribute('external')) {\n      return info;\n    }\n\n    if ((event as MouseEvent).altKey || (event as MouseEvent).ctrlKey || (event as MouseEvent).metaKey || (event as MouseEvent).shiftKey) {\n      return info;\n    }\n\n    const href = target.getAttribute('href');\n    info.anchor = target;\n    info.href = href;\n\n    const leftButtonClicked = (event as MouseEvent).which === 1;\n\n    info.shouldHandleEvent = leftButtonClicked;\n    return info;\n  }\n\n  /**\n   * Finds the closest ancestor that's an anchor element.\n   *\n   * @param el The element to search upward from.\n   * @returns The link element that is the closest ancestor.\n   */\n  private static closestAnchor(el: Element): Element {\n    while (el) {\n      if (el.tagName === 'A') {\n        return el;\n      }\n      el = el.parentNode as Element;\n    }\n  }\n\n  /**\n   * Gets a value indicating whether or not an anchor targets the current window.\n   *\n   * @param target The anchor element whose target should be inspected.\n   * @returns True if the target of the link element is this window; false otherwise.\n   */\n  private static targetIsThisWindow(target: Element): boolean {\n    const targetWindow = target.getAttribute('target');\n    const win = LinkHandler.window;\n\n    return !targetWindow ||\n      targetWindow === win.name ||\n      targetWindow === '_self';\n  }\n\n  /**\n   * Activate the instance.\n   *\n   */\n  public activate(options: ILinkHandlerOptions): void {\n    if (this.isActive) {\n      throw new Error('LinkHandler has already been activated.');\n    }\n\n    this.isActive = true;\n    this.options = { ...options };\n\n    this.document.addEventListener('click', this.handler, true);\n  }\n\n  /**\n   * Deactivate the instance. Event handlers and other resources should be cleaned up here.\n   */\n  public deactivate(): void {\n    this.document.removeEventListener('click', this.handler, true);\n    this.isActive = false;\n  }\n\n  private readonly handler: EventListener = (e) => {\n    const info = LinkHandler.getEventInfo(e);\n\n    if (info.shouldHandleEvent) {\n      e.preventDefault();\n      this.options.callback(info);\n    }\n  }\n}\n","import { ICustomElementType, IObserverLocator, IPropertyObserver, LifecycleFlags } from '@aurelia/runtime';\nimport { INavRoute, IViewportComponent, Nav, NavComponent } from './nav';\nimport { Router } from './router';\n\nexport class NavRoute {\n  public nav: Nav;\n  public components: NavComponent | NavComponent[];\n  public title: string;\n  public link?: string;\n  public linkActive?: string;\n  public children?: NavRoute[];\n  public meta?: Record<string, unknown>;\n\n  public active: string = '';\n\n  private readonly observerLocator: IObserverLocator;\n  private readonly observer: IPropertyObserver<Router, 'activeComponents'>;\n\n  constructor(nav: Nav, route?: INavRoute) {\n    this.nav = nav;\n    Object.assign(this, {\n      components: route.components,\n      title: route.title,\n      children: null,\n      meta: route.meta,\n      active: '',\n    });\n    this.link = this._link(this.components);\n    this.linkActive = route.consideredActive ? this._link(route.consideredActive) : this.link;\n    this.observerLocator = this.nav.router.container.get(IObserverLocator);\n    this.observer = this.observerLocator.getObserver(LifecycleFlags.none, this.nav.router, 'activeComponents') as IPropertyObserver<Router, 'activeComponents'>;\n    this.observer.subscribe(this);\n  }\n\n  public get hasChildren(): string {\n    return (this.children && this.children.length ? 'nav-has-children' : '');\n  }\n\n  public handleChange(): void {\n    if (this.link && this.link.length) {\n      this.active = this._active();\n    } else {\n      this.active = (this.active === 'nav-active' ? 'nav-active' : (this.activeChild() ? 'nav-active-child' : ''));\n    }\n  }\n\n  public _active(): string {\n    const components: string[] = this.linkActive.split(this.nav.router.separators.add);\n    const activeComponents: string[] = this.nav.router.activeComponents;\n    for (const component of components) {\n      if (component.indexOf(this.nav.router.separators.viewport) >= 0) {\n        if (activeComponents.indexOf(component) < 0) {\n          return '';\n        }\n      } else {\n        if (activeComponents.findIndex((value) => value.replace(/\\@[^=]*/, '') === component) < 0) {\n          return '';\n        }\n      }\n    }\n    return 'nav-active';\n  }\n\n  public toggleActive(): void {\n    this.active = (this.active.startsWith('nav-active') ? '' : 'nav-active');\n  }\n\n  public _link(components: NavComponent | NavComponent[]): string {\n    if (Array.isArray(components)) {\n      return components.map((value) => this.linkName(value)).join(this.nav.router.separators.sibling);\n    } else {\n      return this.linkName(components);\n    }\n  }\n\n  private activeChild(): boolean {\n    if (this.children) {\n      for (const child of this.children) {\n        if (child.active.startsWith('nav-active') || child.activeChild()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private linkName(component: NavComponent): string {\n    if (!component) {\n      return '';\n    } else if (typeof component === 'string') {\n      return component;\n    } else if ((component as ICustomElementType).description) {\n      return (component as ICustomElementType).description.name;\n    } else if ((component as IViewportComponent).component) {\n      return this.linkName((component as IViewportComponent).component) + ((component as IViewportComponent).viewport ? `@${(component as IViewportComponent).viewport}` : '');\n    }\n  }\n}\n","import { ICustomElementType } from '@aurelia/runtime';\nimport { NavRoute } from './nav-route';\nimport { Router } from './router';\n\nexport interface IViewportComponent {\n  viewport?: string;\n  component: string | Partial<ICustomElementType>;\n}\n\nexport type NavComponent = string | Partial<ICustomElementType> | IViewportComponent;\n\nexport interface INavRoute {\n  components: NavComponent | NavComponent[];\n  consideredActive?: NavComponent | NavComponent[];\n  link?: string;\n  title: string;\n  children?: INavRoute[];\n  meta?: Record<string, unknown>;\n}\n\nexport class Nav {\n  public name: string;\n  public routes: NavRoute[];\n\n  public router: Router;\n\n  constructor(router: Router, name: string) {\n    this.router = router;\n    this.name = name;\n\n    this.routes = [];\n  }\n\n  public addRoutes(routes: INavRoute[]): void {\n    for (const route of routes) {\n      this.addRoute(this.routes, route);\n    }\n  }\n\n  public addRoute(routes: NavRoute[], route: INavRoute): void {\n    const newRoute = new NavRoute(this, route);\n    routes.push(newRoute);\n    if (route.children) {\n      newRoute.children = [];\n      for (const child of route.children) {\n        this.addRoute(newRoute.children, child);\n      }\n    }\n  }\n}\n","import { buildQueryString, IQueryParams, parseQueryString } from '@aurelia/kernel';\n\nexport interface RouteHandler {\n  href?: string;\n  generationUsesHref?: boolean;\n  name?: string | string[];\n}\n\nexport interface ConfigurableRoute {\n  path: string;\n  handler: RouteHandler;\n  caseSensitive?: boolean;\n}\n\nexport class HandlerEntry {\n  public handler: RouteHandler;\n  public names: string[];\n\n  constructor(handler: RouteHandler, names: string[]) {\n    this.handler = handler;\n    this.names = names;\n  }\n}\n\n/*\n* An object that is indexed and used for route generation, particularly for dynamic routes.\n*/\nexport class RouteGenerator {\n  public segments: Segment[];\n  public handlers: HandlerEntry[];\n\n  constructor(segments: Segment[], handlers: HandlerEntry[]) {\n    this.segments = segments;\n    this.handlers = handlers;\n  }\n}\n\nexport class TypesRecord {\n  public statics: number;\n  public dynamics: number;\n  public stars: number;\n\n  constructor() {\n    this.statics = 0;\n    this.dynamics = 0;\n    this.stars = 0;\n  }\n}\n\nexport class RecognizeResult {\n  public handler: RouteHandler;\n  public params: Record<string, string>;\n  public isDynamic: boolean;\n\n  constructor(\n    handler: RouteHandler,\n    params: Record<string, string>,\n    isDynamic: boolean\n  ) {\n    this.handler = handler;\n    this.params = params;\n    this.isDynamic = isDynamic;\n  }\n}\n\nexport interface RecognizeResults extends Array<RecognizeResult> {\n  queryParams: IQueryParams;\n}\n\nexport class CharSpec {\n  public invalidChars: string | null;\n  public validChars: string | null;\n  public repeat: boolean;\n\n  constructor(\n    invalidChars: string | null,\n    validChars: string | null,\n    repeat: boolean\n  ) {\n    this.invalidChars = invalidChars;\n    this.validChars = validChars;\n    this.repeat = repeat;\n  }\n\n  public equals(other: CharSpec): boolean {\n    return this.validChars === other.validChars && this.invalidChars === other.invalidChars;\n  }\n}\n\nexport class State {\n  public handlers: HandlerEntry[];\n  public regex: RegExp;\n  public types: TypesRecord;\n  public charSpec: CharSpec;\n  public nextStates: State[];\n\n  constructor(charSpec?: CharSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  public put(charSpec: CharSpec): State {\n    let state = this.nextStates.find(s => s.charSpec.equals(charSpec));\n\n    if (state === undefined) {\n      state = new State(charSpec);\n      this.nextStates.push(state);\n\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n    }\n\n    return state;\n  }\n}\nconst specials = [\n  '/', '.', '*', '+', '?', '|',\n  '(', ')', '[', ']', '{', '}', '\\\\'\n];\n\nconst escapeRegex = new RegExp(`(\\\\${specials.join('|\\\\')})`, 'g');\n\n// A Segment represents a segment in the original route description.\n// Each Segment type provides an `eachChar` and `regex` method.\n//\n// The `eachChar` method invokes the callback with one or more character\n// specifications. A character specification consumes one or more input\n// characters.\n//\n// The `regex` method returns a regex fragment for the segment. If the\n// segment is a dynamic or star segment, the regex fragment also includes\n// a capture.\n//\n// A character specification contains:\n//\n// * `validChars`: a String with a list of all valid characters, or\n// * `invalidChars`: a String with a list of all invalid characters\n// * `repeat`: true if the character specification can repeat\n\nexport class StaticSegment {\n  public name: string;\n  public string: string;\n  public optional: boolean;\n  public caseSensitive: boolean;\n\n  constructor(str: string, caseSensitive: boolean) {\n    this.name = str;\n    this.string = str;\n    this.caseSensitive = caseSensitive;\n    this.optional = false;\n  }\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    const s = this.string;\n    const len = s.length;\n    let i = 0;\n    let ch = '';\n    if (this.caseSensitive) {\n      for (; i < len; ++i) {\n        ch = s.charAt(i);\n        callback(new CharSpec(null, ch, false));\n      }\n    } else {\n      for (; i < len; ++i) {\n        ch = s.charAt(i);\n        callback(new CharSpec(null, ch.toUpperCase() + ch.toLowerCase(), false));\n      }\n    }\n  }\n\n  public regex(): string {\n    return this.string.replace(escapeRegex, '\\\\$1');\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    return this.string;\n  }\n}\n\nexport class DynamicSegment {\n  public name: string;\n  public optional: boolean;\n\n  constructor(name: string, optional: boolean) {\n    this.name = name;\n    this.optional = optional;\n  }\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    callback(new CharSpec('/', null, true));\n  }\n\n  public regex(): string {\n    return '([^/]+)';\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n}\n\nexport class StarSegment {\n  public name: string;\n  public optional: boolean;\n\n  constructor(name: string) {\n    this.name = name;\n    this.optional = false;\n  }\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    callback(new CharSpec('', null, true));\n  }\n\n  public regex(): string {\n    return '(.+)';\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n}\n\nexport class EpsilonSegment {\n  public name?: string;\n  public optional?: boolean;\n\n  public eachChar(callback: (spec: CharSpec) => void): void {\n    return;\n  }\n\n  public regex(): string {\n    return '';\n  }\n\n  public generate(params: Record<string, string>, consumed: Record<string, boolean>): string {\n    return '';\n  }\n}\nexport type Segment = StaticSegment | DynamicSegment | StarSegment | EpsilonSegment;\n\n/**\n * Class that parses route patterns and matches path strings.\n */\nexport class RouteRecognizer {\n  public rootState: State;\n  public names: Record<string, RouteGenerator>;\n  public routes: Map<RouteHandler, RouteGenerator>;\n\n  constructor() {\n    this.rootState = new State();\n    this.names = {};\n    this.routes = new Map();\n  }\n\n  /**\n   * Parse a route pattern and add it to the collection of recognized routes.\n   *\n   * @param route The route to add.\n   */\n  public add(route: ConfigurableRoute|ConfigurableRoute[]): State | undefined {\n    if (Array.isArray(route)) {\n      route.forEach(r => {\n        this.add(r);\n      });\n      return;\n    }\n\n    let currentState = this.rootState;\n    const skippableStates: State[] = [];\n    let regex = '^';\n    const types = new TypesRecord();\n    const names: string[] = [];\n    const routeName = route.handler.name;\n    let isEmpty = true;\n\n    let normalizedRoute = route.path;\n    if (normalizedRoute.charAt(0) === '/') {\n      normalizedRoute = normalizedRoute.slice(1);\n    }\n\n    const segments: Segment[] = [];\n\n    const splitRoute = normalizedRoute.split('/');\n    let part: string;\n    let segment: Segment;\n    for (let i = 0, ii = splitRoute.length; i < ii; ++i) {\n      part = splitRoute[i];\n\n      // Try to parse a parameter :param?\n      let match = part.match(/^:([^?]+)(\\?)?$/);\n      if (match) {\n        const [, name, optional] = match;\n        if (name.indexOf('=') !== -1) {\n          throw new Error(`Parameter ${name} in route ${route} has a default value, which is not supported.`);\n        }\n        segments.push(segment = new DynamicSegment(name, !!optional));\n        names.push(name);\n        types.dynamics++;\n      } else {\n        // Try to parse a star segment *whatever\n        match = part.match(/^\\*(.+)$/);\n        if (match) {\n          segments.push(segment = new StarSegment(match[1]));\n          names.push(match[1]);\n          types.stars++;\n        } else if (part === '') {\n          segments.push(new EpsilonSegment());\n          continue;\n        } else {\n          segments.push(segment = new StaticSegment(part, route.caseSensitive));\n          types.statics++;\n        }\n      }\n\n      // Add a representation of the segment to the NFA and regex\n      const firstState = currentState.put(new CharSpec(null, '/', false));\n      let nextState = firstState;\n      segment.eachChar(ch => {\n        nextState = nextState.put(ch);\n      });\n\n      // add the first part of the next segment to the end of any skipped states\n      for (let j = 0, jj = skippableStates.length; j < jj; j++) {\n        skippableStates[j].nextStates.push(firstState);\n      }\n\n      // If the segment was optional we don't fast forward to the end of the\n      // segment, but we do hold on to a reference to the end of the segment\n      // for adding future segments. Multiple consecutive optional segments\n      // will accumulate.\n      if (segment.optional) {\n        skippableStates.push(nextState);\n        regex += `(?:/${segment.regex()})?`;\n\n      // Otherwise, we fast forward to the end of the segment and remove any\n      // references to skipped segments since we don't need them anymore.\n      } else {\n        currentState = nextState;\n        regex += `/${segment.regex()}`;\n        skippableStates.length = 0;\n        isEmpty = false;\n      }\n    }\n\n    // An \"all optional\" path is technically empty since currentState is this.rootState\n    if (isEmpty) {\n      currentState = currentState.put(new CharSpec(null, '/', false));\n      regex += '/?';\n    }\n\n    const handlers = [new HandlerEntry(route.handler, names)];\n\n    this.routes.set(route.handler, new RouteGenerator(segments, handlers));\n    if (routeName) {\n      const routeNames = Array.isArray(routeName) ? routeName : [routeName];\n      for (let i = 0; i < routeNames.length; i++) {\n        if (!(routeNames[i] in this.names)) {\n          this.names[routeNames[i]] = new RouteGenerator(segments, handlers);\n        }\n      }\n    }\n\n    // Any trailing skipped states need to be endpoints and need to have\n    // handlers attached.\n    for (let i = 0; i < skippableStates.length; i++) {\n      const state = skippableStates[i];\n      state.handlers = handlers;\n      state.regex = new RegExp(`${regex}$`, route.caseSensitive ? '' : 'i');\n      state.types = types;\n    }\n\n    currentState.handlers = handlers;\n    currentState.regex = new RegExp(`${regex}$`, route.caseSensitive ? '' : 'i');\n    currentState.types = types;\n\n    return currentState;\n  }\n\n  /**\n   * Retrieve a RouteGenerator for a route by name or RouteConfig (RouteHandler).\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @returns The RouteGenerator for that route.\n   */\n  public getRoute(nameOrRoute: string | RouteHandler): RouteGenerator {\n    return typeof(nameOrRoute) === 'string' ? this.names[nameOrRoute] : this.routes.get(nameOrRoute);\n  }\n\n  /**\n   * Retrieve the handlers registered for the route by name or RouteConfig (RouteHandler).\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @returns The handlers.\n   */\n  public handlersFor(nameOrRoute: string | RouteHandler): HandlerEntry[] {\n    const route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    return [...route.handlers];\n  }\n\n  /**\n   * Check if this RouteRecognizer recognizes a route by name or RouteConfig (RouteHandler).\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @returns True if the named route is recognized.\n   */\n  public hasRoute(nameOrRoute: string | RouteHandler): boolean {\n    return !!this.getRoute(nameOrRoute);\n  }\n\n  /**\n   * Generate a path and query string from a route name or RouteConfig (RouteHandler) and params object.\n   *\n   * @param nameOrRoute The name of the route or RouteConfig object.\n   * @param params The route params to use when populating the pattern.\n   *  Properties not required by the pattern will be appended to the query string.\n   * @returns The generated absolute path and query string.\n   */\n  public generate(nameOrRoute: string | RouteHandler, params?: object): string {\n    const route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    const handler = route.handlers[0].handler;\n    if (handler.generationUsesHref) {\n      return handler.href;\n    }\n\n    const routeParams = {...params};\n    const segments = route.segments;\n    const consumed = {};\n    let output = '';\n\n    for (let i = 0, l = segments.length; i < l; i++) {\n      const segment = segments[i];\n\n      if (segment instanceof EpsilonSegment) {\n        continue;\n      }\n\n      const segmentValue = segment.generate(routeParams, consumed);\n      if (segmentValue === null || segmentValue === undefined) {\n        if (!segment.optional) {\n          throw new Error(`A value is required for route parameter '${segment.name}' in route '${nameOrRoute}'.`);\n        }\n      } else {\n        output += '/';\n        output += segmentValue;\n      }\n    }\n\n    if (output.charAt(0) !== '/') {\n      output = `/${output}`;\n    }\n\n    // remove params used in the path and add the rest to the querystring\n    for (const param in consumed) {\n      Reflect.deleteProperty(routeParams, param);\n    }\n\n    const queryString = buildQueryString(routeParams);\n    output += queryString ? `?${queryString}` : '';\n\n    return output;\n  }\n\n  /**\n   * Match a path string against registered route patterns.\n   *\n   * @param path The path to attempt to match.\n   * @returns Array of objects containing `handler`, `params`, and\n   *  `isDynamic` values for the matched route(s), or undefined if no match\n   *  was found.\n   */\n  public recognize(path: string): RecognizeResults {\n    let states = [this.rootState];\n    let queryParams: IQueryParams = {};\n    let isSlashDropped = false;\n    let normalizedPath = path;\n\n    const queryStart = normalizedPath.indexOf('?');\n    if (queryStart !== -1) {\n      const queryString = normalizedPath.slice(queryStart + 1);\n      normalizedPath = normalizedPath.slice(0, queryStart);\n      queryParams = parseQueryString(queryString);\n    }\n\n    normalizedPath = decodeURI(normalizedPath);\n\n    if (normalizedPath.charAt(0) !== '/') {\n      normalizedPath = `/${normalizedPath}`;\n    }\n\n    let pathLen = normalizedPath.length;\n    if (pathLen > 1 && normalizedPath.charAt(pathLen - 1) === '/') {\n      normalizedPath = normalizedPath.slice(0, -1);\n      isSlashDropped = true;\n      --pathLen;\n    }\n\n    for (let i = 0; i < pathLen; ++i) {\n      const nextStates: State[] = [];\n      const ch = normalizedPath.charAt(i);\n\n      states.forEach(state => {\n        state.nextStates.forEach(nextState => {\n          if (nextState.charSpec.validChars !== null) {\n            if (nextState.charSpec.validChars.indexOf(ch) !== -1) {\n              nextStates.push(nextState);\n            }\n          } else if (nextState.charSpec.invalidChars !== null\n            && nextState.charSpec.invalidChars.indexOf(ch) === -1) {\n              nextStates.push(nextState);\n          }\n        });\n      });\n      states = nextStates;\n      if (states.length === 0) {\n        break;\n      }\n    }\n\n    const solutions: State[] = [];\n    for (let i = 0, l = states.length; i < l; i++) {\n      if (states[i].handlers) {\n        solutions.push(states[i]);\n      }\n    }\n\n    // This is a somewhat naive strategy, but should work in a lot of cases\n    // A better strategy would properly resolve /posts/:id/new and /posts/edit/:id.\n    //\n    // This strategy generally prefers more static and less dynamic matching.\n    // Specifically, it\n    //\n    //  * prefers fewer stars to more, then\n    //  * prefers using stars for less of the match to more, then\n    //  * prefers fewer dynamic segments to more, then\n    //  * prefers more static segments to more\n    solutions.sort((a, b) => {\n      if (a.types.stars !== b.types.stars) {\n        return a.types.stars - b.types.stars;\n      }\n      if (a.types.stars) {\n        if (a.types.statics !== b.types.statics) {\n          return b.types.statics - a.types.statics;\n        }\n        if (a.types.dynamics !== b.types.dynamics) {\n          return b.types.dynamics - a.types.dynamics;\n        }\n      }\n      if (a.types.dynamics !== b.types.dynamics) {\n        return a.types.dynamics - b.types.dynamics;\n      }\n      if (a.types.statics !== b.types.statics) {\n        return b.types.statics - a.types.statics;\n      }\n      return 0;\n    });\n\n    const solution = solutions[0];\n    if (solution && solution.handlers) {\n      // if a trailing slash was dropped and a star segment is the last segment\n      // specified, put the trailing slash back\n      if (isSlashDropped && solution.regex.source.slice(-5) === '(.+)$') {\n        normalizedPath = `${normalizedPath}/`;\n      }\n      const captures = normalizedPath.match(solution.regex);\n      let currentCapture = 1;\n      const result = [] as RecognizeResults;\n      result.queryParams = queryParams;\n\n      solution.handlers.forEach(handler => {\n        const params: Record<string, string> = {};\n        handler.names.forEach(name => {\n          params[name] = captures[currentCapture++];\n        });\n        result.push(new RecognizeResult(handler.handler, params, handler.names.length > 0));\n      });\n\n      return result;\n    }\n  }\n}\n","export interface IParsedQuery {\n  parameters: Record<Exclude<string, '-unnamed'>, string> | (Record<Exclude<string, '-unnamed'>, string> & Record<'-unnamed', string[]>);\n  list: string[];\n}\n\nexport interface IMergedParameters {\n  namedParameters: Record<string, string>;\n  parameterList: string[];\n  merged: string[] | Record<string, string>;\n}\n\nexport function parseQuery(query: string): IParsedQuery {\n  const parameters = {};\n  const list = [];\n  if (!query || !query.length) {\n    return { parameters: parameters, list: list };\n  }\n  const params = query.replace('+', ' ').split('&');\n  for (const param of params) {\n    const kv = param.split('=');\n    const key = decodeURIComponent(kv.shift());\n    if (!kv.length) {\n      list.push(key);\n      continue;\n    }\n    const value = decodeURIComponent(kv.shift());\n    parameters[key] = value;\n    // TODO: Deal with complex parameters such as lists and objects\n  }\n  return { parameters: parameters, list: list };\n}\n\nexport function mergeParameters(parameters: string, query: string, specifiedParameters: string[]): IMergedParameters {\n  const parsedQuery = parseQuery(query);\n  const parsedParameters = parseQuery(parameters);\n  const params = { ...parsedQuery.parameters, ...parsedParameters.parameters };\n  const list = [...parsedQuery.list, ...parsedParameters.list];\n\n  if (list.length && specifiedParameters && specifiedParameters.length) {\n    for (const param of specifiedParameters) {\n      // TODO: Support data types\n      params[param] = list.shift();\n    }\n  }\n\n  if (list.length && Object.keys(params).length) {\n    params['-unnamed'] = list.splice(0, list.length);\n  }\n  let merged: string[] | Record<string, string>;\n  if (list.length) {\n    merged = list;\n  } else {\n    merged = params;\n  }\n\n  return {\n    namedParameters: params,\n    parameterList: list,\n    merged: merged,\n  };\n}\n","import { IContainer } from '@aurelia/kernel';\nimport { CustomElementResource, ICustomElement, ICustomElementType, IDOM, INode, IProjectorLocator, IRenderContext, IRenderingEngine, LifecycleFlags } from '@aurelia/runtime';\nimport { INavigationInstruction } from './history-browser';\nimport { mergeParameters } from './parser';\nimport { Router } from './router';\nimport { Scope } from './scope';\nimport { IRouteableCustomElement, IViewportOptions } from './viewport';\n\nexport interface IRouteableCustomElementType extends ICustomElementType {\n  parameters?: string[];\n}\n\nexport interface IRouteableCustomElement extends ICustomElement {\n  canEnter?(nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): boolean|Promise<boolean>;\n  enter?(parameters?: string[] | Record<string, string>, nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): void|Promise<void>;\n  canLeave?(nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): boolean|Promise<boolean>;\n  leave?(nextInstruction?: INavigationInstruction, instruction?: INavigationInstruction): void|Promise<void>;\n}\n\nexport interface IViewportOptions {\n  scope?: boolean;\n  usedBy?: string | string[];\n  default?: string;\n  noLink?: boolean;\n  noHistory?: boolean;\n  forceDescription?: boolean;\n}\n\nexport class Viewport {\n  public name: string;\n  public element: Element;\n  public context: IRenderContext;\n  public owningScope: Scope;\n  public scope: Scope;\n  public options?: IViewportOptions;\n\n  public content: IRouteableCustomElementType;\n  public nextContent: IRouteableCustomElementType | string;\n  public parameters: string;\n  public nextParameters: string;\n\n  public instruction: INavigationInstruction;\n  public nextInstruction: INavigationInstruction;\n\n  public component: IRouteableCustomElement;\n  public nextComponent: IRouteableCustomElement;\n\n  private readonly router: Router;\n\n  private clear: boolean;\n  private elementResolve?: ((value?: void | PromiseLike<void>) => void) | null;\n\n  private previousViewportState?: Viewport;\n  private entered: boolean;\n\n  constructor(router: Router, name: string, element: Element, context: IRenderContext, owningScope: Scope, scope: Scope, options?: IViewportOptions) {\n    this.router = router;\n    this.name = name;\n    this.element = element;\n    this.context = context;\n    this.owningScope = owningScope;\n    this.scope = scope;\n    this.options = options;\n\n    this.clear = false;\n\n    this.content = null;\n    this.nextContent = null;\n    this.parameters = null;\n    this.nextParameters = null;\n    this.instruction = null;\n    this.nextInstruction = null;\n    this.component = null;\n    this.nextComponent = null;\n    this.elementResolve = null;\n    this.previousViewportState = null;\n    this.entered = false;\n  }\n\n  public setNextContent(content: ICustomElementType | string, instruction: INavigationInstruction): boolean {\n    let parameters;\n    this.clear = false;\n    if (typeof content === 'string') {\n      if (content === this.router.separators.clear) {\n        this.clear = true;\n        content = null;\n      } else {\n        const cp = content.split(this.router.separators.parameters);\n        content = cp.shift();\n        parameters = cp.length ? cp.join(this.router.separators.parameters) : null;\n        // If we've got a container, we're good to resolve type\n        if (this.context) {\n          content = this.componentType(content);\n        }\n      }\n    }\n\n    // Can be a (resolved) type or a string (to be resolved later)\n    this.nextContent = content;\n    this.nextInstruction = instruction;\n    this.nextParameters = parameters;\n    this.entered = false;\n\n    if ((typeof content === 'string' && this.componentName(this.content) !== content) ||\n      (typeof content !== 'string' && this.content !== content) ||\n      this.parameters !== parameters ||\n      !this.instruction || this.instruction.query !== instruction.query ||\n      instruction.isRefresh) {\n      return true;\n    }\n\n    return false;\n  }\n\n  public setElement(element: Element, context: IRenderContext, options: IViewportOptions): void {\n    // First added viewport with element is always scope viewport (except for root scope)\n    if (this.scope && this.scope.parent && !this.scope.viewport) {\n      this.scope.viewport = this;\n    }\n    if (this.scope && !this.scope.element) {\n      this.scope.element = element;\n    }\n    if (this.element !== element) {\n      // TODO: Restore this state on navigation cancel\n      this.previousViewportState = { ...this };\n      this.clearState();\n      this.element = element;\n      if (options && options.usedBy) {\n        this.options.usedBy = options.usedBy;\n      }\n      if (options && options.default) {\n        this.options.default = options.default;\n      }\n      if (options && options.noLink) {\n        this.options.noLink = options.noLink;\n      }\n      if (options && options.noHistory) {\n        this.options.noHistory = options.noHistory;\n      }\n      if (this.elementResolve) {\n        this.elementResolve();\n      }\n    }\n    if (this.context !== context) {\n      this.context = context;\n    }\n\n    if (!this.component && !this.nextComponent && this.options.default) {\n      this.router.addProcessingViewport(this, this.options.default);\n    }\n  }\n\n  // TODO: Will probably end up changing stuff due to the remove (hence the name)\n  public remove(element: Element, context: IRenderContext): boolean {\n    return this.element === element && this.context === context;\n  }\n\n  public async canLeave(): Promise<boolean> {\n    if (!this.component) {\n      return true;\n    }\n\n    const component: IRouteableCustomElement = this.component;\n    if (!component.canLeave) {\n      return true;\n    }\n    // tslint:disable-next-line:no-console\n    console.log('viewport canLeave', component.canLeave(this.instruction, this.nextInstruction));\n\n    const result = component.canLeave(this.instruction, this.nextInstruction);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n    return result;\n  }\n\n  public async canEnter(): Promise<boolean> {\n    if (this.clear) {\n      return true;\n    }\n\n    if (!this.nextContent) {\n      return false;\n    }\n\n    await this.loadComponent(this.nextContent);\n    if (!this.nextComponent) {\n      return false;\n    }\n\n    const component: IRouteableCustomElement = this.nextComponent;\n    if (!component.canEnter) {\n      return true;\n    }\n\n    const result = component.canEnter(this.nextInstruction, this.instruction);\n    // tslint:disable-next-line:no-console\n    console.log('viewport canEnter', result);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n    return result;\n  }\n\n  public async enter(): Promise<boolean> {\n    // tslint:disable-next-line:no-console\n    console.log('Viewport enter', this.name);\n\n    if (this.clear) {\n      return true;\n    }\n\n    if (!this.nextComponent) {\n      return false;\n    }\n\n    if (this.nextComponent.enter) {\n      const merged = mergeParameters(this.nextParameters, this.nextInstruction.query, (this.nextContent as IRouteableCustomElementType).parameters);\n      this.nextInstruction.parameters = merged.namedParameters;\n      this.nextInstruction.parameterList = merged.parameterList;\n      await this.nextComponent.enter(merged.merged, this.nextInstruction, this.instruction);\n      this.entered = false;\n    }\n    this.initializeComponent(this.nextComponent);\n    return true;\n  }\n\n  public async loadContent(): Promise<boolean> {\n    // tslint:disable-next-line:no-console\n    console.log('Viewport loadContent', this.name);\n\n    if (this.component) {\n      if (this.component.leave) {\n        await this.component.leave(this.instruction, this.nextInstruction);\n      }\n      // No need to wait for next component activation\n      if (!this.nextComponent) {\n        this.removeComponent(this.component);\n        this.terminateComponent(this.component);\n        this.unloadComponent(this.component);\n      }\n    }\n\n    if (this.nextComponent) {\n      // Only when next component activation is done\n      if (this.component) {\n        this.removeComponent(this.component);\n        this.terminateComponent(this.component);\n        this.unloadComponent(this.component);\n      }\n      this.addComponent(this.nextComponent);\n\n      this.content = this.nextContent as IRouteableCustomElementType;\n      this.parameters = this.nextParameters;\n      this.instruction = this.nextInstruction;\n      this.component = this.nextComponent;\n    }\n\n    if (this.clear) {\n      this.content = this.parameters = this.component = null;\n      this.instruction = this.nextInstruction;\n    }\n\n    this.nextContent = this.nextParameters = this.nextInstruction = this.nextComponent = null;\n\n    return true;\n  }\n\n  public finalizeContentChange(): void {\n    this.previousViewportState = null;\n  }\n  // TODO: Call this on cancel\n  public async restorePreviousContent(): Promise<void> {\n    if (this.entered) {\n      await this.nextComponent.leave();\n    }\n    if (this.previousViewportState) {\n      Object.assign(this, this.previousViewportState);\n    }\n  }\n\n  public description(full: boolean = false): string {\n    if (this.content) {\n      const component = this.componentName(this.content);\n      const newScope: string = this.scope ? this.router.separators.ownsScope : '';\n      const parameters = this.parameters ? this.router.separators.parameters + this.parameters : '';\n      if (full || newScope.length || this.options.forceDescription) {\n        return `${component}${this.router.separators.viewport}${this.name}${newScope}${parameters}`;\n      }\n      const viewports = {};\n      viewports[component] = component;\n      const found = this.owningScope.findViewports(viewports);\n      if (!found) {\n        return `${component}${this.router.separators.viewport}${this.name}${newScope}${parameters}`;\n      }\n      return `${component}${parameters}`;\n    }\n  }\n\n  public scopedDescription(full: boolean = false): string {\n    const descriptions = [this.owningScope.scopeContext(full), this.description(full)];\n    return descriptions.filter((value) => value && value.length).join(this.router.separators.scope);\n  }\n\n  // TODO: Deal with non-string components\n  public wantComponent(component: ICustomElementType | string): boolean {\n    let usedBy = this.options.usedBy || [];\n    if (typeof usedBy === 'string') {\n      usedBy = usedBy.split(',');\n    }\n    return usedBy.indexOf(component as string) >= 0;\n  }\n  // TODO: Deal with non-string components\n  public acceptComponent(component: ICustomElementType | string): boolean {\n    if (component === '-' || component === null) {\n      return true;\n    }\n    let usedBy = this.options.usedBy;\n    if (!usedBy || !usedBy.length) {\n      return true;\n    }\n    if (typeof usedBy === 'string') {\n      usedBy = usedBy.split(',');\n    }\n    if (usedBy.indexOf(component as string) >= 0) {\n      return true;\n    }\n    if (usedBy.filter((value) => value.indexOf('*') >= 0).length) {\n      return true;\n    }\n    return false;\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    if (this.component) {\n      this.component.$bind(flags);\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    if (this.component) {\n      this.component.$attach(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    if (this.component) {\n      this.component.$detach(flags);\n    }\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    if (this.component) {\n      this.component.$unbind(flags);\n    }\n  }\n\n  public componentName(component: IRouteableCustomElementType | string): string {\n    if (component === null) {\n      return null;\n    } else if (typeof component === 'string') {\n      return component;\n    } else {\n      return component.description.name;\n    }\n  }\n  public componentType(component: IRouteableCustomElementType | string): IRouteableCustomElementType {\n    if (component === null) {\n      return null;\n    } else if (typeof component !== 'string') {\n      return component;\n    } else {\n      const container = this.context || this.router.container;\n      const resolver = container.get(IContainer).getResolver(CustomElementResource.keyFrom(component));\n      if (resolver !== null) {\n        return resolver.getFactory(container.get(IContainer)).Type as IRouteableCustomElementType;\n      }\n      return null;\n    }\n  }\n  public componentInstance(component: IRouteableCustomElementType | string): IRouteableCustomElement {\n    if (component === null) {\n      return null;\n    }\n    // TODO: Remove once \"local registration is fixed\"\n    component = this.componentName(component);\n    const container = this.context || this.router.container;\n    if (typeof component !== 'string') {\n      return container.get(IContainer).get<IRouteableCustomElement>(component);\n    } else {\n      return container.get(IContainer).get<IRouteableCustomElement>(CustomElementResource.keyFrom(component));\n    }\n  }\n\n  private clearState(): void {\n    this.options = {};\n\n    this.content = null;\n    this.parameters = null;\n    this.instruction = null;\n    this.component = null;\n  }\n\n  private async loadComponent(component: ICustomElementType | string): Promise<void> {\n    await this.waitForElement();\n\n    this.nextComponent = this.componentInstance(component);\n\n    const host: INode = this.element as INode;\n    const container = this.context || this.router.container;\n\n    // TODO: get proxyStrategy settings from the template definition\n    this.nextComponent.$hydrate(LifecycleFlags.none, container, host);\n  }\n  private unloadComponent(component: ICustomElement): void {\n    // TODO: We might want to do something here eventually, who knows?\n  }\n\n  private initializeComponent(component: ICustomElement): void {\n    component.$bind(LifecycleFlags.fromStartTask | LifecycleFlags.fromBind, null);\n  }\n  private terminateComponent(component: ICustomElement): void {\n    component.$unbind(LifecycleFlags.fromStopTask | LifecycleFlags.fromUnbind);\n  }\n\n  private addComponent(component: ICustomElement): void {\n    component.$attach(LifecycleFlags.fromStartTask);\n  }\n\n  private removeComponent(component: ICustomElement): void {\n    component.$detach(LifecycleFlags.fromStopTask);\n  }\n\n  private async waitForElement(): Promise<void> {\n    if (this.element) {\n      return Promise.resolve();\n    }\n    // tslint:disable-next-line:promise-must-complete\n    return new Promise((resolve) => {\n      this.elementResolve = resolve;\n    });\n  }\n}\n","import { IContainer } from '@aurelia/kernel';\nimport { CustomElementResource, ICustomElementType, IRenderContext } from '@aurelia/runtime';\nimport { Router } from './router';\nimport { IFindViewportsResult } from './scope';\nimport { IViewportOptions, Viewport } from './viewport';\n\nexport interface IViewportCustomElementType extends ICustomElementType {\n  viewport?: string;\n}\n\nexport interface IComponentViewport {\n  component: ICustomElementType | string;\n  viewport: Viewport;\n}\n\nexport interface IFindViewportsResult {\n  componentViewports?: IComponentViewport[];\n  viewportsRemaining?: boolean;\n}\n\nexport type ChildContainer = IContainer & { parent?: ChildContainer };\n\nexport class Scope {\n  public element: Element;\n  public context: IRenderContext;\n  public parent: Scope;\n\n  public viewport: Viewport;\n\n  public children: Scope[];\n  public viewports: Record<string, Viewport>;\n\n  private readonly router: Router;\n\n  private scopeViewportParts: Record<string, string[][]>;\n  private availableViewports: Record<string, Viewport>;\n\n  constructor(router: Router, element: Element, context: IRenderContext, parent: Scope) {\n    this.router = router;\n    this.element = element;\n    this.context = context;\n    this.parent = parent;\n\n    this.viewport = null;\n    this.children = [];\n    this.viewports = {};\n    this.scopeViewportParts = {};\n    this.availableViewports = null;\n\n    if (this.parent) {\n      this.parent.addChild(this);\n    }\n  }\n\n  // TODO: Reduce complexity (currently at 45)\n  public findViewports(viewports?: Record<string, string | Viewport>): IFindViewportsResult {\n    const componentViewports: IComponentViewport[] = [];\n    let viewportsRemaining: boolean = false;\n\n    // Get a shallow copy of all available viewports (clean if it's the first find)\n    if (viewports) {\n      this.availableViewports = {};\n      this.scopeViewportParts = {};\n    }\n    this.availableViewports = { ...this.viewports, ...this.availableViewports };\n\n    // Get the parts for this scope (pointing to the rest)\n    for (const viewport in viewports) {\n      const parts = viewport.split(this.router.separators.scope);\n      const vp = parts.shift();\n      if (!this.scopeViewportParts[vp]) {\n        this.scopeViewportParts[vp] = [];\n      }\n      this.scopeViewportParts[vp].push(parts);\n    }\n\n    // Configured viewport is ruling\n    for (const viewportPart in this.scopeViewportParts) {\n      const parameters = viewportPart.split(this.router.separators.parameters);\n      const componentViewportPart = parameters.shift();\n      const component = componentViewportPart.split(this.router.separators.viewport).shift();\n      const componentParameters = component + (parameters.length ? this.router.separators.parameters + parameters.join(this.router.separators.parameters) : '');\n      for (const name in this.availableViewports) {\n        const viewport: Viewport = this.availableViewports[name];\n        // TODO: Also check if (resolved) component wants a specific viewport\n        if (viewport && viewport.wantComponent(component)) {\n          const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, componentParameters, viewport);\n          componentViewports.push(...found.componentViewports);\n          viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n          this.availableViewports[name] = null;\n          Reflect.deleteProperty(this.scopeViewportParts, viewportPart);\n          break;\n        }\n      }\n    }\n\n    // Next in line is specified viewport\n    for (const viewportPart in this.scopeViewportParts) {\n      const parameters = viewportPart.split(this.router.separators.parameters);\n      const componentViewportPart = parameters.shift();\n      const parts = componentViewportPart.split(this.router.separators.viewport);\n      const component = parts.shift();\n      const componentParameters = component + (parameters.length ? this.router.separators.parameters + parameters.join(this.router.separators.parameters) : '');\n      let name = parts.shift();\n      if (!name || !name.length || name.startsWith('?')) {\n        continue;\n      }\n      let newScope = false;\n      if (name.endsWith(this.router.separators.ownsScope)) {\n        newScope = true;\n        name = name.substring(0, name.length - 1);\n      }\n      if (!this.viewports[name]) {\n        this.addViewport(name, null, null, { scope: newScope, forceDescription: true });\n        this.availableViewports[name] = this.viewports[name];\n      }\n      const viewport = this.availableViewports[name];\n      if (viewport && viewport.acceptComponent(component)) {\n        const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, componentParameters, viewport);\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n        this.availableViewports[name] = null;\n        Reflect.deleteProperty(this.scopeViewportParts, viewportPart);\n      }\n    }\n\n    // Finally, only one accepting viewport left?\n    for (const viewportPart in this.scopeViewportParts) {\n      const parameters = viewportPart.split(this.router.separators.parameters);\n      const componentViewportPart = parameters.shift();\n      const component = componentViewportPart.split(this.router.separators.viewport).shift();\n      const componentParameters = component + (parameters.length ? this.router.separators.parameters + parameters.join(this.router.separators.parameters) : '');\n      const remainingViewports: Viewport[] = [];\n      for (const name in this.availableViewports) {\n        const viewport: Viewport = this.availableViewports[name];\n        if (viewport && viewport.acceptComponent(component)) {\n          remainingViewports.push(viewport);\n        }\n      }\n      if (remainingViewports.length === 1) {\n        const viewport = remainingViewports.shift();\n        const found = this.foundViewport(viewports, this.scopeViewportParts, viewportPart, componentParameters, viewport);\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n        this.availableViewports[viewport.name] = null;\n        Reflect.deleteProperty(this.scopeViewportParts, viewportPart);\n        break;\n      }\n    }\n\n    viewportsRemaining = viewportsRemaining || Object.keys(this.scopeViewportParts).length > 0;\n\n    // If it's a repeat there might be remaining viewports in scope children\n    if (!viewports) {\n      for (const child of this.children) {\n        const found = child.findViewports();\n        componentViewports.push(...found.componentViewports);\n        viewportsRemaining = viewportsRemaining || found.viewportsRemaining;\n      }\n    }\n\n    return {\n      componentViewports: componentViewports,\n      viewportsRemaining: viewportsRemaining,\n    };\n  }\n\n  public foundViewport(viewports: Record<string, string | Viewport>, scopeViewportParts: Record<string, string[][]>, viewportPart: string, component: ICustomElementType | string, viewport: Viewport): IFindViewportsResult {\n    const componentViewports: IComponentViewport[] = [{ component: component, viewport: viewport }];\n    let viewportsRemaining: boolean = false;\n\n    if (scopeViewportParts[viewportPart].length) {\n      const scope = viewport.scope || viewport.owningScope;\n      for (const remainingParts of scopeViewportParts[viewportPart]) {\n        if (remainingParts.length) {\n          const remaining = remainingParts.join(this.router.separators.scope);\n          const vps: Record<string, string | Viewport> = {};\n          vps[remaining] = viewports[viewportPart + this.router.separators.scope + remaining];\n          const scoped = scope.findViewports(vps);\n          componentViewports.push(...scoped.componentViewports);\n          viewportsRemaining = viewportsRemaining || scoped.viewportsRemaining;\n        }\n      }\n    }\n    return {\n      componentViewports: componentViewports,\n      viewportsRemaining: viewportsRemaining,\n    };\n  }\n\n  public addViewport(name: string, element: Element, context: IRenderContext, options?: IViewportOptions): Viewport {\n    let viewport = this.viewports[name];\n    if (!viewport) {\n      let scope: Scope;\n      if (options.scope) {\n        scope = new Scope(this.router, element, context, this);\n        this.router.scopes.push(scope);\n      }\n\n      viewport = this.viewports[name] = new Viewport(this.router, name, element, context, this, scope, options);\n    }\n    // TODO: Either explain why || instead of && here (might only need one) or change it to && if that should turn out to not be relevant\n    if (element || context) {\n      viewport.setElement(element, context, options);\n    }\n    return viewport;\n  }\n  public removeViewport(viewport: Viewport, element: Element, context: IRenderContext): number {\n    if ((!element && !context) || viewport.remove(element, context)) {\n      if (viewport.scope) {\n        this.router.removeScope(viewport.scope);\n      }\n      Reflect.deleteProperty(this.viewports, viewport.name);\n    }\n    return Object.keys(this.viewports).length;\n  }\n\n  public removeScope(): void {\n    for (const child of this.children) {\n      child.removeScope();\n    }\n    for (const viewport in this.viewports) {\n      this.router.removeViewport(this.viewports[viewport], null, null);\n    }\n  }\n\n  public renderViewport(viewport: Viewport): Promise<boolean> {\n    return viewport.canEnter().then(() => viewport.loadContent());\n  }\n\n  public addChild(child: Scope): void {\n    if (this.children.indexOf(child) < 0) {\n      this.children.push(child);\n    }\n  }\n  public removeChild(child: Scope): void {\n    this.children.splice(this.children.indexOf(child), 1);\n  }\n\n  public viewportStates(full: boolean = false, active: boolean = false): string[] {\n    const states: string[] = [];\n    for (const vp in this.viewports) {\n      const viewport: Viewport = this.viewports[vp];\n      if ((viewport.options.noHistory || (viewport.options.noLink && !full)) && !active) {\n        continue;\n      }\n      states.push(viewport.scopedDescription(full));\n    }\n    for (const scope of this.children) {\n      states.push(...scope.viewportStates(full));\n    }\n    return states.filter((value) => value && value.length);\n  }\n\n  public allViewports(): Viewport[] {\n    const viewports: Viewport[] = [];\n    for (const viewport in this.viewports) {\n      viewports.push(this.viewports[viewport]);\n    }\n    for (const scope of this.children) {\n      viewports.push(...scope.allViewports());\n    }\n    return viewports;\n  }\n\n  public scopeContext(full: boolean = false): string {\n    if (!this.element || !this.parent) {\n      return '';\n    }\n    const parents: string[] = [];\n    if (this.viewport) {\n      parents.unshift(this.viewport.description(full));\n    }\n    let viewport: Viewport = this.parent.closestViewport((this.context.get(IContainer) as ChildContainer).parent);\n    while (viewport && viewport.owningScope === this.parent) {\n      parents.unshift(viewport.description(full));\n      viewport = this.closestViewport((viewport.context.get(IContainer) as ChildContainer).parent);\n    }\n    parents.unshift(this.parent.scopeContext(full));\n\n    return parents.filter((value) => value && value.length).join(this.router.separators.scope);\n  }\n\n  private closestViewport(container: ChildContainer): Viewport {\n    const viewports = Object.values(this.viewports);\n    while (container) {\n      const viewport = viewports.find((item) => item.context.get(IContainer) === container);\n      if (viewport) {\n        return viewport;\n      }\n      container = container.parent;\n    }\n    return null;\n  }\n}\n","import { CustomElementHost } from '@aurelia/runtime';\n\nexport function closestCustomElement(element: CustomElementHost<Element>): CustomElementHost {\n  while (element) {\n    if ((element).$customElement) {\n      break;\n    }\n    element = element.parentElement;\n  }\n  return element;\n}\n","import { IContainer, InterfaceSymbol } from '@aurelia/kernel';\nimport { Aurelia, ICustomElementType, IRenderContext } from '@aurelia/runtime';\nimport { HistoryBrowser, IHistoryOptions, INavigationInstruction } from './history-browser';\nimport { AnchorEventInfo, LinkHandler } from './link-handler';\nimport { INavRoute, Nav } from './nav';\nimport { IParsedQuery, parseQuery } from './parser';\nimport { ChildContainer, IComponentViewport, Scope } from './scope';\nimport { closestCustomElement } from './utils';\nimport { IViewportOptions, Viewport } from './viewport';\n\nexport interface IRouterOptions extends IHistoryOptions {\n  separators?: IRouteSeparators;\n  reportCallback?(instruction: INavigationInstruction): void;\n  transformFromUrl?(path: string, router: Router): string;\n  transformToUrl?(states: IComponentViewportParameters[], router: Router): string;\n}\n\nexport interface IComponentViewportParameters {\n  component: ICustomElementType | string;\n  viewport?: Viewport | string;\n  parameters?: Record<string, unknown>;\n}\n\nexport interface IRoute {\n  name?: string;\n  path: string;\n  redirect?: string;\n  title?: string;\n  viewports?: Record<string, string>;\n  meta?: Record<string, string>;\n}\n\nexport interface IRouteViewport {\n  name: string;\n  component: ICustomElementType | string;\n}\n\nexport interface IRouteSeparators {\n  viewport: string;\n  sibling: string;\n  scope: string;\n  ownsScope: string;\n  parameters: string;\n  add: string;\n  clear: string;\n  action: string;\n}\n\nexport class Router {\n  public static readonly inject: ReadonlyArray<InterfaceSymbol> = [IContainer];\n\n  public viewports: Record<string, Viewport> = {};\n\n  public rootScope: Scope;\n  public scopes: Scope[] = [];\n\n  public separators: IRouteSeparators;\n\n  public historyBrowser: HistoryBrowser;\n  public linkHandler: LinkHandler;\n\n  public navs: Record<string, Nav> = {};\n  public activeComponents: string[] = [];\n\n  public addedViewports: IComponentViewport[] = [];\n\n  private options: IRouterOptions;\n  private isActive: boolean = false;\n  private isRedirecting: boolean = false;\n\n  private readonly pendingNavigations: INavigationInstruction[] = [];\n  private processingNavigation: INavigationInstruction = null;\n\n  constructor(public container: IContainer) {\n    this.historyBrowser = new HistoryBrowser();\n    this.linkHandler = new LinkHandler();\n  }\n\n  public activate(options?: IRouterOptions): Promise<void> {\n    if (this.isActive) {\n      throw new Error('Router has already been activated.');\n    }\n\n    this.isActive = true;\n    this.options = {\n      ...{\n        callback: (navigationInstruction) => {\n          this.historyCallback(navigationInstruction);\n        }\n      }, ...options\n    };\n\n    this.separators = {\n      ... {\n        viewport: '@', // ':',\n        sibling: '+', // '/',\n        scope: '/', // '+',\n        ownsScope: '!',\n        parameters: '=',\n        add: '+',\n        clear: '-',\n        action: '.',\n      }, ...this.options.separators\n    };\n\n    this.linkHandler.activate({ callback: this.linkCallback });\n    return this.historyBrowser.activate(this.options).catch(error => { throw error; });\n  }\n\n  public deactivate(): void {\n    if (!this.isActive) {\n      throw new Error('Router has not been activated.');\n    }\n    this.linkHandler.deactivate();\n    this.historyBrowser.deactivate();\n    return;\n  }\n\n  public linkCallback = (info: AnchorEventInfo): void => {\n    let href = info.href;\n    if (href.startsWith('#')) {\n      href = href.substring(1);\n    }\n    if (!href.startsWith('/')) {\n      const scope = this.closestScope(info.anchor);\n      const context = scope.scopeContext();\n      if (context) {\n        href = `/${context}${this.separators.scope}${href}`;\n      }\n    }\n    this.historyBrowser.setHash(href);\n  }\n\n  public historyCallback(instruction: INavigationInstruction): void {\n    this.pendingNavigations.push(instruction);\n    this.processNavigations().catch(error => { throw error; });\n  }\n\n  // TODO: Reduce complexity (currently at 46)\n  public async processNavigations(): Promise<void> {\n    if (this.processingNavigation !== null || !this.pendingNavigations.length) {\n      return Promise.resolve();\n    }\n\n    const instruction: INavigationInstruction = this.pendingNavigations.shift();\n    this.processingNavigation = instruction;\n\n    if (this.options.reportCallback) {\n      this.options.reportCallback(instruction);\n    }\n\n    if (instruction.isCancel) {\n      this.processingNavigation = null;\n      return Promise.resolve();\n    }\n\n    let clearViewports: boolean = false;\n    let fullStateInstruction: boolean = false;\n    if ((instruction.isBack || instruction.isForward) && instruction.fullStatePath) {\n      instruction.path = instruction.fullStatePath;\n      fullStateInstruction = true;\n      // tslint:disable-next-line:no-commented-code\n      // if (!confirm('Perform history navigation?')) {\n      //   this.historyBrowser.cancel();\n      //   this.processingNavigation = null;\n      //   return Promise.resolve();\n      // }\n    }\n\n    let path = instruction.path;\n    if (this.options.transformFromUrl && !fullStateInstruction) {\n      path = this.options.transformFromUrl(path, this);\n      if (Array.isArray(path)) {\n        path = this.statesToString(path);\n      }\n    }\n\n    if (path === this.separators.clear || path.startsWith(this.separators.clear + this.separators.add)) {\n      clearViewports = true;\n      if (path.startsWith(this.separators.clear)) {\n        path = path.substring(1);\n      }\n    }\n\n    const parsedQuery: IParsedQuery = parseQuery(instruction.query);\n    instruction.parameters = parsedQuery.parameters;\n    instruction.parameterList = parsedQuery.list;\n\n    // TODO: Fetch title (probably when done)\n    const title = null;\n    const views: Record<string, string> = this.findViews(path);\n\n    if (!views && !Object.keys(views).length && !clearViewports) {\n      this.processingNavigation = null;\n      return Promise.resolve();\n    }\n\n    if (title) {\n      this.historyBrowser.setEntryTitle(title);\n    }\n\n    this.ensureRootScope();\n    const usedViewports = (clearViewports ? this.rootScope.allViewports().filter((value) => value.component !== null) : []);\n    const defaultViewports = this.rootScope.allViewports().filter((value) => value.options.default && value.component === null);\n\n    const updatedViewports: Viewport[] = [];\n\n    // TODO: Take care of cancellations down in subsets/iterations\n    let { componentViewports, viewportsRemaining } = this.rootScope.findViewports(views);\n    let guard = 100;\n    while (componentViewports.length || viewportsRemaining || defaultViewports.length) {\n      // Guard against endless loop\n      if (!guard--) {\n        throw new Error('Failed to resolve all viewports');\n      }\n      const changedViewports: Viewport[] = [];\n      for (const componentViewport of componentViewports) {\n        const { component, viewport } = componentViewport;\n        if (viewport.setNextContent(component, instruction)) {\n          changedViewports.push(viewport);\n        }\n        const usedIndex = usedViewports.findIndex((value) => value === viewport);\n        if (usedIndex >= 0) {\n          usedViewports.splice(usedIndex, 1);\n        }\n        const defaultIndex = defaultViewports.findIndex((value) => value === viewport);\n        if (defaultIndex >= 0) {\n          defaultViewports.splice(defaultIndex, 1);\n        }\n      }\n      for (const viewport of usedViewports) {\n        if (viewport.setNextContent(this.separators.clear, instruction)) {\n          changedViewports.push(viewport);\n        }\n      }\n      // TODO: Support/review viewports not found in first iteration\n      let vp: Viewport;\n      while (vp = defaultViewports.shift()) {\n        if (vp.setNextContent(vp.options.default, instruction)) {\n          changedViewports.push(vp);\n        }\n      }\n\n      // We've gone via a redirected route back to same viewport status so\n      // we need to remove the added history entry for the redirect\n      // TODO: Take care of empty subsets/iterations where previous has length\n      if (!changedViewports.length && this.isRedirecting) {\n        this.historyBrowser.cancel();\n        this.isRedirecting = false;\n      }\n\n      let results = await Promise.all(changedViewports.map((value) => value.canLeave()));\n      if (results.findIndex((value) => value === false) >= 0) {\n        this.historyBrowser.cancel();\n        this.processingNavigation = null;\n        return Promise.resolve();\n      }\n      results = await Promise.all(changedViewports.map(async (value) => {\n        const canEnter = await value.canEnter();\n        if (typeof canEnter === 'boolean') {\n          if (canEnter) {\n            return value.enter();\n          } else {\n            return false;\n          }\n        }\n        // TODO: Deal with redirects\n        return true;\n      }));\n      if (results.some(result => result === false)) {\n        this.historyBrowser.cancel();\n        this.processingNavigation = null;\n        return Promise.resolve();\n      }\n      await Promise.all(changedViewports.map((value) => value.loadContent()));\n      // TODO: Remove this once multi level recursiveness has been fixed\n      // results = await Promise.all(changedViewports.map((value) => value.loadContent()));\n      // if (results.findIndex((value) => value === false) >= 0) {\n      //   this.historyBrowser.cancel();\n      //   return Promise.resolve();\n      // }\n\n      updatedViewports.push(...changedViewports);\n\n      // TODO: Fix multi level recursiveness!\n      const remaining = this.rootScope.findViewports();\n      componentViewports = [];\n      let addedViewport: IComponentViewport;\n      while (addedViewport = this.addedViewports.shift()) {\n        if (!remaining.componentViewports.find((value) => value.viewport === addedViewport.viewport)) {\n          componentViewports.push(addedViewport);\n        }\n      }\n      componentViewports = [...componentViewports, ...remaining.componentViewports];\n      viewportsRemaining = remaining.viewportsRemaining;\n    }\n\n    this.replacePaths(instruction);\n\n    // Remove history entry if no history viewports updated\n    if (!instruction.isFirst && updatedViewports.every(viewport => viewport.options.noHistory)) {\n      this.historyBrowser.pop().catch(error => { throw error; });\n    }\n\n    updatedViewports.forEach((viewport) => {\n      viewport.finalizeContentChange();\n    });\n    this.processingNavigation = null;\n\n    if (this.pendingNavigations.length) {\n      this.processNavigations().catch(error => { throw error; });\n    }\n  }\n\n  public addProcessingViewport(viewport: Viewport, component: string): void {\n    if (this.processingNavigation) {\n      this.addedViewports.push({ viewport: viewport, component: component });\n    }\n  }\n\n  // public view(views: string | Record<string, Viewport>, title?: string, data?: Record<string, unknown>): Promise<void> {\n  //   console.log('Router.view:', views, title, data);\n\n  // tslint:disable-next-line:no-commented-code\n  //   if (title) {\n  //     this.historyBrowser.setEntryTitle(title);\n  //   }\n\n  // tslint:disable-next-line:no-commented-code\n  //   const viewports: Viewport[] = [];\n  //   for (const v in views) {\n  //     const component: ICustomElementType = views[v];\n  //     const viewport = this.findViewport(`${v}:${component}`);\n  //     if (viewport.setNextContent(component, { path: '' })) {\n  //       viewports.push(viewport);\n  //     }\n  //   }\n\n  // tslint:disable-next-line:no-commented-code\n  //   // We've gone via a redirected route back to same viewport status so\n  //   // we need to remove the added history entry for the redirect\n  //   if (!viewports.length && this.isRedirecting) {\n  //     this.historyBrowser.cancel();\n  //     this.isRedirecting = false;\n  //   }\n\n  // tslint:disable-next-line:no-commented-code\n  //   let cancel: boolean = false;\n  //   return Promise.all(viewports.map((value) => value.canLeave()))\n  //     .then((promises: boolean[]) => {\n  //       if (cancel || promises.findIndex((value) => value === false) >= 0) {\n  //         cancel = true;\n  //         return Promise.resolve([]);\n  //       } else {\n  //         return Promise.all(viewports.map((value) => value.canEnter()));\n  //       }\n  //     }).then((promises: boolean[]) => {\n  //       if (cancel || promises.findIndex((value) => value === false) >= 0) {\n  //         cancel = true;\n  //         return Promise.resolve([]);\n  //       } else {\n  //         return Promise.all(viewports.map((value) => value.loadContent()));\n  //       }\n  //     }).then(() => {\n  //       if (cancel) {\n  //         this.historyBrowser.cancel();\n  //       }\n  //     }).then(() => {\n  //       const viewports = Object.values(this.viewports).map((value) => value.description()).filter((value) => value && value.length);\n  //       this.historyBrowser.history.replaceState({}, null, '#/' + viewports.join('/'));\n  //     });\n  // }\n\n  public findViews(path: string): Record<string, string> {\n    const views: Record<string, string> = {};\n    // TODO: Let this govern start of scope\n    if (path.startsWith('/')) {\n      path = path.substring(1);\n    }\n    const sections: string[] = path.split(this.separators.sibling);\n\n    // TODO: Remove this once multi level recursiveness is fixed\n    // Expand with instances for all containing views\n    // const expandedSections: string[] = [];\n    // while (sections.length) {\n    //   const part = sections.shift();\n    //   const parts = part.split(this.separators.scope);\n    //   for (let i = 1; i <= parts.length; i++) {\n    //     expandedSections.push(parts.slice(0, i).join(this.separators.scope));\n    //   }\n    // }\n    // sections = expandedSections;\n\n    let index = 0;\n    while (sections.length) {\n      const view = sections.shift();\n      const scopes = view.split(this.separators.scope);\n      const leaf = scopes.pop();\n      const parts = leaf.split(this.separators.viewport);\n      // Noooooo?\n      const component = parts[0];\n      scopes.push(parts.length ? parts.join(this.separators.viewport) : `?${index++}`);\n      const name = scopes.join(this.separators.scope);\n      if (component) {\n        views[name] = component;\n      }\n    }\n    return views;\n  }\n\n  // public findViewport(name: string): Viewport {\n  //   return this.rootScope.findViewport(name);\n  // }\n\n  public findScope(element: Element): Scope {\n    this.ensureRootScope();\n    return this.closestScope(element);\n  }\n\n  // Called from the viewport custom element in attached()\n  public addViewport(name: string, element: Element, context: IRenderContext, options?: IViewportOptions): Viewport {\n    // tslint:disable-next-line:no-console\n    console.log('Viewport added', name, element);\n    const parentScope = this.findScope(element);\n    return parentScope.addViewport(name, element, context, options);\n  }\n  // Called from the viewport custom element\n  public removeViewport(viewport: Viewport, element: Element, context: IRenderContext): void {\n    // TODO: There's something hinky with remove!\n    const scope = viewport.owningScope;\n    if (!scope.removeViewport(viewport, element, context)) {\n      this.removeScope(scope);\n    }\n  }\n\n  public removeScope(scope: Scope): void {\n    if (scope !== this.rootScope) {\n      scope.removeScope();\n      const index = this.scopes.indexOf(scope);\n      if (index >= 0) {\n        this.scopes.splice(index, 1);\n      }\n    }\n  }\n\n  public goto(pathOrViewports: string | Record<string, Viewport>, title?: string, data?: Record<string, unknown>): void {\n    if (typeof pathOrViewports === 'string') {\n      this.historyBrowser.goto(pathOrViewports, title, data);\n    }\n    // else {\n    //   this.view(pathOrViewports, title, data);\n    // }\n  }\n\n  public replace(pathOrViewports: string | Record<string, Viewport>, title?: string, data?: Record<string, unknown>): void {\n    if (typeof pathOrViewports === 'string') {\n      this.historyBrowser.replace(pathOrViewports, title, data);\n    }\n  }\n\n  public refresh(): void {\n    this.historyBrowser.refresh();\n  }\n\n  public back(): void {\n    this.historyBrowser.back();\n  }\n\n  public forward(): void {\n    this.historyBrowser.forward();\n  }\n\n  public statesToString(states: IComponentViewportParameters[]): string {\n    const stringStates: string[] = [];\n    for (const state of states) {\n      // TODO: Support non-string components\n      let stateString: string = state.component as string;\n      if (state.viewport) {\n        stateString += this.separators.viewport + state.viewport;\n      }\n      if (state.parameters) {\n        // TODO: Support more than one parameter\n        for (const key in state.parameters) {\n          stateString += this.separators.parameters + state.parameters[key];\n        }\n      }\n      stringStates.push(stateString);\n    }\n    return stringStates.join(this.separators.sibling);\n  }\n  public statesFromString(statesString: string): IComponentViewportParameters[] {\n    const states = [];\n    const stateStrings = statesString.split(this.separators.sibling);\n    for (const stateString of stateStrings) {\n      let component, viewport, parameters;\n      const [componentPart, rest] = stateString.split(this.separators.viewport);\n      if (rest === undefined) {\n        [component, parameters] = componentPart.split(this.separators.parameters);\n      } else {\n        component = componentPart;\n        [viewport, parameters] = rest.split(this.separators.parameters);\n      }\n      // TODO: Support more than one parameter\n      const state: IComponentViewportParameters = { component: component };\n      if (viewport) {\n        state.viewport = viewport;\n      }\n      if (parameters) {\n        state.parameters = { id: parameters };\n      }\n      states.push(state);\n    }\n    return states;\n  }\n\n  public setNav(name: string, routes: INavRoute[]): void {\n    const nav = this.findNav(name);\n    if (nav) {\n      nav.routes = [];\n    }\n    this.addNav(name, routes);\n  }\n  public addNav(name: string, routes: INavRoute[]): void {\n    let nav = this.navs[name];\n    if (!nav) {\n      nav = this.navs[name] = new Nav(this, name);\n    }\n    nav.addRoutes(routes);\n  }\n  public findNav(name: string): Nav {\n    return this.navs[name];\n  }\n\n  private ensureRootScope(): void {\n    if (!this.rootScope) {\n      const root = this.container.get(Aurelia).root();\n      this.rootScope = new Scope(this, root.$host as Element, root.$context, null);\n      this.scopes.push(this.rootScope);\n    }\n  }\n\n  private closestScope(element: Element): Scope {\n    const el = closestCustomElement(element);\n    let container: ChildContainer = el.$customElement.$context.get(IContainer);\n    while (container) {\n      const scope = this.scopes.find((item) => item.context.get(IContainer) === container);\n      if (scope) {\n        return scope;\n      }\n      container = container.parent;\n    }\n  }\n\n  private removeStateDuplicates(states: string[]): string[] {\n    let sorted: string[] = states.slice().sort((a, b) => b.split(this.separators.scope).length - a.split(this.separators.scope).length);\n    sorted = sorted.map((value) => `${this.separators.scope}${value}${this.separators.scope}`);\n\n    let unique: string[] = [];\n    if (sorted.length) {\n      unique.push(sorted.shift());\n      while (sorted.length) {\n        const state = sorted.shift();\n        if (unique.find((value) => {\n          return value.indexOf(state) === -1;\n        })) {\n          unique.push(state);\n        }\n      }\n    }\n    unique = unique.map((value) => value.substring(1, value.length - 1));\n    unique.sort((a, b) => a.split(this.separators.scope).length - b.split(this.separators.scope).length);\n\n    return unique;\n  }\n\n  private replacePaths(instruction: INavigationInstruction): void {\n    this.activeComponents = this.rootScope.viewportStates(true, true);\n    this.activeComponents = this.removeStateDuplicates(this.activeComponents);\n\n    let viewportStates = this.rootScope.viewportStates();\n    viewportStates = this.removeStateDuplicates(viewportStates);\n    let state = viewportStates.join(this.separators.sibling);\n    if (this.options.transformToUrl) {\n      state = this.options.transformToUrl(this.statesFromString(state), this);\n    }\n\n    let fullViewportStates = this.rootScope.viewportStates(true);\n    fullViewportStates = this.removeStateDuplicates(fullViewportStates);\n    fullViewportStates.unshift(this.separators.clear);\n    const query = (instruction.query && instruction.query.length ? `?${instruction.query}` : '');\n    this.historyBrowser.replacePath(\n      state + query,\n      fullViewportStates.join(this.separators.sibling) + query,\n      instruction);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Constructable, IContainer, InterfaceSymbol, Writable } from '@aurelia/kernel';\nimport { bindable, createRenderContext, CustomElementResource, ICustomElement, IDOM, IElementTemplateProvider, INode, IRenderContext, IRenderingEngine, ITemplate, LifecycleFlags, TemplateDefinition } from '@aurelia/runtime';\nimport { Router } from '../router';\nimport { IViewportOptions, Viewport } from '../viewport';\n\nexport interface ViewportCustomElement extends ICustomElement<Element> { }\nexport class ViewportCustomElement {\n  public static readonly inject: ReadonlyArray<InterfaceSymbol|Constructable> = [Router, INode, IRenderingEngine];\n\n  @bindable public name: string;\n  @bindable public scope: boolean;\n  @bindable public usedBy: string;\n  @bindable public default: string;\n  @bindable public noLink: boolean;\n  @bindable public noHistory: boolean;\n\n  public viewport: Viewport;\n\n  private readonly router: Router;\n  private readonly element: Element;\n  private readonly renderingEngine: IRenderingEngine;\n\n  constructor(router: Router, element: Element, renderingEngine: IRenderingEngine) {\n    this.router = router;\n    this.element = element;\n    this.renderingEngine = renderingEngine;\n\n    this.name = 'default';\n    this.scope = null;\n    this.usedBy = null;\n    this.default = null;\n    this.noLink = null;\n    this.noHistory = null;\n    this.viewport = null;\n  }\n\n  public render(flags: LifecycleFlags, host: INode, parts: Record<string, TemplateDefinition>, parentContext: IRenderContext | null): IElementTemplateProvider | void {\n    const Type = this.constructor as any;\n    const dom = parentContext.get(IDOM);\n    const template = this.renderingEngine.getElementTemplate(dom, Type.description, parentContext, Type);\n    (template as Writable<ITemplate>).renderContext = createRenderContext(dom, parentContext, Type.description.dependencies, Type);\n    template.render(this, host, parts);\n  }\n\n  // public created(...rest): void {\n  //   console.log('Created', rest);\n  //   const booleanAttributes = {\n  //     'scope': 'scope',\n  //     'no-link': 'noLink',\n  //     'no-history': 'noHistory',\n  //   };\n  //   const valueAttributes = {\n  //     'used-by': 'usedBy',\n  //     'default': 'default',\n  //   };\n  //   const name = this.element.hasAttribute('name') ? this.element.getAttribute('name') : 'default';\n  //   const options: IViewportOptions = {};\n  //   for (const attribute in booleanAttributes) {\n  //     if (this.element.hasAttribute[attribute]) {\n  //       options[booleanAttributes[attribute]] = true;\n  //     }\n  //   }\n  //   for (const attribute in valueAttributes) {\n  //     if (this.element.hasAttribute(attribute)) {\n  //       const value = this.element.getAttribute(attribute);\n  //       if (value && value.length) {\n  //         options[valueAttributes[attribute]] = value;\n  //       }\n  //     }\n  //   }\n  //   this.viewport = this.router.addViewport(name, this.element, (this as any).$context.get(IContainer), options);\n  // }\n\n  public bound(): void {\n    const options: IViewportOptions = { scope: this.element.hasAttribute('scope') };\n    if (this.usedBy && this.usedBy.length) {\n      options.usedBy = this.usedBy;\n    }\n    if (this.default && this.default.length) {\n      options.default = this.default;\n    }\n    if (this.element.hasAttribute('no-link')) {\n      options.noLink = true;\n    }\n    if (this.element.hasAttribute('no-history')) {\n      options.noHistory = true;\n    }\n    this.viewport = this.router.addViewport(this.name, this.element, this.$context, options);\n  }\n  public unbound(): void {\n    this.router.removeViewport(this.viewport, this.element, this.$context);\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.binding(flags);\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.attaching(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.detaching(flags);\n    }\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    if (this.viewport) {\n      this.viewport.unbinding(flags);\n    }\n  }\n}\n// tslint:disable-next-line:no-invalid-template-strings\nCustomElementResource.define({ name: 'au-viewport', template: '<template><div class=\"viewport-header\"> Viewport: <b>${name}</b> </div></template>' }, ViewportCustomElement);\n","// NOTE: this file is currently not in use\n\nimport { inject } from '@aurelia/kernel';\nimport { bindable, customElement } from '@aurelia/runtime';\nimport { NavRoute } from '../nav-route';\nimport { Router } from '../router';\n\n@inject(Router, Element)\n@customElement({\n  name: 'au-nav', template:\n    `<template>\n  <nav if.bind=\"name\" class=\"\\${name}\">\n    <au-nav routes.bind=\"navRoutes\" containerless></au-nav>\n  </nav>\n  <ul if.bind=\"routes\" class=\"nav-level-\\${level}\">\n    <li repeat.for=\"route of routes\" class=\"\\${route.active} \\${route.hasChildren}\">\n      <a if.bind=\"route.link && route.link.length\" href=\"\\${route.link}\">\\${route.title}</a>\n      <a if.bind=\"!route.link || !route.link.length\" click.delegate=\"route.toggleActive()\" href=\"\">\\${route.title}</a>\n      <au-nav if.bind=\"route.children\" routes.bind=\"route.children\" level.bind=\"level + 1\" containerless></au-nav>\n    </li>\n  </ul>\n</template>` })\nexport class NavCustomElement {\n  @bindable public name: string;\n  @bindable public routes: NavRoute[];\n  @bindable public level: number;\n\n  private readonly router: Router;\n\n  constructor(router: Router) {\n    this.router = router;\n\n    this.name = null;\n    this.routes = null;\n    this.level = 0;\n  }\n\n  get navRoutes(): NavRoute[] {\n    const nav = this.router.findNav(this.name);\n    return (nav ? nav.routes : []);\n  }\n\n  public active(route: NavRoute): string {\n    return 'Active';\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}