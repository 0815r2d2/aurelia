{"version":3,"file":"index.es6.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/observation.ts","../src/lifecycle.ts","../src/binding/binding-behavior.ts","../src/dom.ts","../src/binding/subscriber-collection.ts","../src/binding/target-observer.ts","../src/binding/target-accessors.ts","../src/binding/resources/attr-binding-behavior.ts","../src/binding/binding-mode.ts","../src/binding/resources/binding-mode-behaviors.ts","../src/binding/property-observer.ts","../src/binding/property-observation.ts","../src/binding/binding-context.ts","../src/binding/signaler.ts","../src/binding/value-converter.ts","../src/binding/ast.ts","../src/binding/connectable.ts","../src/binding/binding.ts","../src/binding/resources/debounce-binding-behavior.ts","../src/binding/resources/sanitize.ts","../src/binding/event-manager.ts","../src/binding/resources/self-binding-behavior.ts","../src/binding/resources/signals.ts","../src/binding/resources/throttle-binding-behavior.ts","../src/binding/collection-observer.ts","../src/binding/array-observer.ts","../src/binding/computed-observer.ts","../src/binding/dirty-checker.ts","../src/binding/element-observation.ts","../src/binding/map-observer.ts","../src/binding/set-observer.ts","../src/binding/svg-analyzer.ts","../src/binding/observer-locator.ts","../src/binding/resources/update-trigger-binding-behavior.ts","../src/binding/call.ts","../src/binding/expression-parser.ts","../src/binding/interpolation-binding.ts","../src/binding/let-binding.ts","../src/binding/listener.ts","../src/binding/ref.ts","../src/definitions.ts","../src/templating/bindable.ts","../src/templating/create-element.ts","../src/templating/lifecycle-attach.ts","../src/templating/lifecycle-bind.ts","../src/templating/view.ts","../src/templating/lifecycle-render.ts","../src/templating/custom-element.ts","../src/templating/resources/compose.ts","../src/templating/custom-attribute.ts","../src/templating/resources/if.ts","../src/templating/resources/repeat.ts","../src/templating/resources/replaceable.ts","../src/templating/resources/with.ts","../src/aurelia.ts","../src/html-renderer.ts","../src/instructions.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { IDisposable, IIndexable } from '@aurelia/kernel';\nimport { ILifecycle } from './lifecycle';\n\nexport enum LifecycleFlags {\n  none                   = 0b0000_00000000000000_000_00,\n  mustEvaluate           = 0b0001_00000000000000_000_00,\n  mutation               = 0b0000_00000000000000_000_11,\n  isCollectionMutation   = 0b0000_00000000000000_000_01,\n  isInstanceMutation     = 0b0000_00000000000000_000_10,\n  update                 = 0b0000_00000000000000_111_00,\n  updateTargetObserver   = 0b0000_00000000000000_001_00,\n  updateTargetInstance   = 0b0000_00000000000000_010_00,\n  updateSourceExpression = 0b0000_00000000000000_100_00,\n  from                   = 0b0000_11111111111111_000_00,\n  fromFlush              = 0b0000_00000000000011_000_00,\n  fromAsyncFlush         = 0b0000_00000000000001_000_00,\n  fromSyncFlush          = 0b0000_00000000000010_000_00,\n  fromStartTask          = 0b0000_00000000000100_000_00,\n  fromStopTask           = 0b0000_00000000001000_000_00,\n  fromBind               = 0b0000_00000000010000_000_00,\n  fromUnbind             = 0b0000_00000000100000_000_00,\n  fromAttach             = 0b0000_00000001000000_000_00,\n  fromDetach             = 0b0000_00000010000000_000_00,\n  fromCache              = 0b0000_00000100000000_000_00,\n  fromCreate             = 0b0000_00001000000000_000_00,\n  fromDOMEvent           = 0b0000_00010000000000_000_00,\n  fromObserverSetter     = 0b0000_00100000000000_000_00,\n  fromBindableHandler    = 0b0000_01000000000000_000_00,\n  fromLifecycleTask      = 0b0000_10000000000000_000_00,\n  parentUnmountQueued    = 0b0010_00000000000000_000_00,\n  // this flag is for the synchronous flush before detach (no point in updating the\n  // DOM if it's about to be detached)\n  doNotUpdateDOM         = 0b0100_00000000000000_000_00,\n}\n\n/*@internal*/\nexport const enum SubscriberFlags {\n  None            = 0,\n  Subscriber0     = 0b0001,\n  Subscriber1     = 0b0010,\n  Subscriber2     = 0b0100,\n  SubscribersRest = 0b1000,\n  Any             = 0b1111,\n}\n\n/**\n * Describes a type that tracks changes and can flush those changes in some way\n */\nexport interface IChangeTracker {\n  $nextFlush?: IChangeTracker;\n  hasChanges?: boolean;\n  flush(flags: LifecycleFlags): void;\n}\n\n/**\n * Basic interface to normalize getting/setting a value of any property on any object\n */\nexport interface IAccessor<TValue = any> {\n  getValue(): TValue;\n  setValue(newValue: TValue, flags: LifecycleFlags): void;\n}\n\n/**\n * Describes a target observer for to-view bindings (in other words, an observer without the observation).\n */\nexport interface IBindingTargetAccessor<\n  TObj = any,\n  TProp = keyof TObj,\n  TValue = any>\n  extends IDisposable,\n          IAccessor<TValue>,\n          IPropertyChangeTracker<TObj, TProp> { }\n\n/**\n * Describes a target observer for from-view or two-way bindings.\n */\nexport interface IBindingTargetObserver<\n  TObj = any,\n  TProp = keyof TObj,\n  TValue = any>\n  extends IBindingTargetAccessor<TObj, TProp, TValue>,\n          ISubscribable<MutationKind.instance>,\n          ISubscriberCollection<MutationKind.instance> {\n\n  bind?(flags: LifecycleFlags): void;\n  unbind?(flags: LifecycleFlags): void;\n}\n\nexport type AccessorOrObserver = IBindingTargetAccessor | IBindingTargetObserver;\n\n/**\n * An array of indices, where the index of an element represents the index to map FROM, and the numeric value of the element itself represents the index to map TO\n *\n * The deletedItems property contains the items (in case of an array) or keys (in case of map or set) that have been deleted.\n */\nexport type IndexMap = number[] & {\n  deletedItems?: any[];\n};\n\n/**\n * Mostly just a marker enum to help with typings (specifically to reduce duplication)\n */\nexport enum MutationKind {\n  instance   = 0b01,\n  collection = 0b10\n}\n\n/**\n * Describes a type that specifically tracks changes in an object property, or simply something that can have a getter and/or setter\n */\nexport interface IPropertyChangeTracker<TObj extends Object, TProp = keyof TObj, TValue = any> {\n  obj: TObj;\n  propertyKey?: TProp;\n  currentValue?: TValue;\n}\n\n/**\n * Describes a type that specifically tracks changes in a collection (map, set or array)\n */\nexport interface ICollectionChangeTracker<T extends Collection> extends IChangeTracker {\n  collection: T;\n  indexMap: IndexMap;\n  resetIndexMap(): void;\n}\n\n/**\n * Represents a (subscriber) function that can be called by a PropertyChangeNotifier\n */\nexport type IPropertyChangeHandler<TValue = any> = (newValue: TValue, previousValue: TValue, flags: LifecycleFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations on a property\n */\nexport interface IPropertyChangeNotifier extends IPropertyChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the IPropertyChangeHandler interface\n */\nexport interface IPropertySubscriber<TValue = any> { handleChange(newValue: TValue, previousValue: TValue, flags: LifecycleFlags): void; }\n\n/**\n * Represents a (subscriber) function that can be called by a CollectionChangeNotifier\n */\nexport type ICollectionChangeHandler = (origin: string, args: IArguments | null, flags?: LifecycleFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations in a collection\n */\nexport interface ICollectionChangeNotifier extends ICollectionChangeHandler {}\n\n/**\n * Represents a (subscriber) function that can be called by a BatchedCollectionChangeNotifier\n */\nexport type IBatchedCollectionChangeHandler = (indexMap: number[]) => void;\n/**\n * Represents a (observer) function that can notify subscribers of batched mutations in a collection\n */\nexport interface IBatchedCollectionChangeNotifier extends IBatchedCollectionChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the ICollectionChangeHandler interface\n */\nexport interface ICollectionSubscriber { handleChange(origin: string, args: IArguments | null, flags: LifecycleFlags): void; }\n/**\n * Describes a (subscriber) type that has a function conforming to the IBatchedCollectionChangeNotifier interface\n */\nexport interface IBatchedCollectionSubscriber { handleBatchedChange(indexMap: number[]): void; }\n\n/**\n * Either a property or collection subscriber\n */\nexport type Subscriber = ICollectionSubscriber | IPropertySubscriber;\n/**\n * Either a batched property or batched collection subscriber\n */\nexport type BatchedSubscriber = IBatchedCollectionSubscriber;\n\n/**\n * Helper type that translates from mutationKind enum to the correct subscriber interface\n */\nexport type MutationKindToSubscriber<T> =\n  T extends MutationKind.instance ? IPropertySubscriber :\n  T extends MutationKind.collection ? ICollectionSubscriber :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct batched subscriber interface\n */\nexport type MutationKindToBatchedSubscriber<T> =\n  T extends MutationKind.collection ? IBatchedCollectionSubscriber :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct notifier interface\n */\nexport type MutationKindToNotifier<T> =\n  T extends MutationKind.instance ? IPropertyChangeNotifier :\n  T extends MutationKind.collection ? ICollectionChangeNotifier :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct batched notifier interface\n */\nexport type MutationKindToBatchedNotifier<T> =\n  T extends MutationKind.collection ? IBatchedCollectionChangeNotifier :\n  never;\n\nexport interface ISubscribable<T extends MutationKind> {\n  subscribe(subscriber: MutationKindToSubscriber<T>): void;\n  unsubscribe(subscriber: MutationKindToSubscriber<T>): void;\n}\n\n/**\n * A collection of property or collection subscribers\n */\nexport interface ISubscriberCollection<T extends MutationKind> extends ISubscribable<T> {\n  /*@internal*/_subscriberFlags?: SubscriberFlags;\n  /*@internal*/_subscriber0?: MutationKindToSubscriber<T>;\n  /*@internal*/_subscriber1?: MutationKindToSubscriber<T>;\n  /*@internal*/_subscriber2?: MutationKindToSubscriber<T>;\n  /*@internal*/_subscribersRest?: MutationKindToSubscriber<T>[];\n\n  callSubscribers: MutationKindToNotifier<T>;\n  hasSubscribers(): boolean;\n  hasSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n  removeSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n  addSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n}\n\n/**\n * A collection of batched property or collection subscribers\n */\nexport interface IBatchedSubscriberCollection<T extends MutationKind> extends IBatchedSubscribable<T> {\n  /*@internal*/_batchedSubscriberFlags?: SubscriberFlags;\n  /*@internal*/_batchedSubscriber0?: MutationKindToBatchedSubscriber<T>;\n  /*@internal*/_batchedSubscriber1?: MutationKindToBatchedSubscriber<T>;\n  /*@internal*/_batchedSubscriber2?: MutationKindToBatchedSubscriber<T>;\n  /*@internal*/_batchedSubscribersRest?: MutationKindToBatchedSubscriber<T>[];\n\n  /*@internal*/lifecycle?: ILifecycle;\n  callBatchedSubscribers: MutationKindToBatchedNotifier<T>;\n\n  /*@internal*/flush(flags: LifecycleFlags): void;\n  hasBatchedSubscribers(): boolean;\n  hasBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n  removeBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n  addBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n}\n\nexport interface IBatchedSubscribable<T extends MutationKind> {\n  subscribeBatched(subscriber: MutationKindToBatchedSubscriber<T>): void;\n  unsubscribeBatched(subscriber: MutationKindToBatchedSubscriber<T>): void;\n}\n\n/**\n * Describes a complete property observer with an accessor, change tracking fields, normal and batched subscribers\n */\nexport interface IPropertyObserver<TObj extends Object, TProp extends keyof TObj> extends\n  IDisposable,\n  IAccessor<TObj[TProp]>,\n  IPropertyChangeTracker<TObj, TProp>,\n  ISubscriberCollection<MutationKind.instance> {\n  /*@internal*/observing: boolean;\n}\n\n/**\n * An any-typed property observer\n */\nexport type PropertyObserver = IPropertyObserver<any, PropertyKey>;\n\n/**\n * A collection (array, set or map)\n */\nexport type Collection = any[] | Set<any> | Map<any, any>;\ninterface IObservedCollection {\n  $observer?: CollectionObserver;\n}\n\n/**\n * An array that is being observed for mutations\n */\nexport interface IObservedArray<T = any> extends IObservedCollection, Array<T> { }\n/**\n * A set that is being observed for mutations\n */\nexport interface IObservedSet<T = any> extends IObservedCollection, Set<T> { }\n/**\n * A map that is being observed for mutations\n */\nexport interface IObservedMap<K = any, V = any> extends IObservedCollection, Map<K, V> { }\n/**\n * A collection that is being observed for mutations\n */\nexport type ObservedCollection = IObservedArray | IObservedSet | IObservedMap;\n\nexport const enum CollectionKind {\n  indexed = 0b1000,\n  keyed   = 0b0100,\n  array   = 0b1001,\n  map     = 0b0110,\n  set     = 0b0111\n}\n\nexport type LengthPropertyName<T> =\n  T extends any[] ? 'length' :\n  T extends Set<any> ? 'size' :\n  T extends Map<any, any> ? 'size' :\n  never;\n\nexport type CollectionTypeToKind<T> =\n  T extends any[] ? CollectionKind.array | CollectionKind.indexed :\n  T extends Set<any> ? CollectionKind.set | CollectionKind.keyed :\n  T extends Map<any, any> ? CollectionKind.map | CollectionKind.keyed :\n  never;\n\nexport type CollectionKindToType<T> =\n  T extends CollectionKind.array ? any[] :\n  T extends CollectionKind.indexed ? any[] :\n  T extends CollectionKind.map ? Map<any, any> :\n  T extends CollectionKind.set ? Set<any> :\n  T extends CollectionKind.keyed ? Set<any> | Map<any, any> :\n  never;\n\nexport type ObservedCollectionKindToType<T> =\n  T extends CollectionKind.array ? IObservedArray :\n  T extends CollectionKind.indexed ? IObservedArray :\n  T extends CollectionKind.map ? IObservedMap :\n  T extends CollectionKind.set ? IObservedSet :\n  T extends CollectionKind.keyed ? IObservedSet | IObservedMap :\n  never;\n\n/**\n * An observer that tracks collection mutations and notifies subscribers (either directly or in batches)\n */\nexport interface ICollectionObserver<T extends CollectionKind> extends\n  IDisposable,\n  ICollectionChangeTracker<CollectionKindToType<T>>,\n  ISubscriberCollection<MutationKind.collection>,\n  IBatchedSubscriberCollection<MutationKind.collection> {\n    collection: ObservedCollectionKindToType<T>;\n    lengthPropertyName: LengthPropertyName<CollectionKindToType<T>>;\n    collectionKind: T;\n    lengthObserver: IBindingTargetObserver;\n    getLengthObserver(): IBindingTargetObserver;\n}\nexport type CollectionObserver = ICollectionObserver<CollectionKind>;\n\nexport interface IBindingContext {\n  [key: string]: unknown;\n\n  readonly $synthetic?: true;\n  readonly $observers?: ObserversLookup<IOverrideContext>;\n  getObservers?(): ObserversLookup<IOverrideContext>;\n}\n\nexport interface IOverrideContext {\n  [key: string]: unknown;\n\n  readonly $synthetic?: true;\n  readonly $observers?: ObserversLookup<IOverrideContext>;\n  readonly bindingContext: IBindingContext;\n  readonly parentOverrideContext: IOverrideContext | null;\n  getObservers(): ObserversLookup<IOverrideContext>;\n}\n\nexport interface IScope {\n  readonly bindingContext: IBindingContext;\n  readonly overrideContext: IOverrideContext;\n}\n\nexport interface IObserversLookup<TObj extends IIndexable = IIndexable, TKey extends keyof TObj =\nExclude<keyof TObj, '$synthetic' | '$observers' | 'bindingContext' | 'overrideContext' | 'parentOverrideContext'>> {\n\n}\n\nexport type ObserversLookup<TObj extends IIndexable = IIndexable, TKey extends keyof TObj =\n  Exclude<keyof TObj, '$synthetic' | '$observers' | 'bindingContext' | 'overrideContext' | 'parentOverrideContext'>> =\n  { [P in TKey]: PropertyObserver; } & { getOrCreate(obj: IBindingContext | IOverrideContext, key: string): PropertyObserver };\n\nexport type IObservable = IIndexable & {\n  readonly $synthetic?: false;\n  $observers?: Record<string, AccessorOrObserver>;\n};\n","import { DI, IContainer, IDisposable, Immutable, inject, InterfaceSymbol, IResolver, IServiceLocator, Omit, PLATFORM, Registration } from '@aurelia/kernel';\nimport { IConnectableBinding } from './binding/connectable';\nimport { ITargetedInstruction, TemplateDefinition, TemplatePartDefinitions } from './definitions';\nimport { IEncapsulationSource, INode, INodeSequence, IRenderLocation } from './dom';\nimport { IChangeTracker, IScope, LifecycleFlags } from './observation';\n\nexport const enum State {\n  none                  = 0b000000000000,\n  isBinding             = 0b000000000001,\n  isBound               = 0b000000000010,\n  isAttaching           = 0b000000000100,\n  isAttached            = 0b000000001000,\n  isMounted             = 0b000000010000,\n  isDetaching           = 0b000000100000,\n  isUnbinding           = 0b000001000000,\n  isCached              = 0b000010000000,\n  needsMount            = 0b000100000000\n}\n\nexport const enum Hooks {\n  none                   = 0b000000000001,\n  hasCreated             = 0b000000000010,\n  hasBinding             = 0b000000000100,\n  hasBound               = 0b000000001000,\n  hasAttaching           = 0b000000010000,\n  hasAttached            = 0b000000100000,\n  hasDetaching           = 0b000001000000,\n  hasDetached            = 0b000010000000,\n  hasUnbinding           = 0b000100000000,\n  hasUnbound             = 0b001000000000,\n  hasRender              = 0b010000000000,\n  hasCaching             = 0b100000000000\n}\n\nexport interface IHooks {\n  $hooks?: Hooks;\n}\n\nexport interface IState {\n  $state?: State;\n  $lifecycle?: ILifecycle;\n}\n\nexport interface IBindables {\n  /**\n   * The Bindings, Views, CustomElements, CustomAttributes and other bindable components that belong to this instance.\n   */\n  $bindableHead?: IBindScope;\n  $bindableTail?: IBindScope;\n}\n\nexport interface IAttachables {\n\n  /**\n   * The Views, CustomElements, CustomAttributes and other attachable components that belong to this instance.\n   */\n  $attachableHead?: IAttach;\n  $attachableTail?: IAttach;\n}\n\n/**\n * An object containing the necessary information to render something for display.\n */\nexport interface IRenderable extends IBindables, IAttachables, IState {\n\n  /**\n   * The (dependency) context of this instance.\n   *\n   * Contains any dependencies required by this instance or its children.\n   */\n  readonly $context: IRenderContext;\n\n  /**\n   * The nodes that represent the visible aspect of this instance.\n   *\n   * Typically this will be a sequence of `DOM` nodes contained in a `DocumentFragment`\n   */\n  readonly $nodes: INodeSequence;\n\n  /**\n   * The binding scope that the `$bindables` of this instance will be bound to.\n   *\n   * This includes the `BindingContext` which can be either a user-defined view model instance, or a synthetic view model instantiated by a `templateController`\n   */\n  readonly $scope: IScope;\n}\n\nexport const IRenderable = DI.createInterface<IRenderable>().noDefault();\n\nexport interface IRenderContext extends IServiceLocator {\n  createChild(): IRenderContext;\n  render(renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void;\n  beginComponentOperation(renderable: IRenderable, target: INode, instruction: Immutable<ITargetedInstruction>, factory?: IViewFactory, parts?: TemplatePartDefinitions, location?: IRenderLocation, locationIsContainer?: boolean): IDisposable;\n}\n\nexport interface IView extends IBindScope, IRenderable, IAttach, IMountable {\n  readonly cache: IViewCache;\n  readonly isFree: boolean;\n  readonly location: IRenderLocation;\n\n  hold(location: IRenderLocation, flags: LifecycleFlags): void;\n  release(flags: LifecycleFlags): boolean;\n\n  lockScope(scope: IScope): void;\n}\n\nexport interface IViewCache {\n  readonly isCaching: boolean;\n  setCacheSize(size: number | '*', doNotOverrideIfAlreadySet: boolean): void;\n  canReturnToCache(view: IView): boolean;\n  tryReturnToCache(view: IView): boolean;\n}\n\nexport interface IViewFactory extends IViewCache {\n  readonly name: string;\n  create(): IView;\n}\n\nexport const IViewFactory = DI.createInterface<IViewFactory>().noDefault();\n\nexport interface ILifecycleCreated extends IHooks, IState {\n  /**\n   * Called at the end of `$hydrate`.\n   *\n   * The following key properties are now assigned and initialized (see `IRenderable` for more detail):\n   * - `this.$bindables`\n   * - `this.$attachables`\n   * - `this.$scope` (null if this is a custom attribute, or contains the view model if this is a custom element)\n   * - `this.$nodes`\n   *\n   * @description\n   * This is the second and last \"hydrate\" lifecycle hook (after `render`). It happens only once per instance (contrary to bind/attach\n   * which can happen many times per instance), though it can happen many times per type (once for each instance)\n   *\n   * This hook is called right before the `$bind` lifecycle starts, making this the last opportunity\n   * for any high-level post processing on initialized properties.\n   */\n  created?(): void;\n}\n\nexport interface ILifecycleBinding extends IHooks, IState {\n  /**\n   * Called at the start of `$bind`, before this instance and its children (if any) are bound.\n   *\n   * - `this.$isBound` is false.\n   * - `this.$scope` is initialized.\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & LifecycleFlags.fromStartTask`: the Aurelia app is starting (this is the initial bind)\n   * - `flags & LifecycleFlags.fromBind`: this is a normal `$bind` lifecycle\n   * - `flags & LifecycleFlags.updateTargetInstance`: this `$bind` was triggered by some upstream observer and is not a real `$bind` lifecycle\n   * - `flags & LifecycleFlags.fromFlush` (only occurs in conjunction with updateTargetInstance): the update was queued to a `LinkedChangeList` which is now being flushed\n   *\n   * @description\n   * This is the first \"create\" lifecycle hook of the hooks that can occur multiple times per instance,\n   * and the third lifecycle hook (after `render` and `created`) of the very first this.lifecycle.\n   */\n  binding?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleBound extends IHooks, IState {\n  /*@internal*/$nextBound?: ILifecycleBound;\n\n  /**\n   * Called at the end of `$bind`, after this instance and its children (if any) are bound.\n   *\n   * - `$isBound` is true.\n   * - `this.$scope` is initialized.\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & LifecycleFlags.fromStartTask`: the Aurelia app is starting (this is the initial bind)\n   * - `flags & LifecycleFlags.fromBind`: this is a normal `$bind` lifecycle\n   * - `flags & LifecycleFlags.updateTargetInstance`: this `$bind` was triggered by some upstream observer and is not a real `$bind` lifecycle\n   * - `flags & LifecycleFlags.fromFlush` (only occurs in conjunction with updateTargetInstance): the update was queued to a `LinkedChangeList` which is now being flushed\n   *\n   * @description\n   * This is the second \"create\" lifecycle hook (after `binding`) of the hooks that can occur multiple times per instance,\n   * and the fourth lifecycle hook (after `render`, `created` and `binding`) of the very first this.lifecycle.\n   */\n  bound?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleUnbinding extends IHooks, IState {\n  /**\n   * Called at the start of `$unbind`, before this instance and its children (if any) are unbound.\n   *\n   * - `this.$isBound` is true.\n   * - `this.$scope` is still available.\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & LifecycleFlags.fromBind`: the component is just switching scope\n   * - `flags & LifecycleFlags.fromUnbind`: the component is really disposing\n   * - `flags & LifecycleFlags.fromStopTask`: the Aurelia app is stopping\n   *\n   * @description\n   * This is the fourth \"cleanup\" lifecycle hook (after `detaching`, `caching` and `detached`)\n   *\n   * Last opportunity to perform any source or target updates before the bindings are disconnected.\n   *\n   */\n  unbinding?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleUnbound extends IHooks, IState {\n  /*@internal*/$nextUnbound?: ILifecycleUnbound;\n\n  /**\n   * Called at the end of `$unbind`, after this instance and its children (if any) are unbound.\n   *\n   * - `this.$isBound` is false at this point.\n   *\n   * - `this.$scope` may not be available anymore (unless it's a `@customElement`)\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & LifecycleFlags.fromBind`: the component is just switching scope\n   * - `flags & LifecycleFlags.fromUnbind`: the component is really disposing\n   * - `flags & LifecycleFlags.fromStopTask`: the Aurelia app is stopping\n   *\n   * @description\n   * This is the fifth (and last) \"cleanup\" lifecycle hook (after `detaching`, `caching`, `detached`\n   * and `unbinding`).\n   *\n   * The lifecycle either ends here, or starts at `$bind` again.\n   */\n  unbound?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleAttaching extends IHooks, IState {\n  /**\n   * Called at the start of `$attach`, before this instance and its children (if any) are attached.\n   *\n   * `$isAttached` is false.\n   *\n   * @param encapsulationSource Ask Rob.\n   * @param lifecycle Utility that encapsulates the attach sequence for a hierarchy of attachables and guarantees the correct attach order.\n   *\n   * @description\n   * This is the third \"create\" lifecycle hook (after `binding` and `bound`) of the hooks that can occur multiple times per instance,\n   * and the fifth lifecycle hook (after `render`, `created`, `binding` and `bound`) of the very first lifecycle\n   *\n   * This is the time to add any (sync or async) tasks (e.g. animations) to the lifecycle that need to happen before\n   * the nodes are added to the DOM.\n   */\n  attaching?(flags: LifecycleFlags, encapsulationSource?: IEncapsulationSource): void;\n}\n\nexport interface ILifecycleAttached extends IHooks, IState {\n  /*@internal*/$nextAttached?: ILifecycleAttached;\n\n  /**\n   * Called at the end of `$attach`, after this instance and its children (if any) are attached.\n   *\n   * - `$isAttached` is true.\n   *\n   * @description\n   * This is the fourth (and last) \"create\" lifecycle hook (after `binding`, `bound` and `attaching`) of the hooks that can occur\n   * multiple times per instance, and the sixth lifecycle hook (after `render`, `created`, `binding`, `bound` and `attaching`)\n   * of the very first lifecycle\n   *\n   * This instance and its children (if any) can be assumed\n   * to be fully initialized, bound, rendered, added to the DOM and ready for use.\n   */\n  attached?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleDetaching extends IHooks, IState {\n  /**\n   * Called at the start of `$detach`, before this instance and its children (if any) are detached.\n   *\n   * - `$isAttached` is true.\n   *\n   * @param lifecycle Utility that encapsulates the detach sequence for a hierarchy of attachables and guarantees the correct detach order.\n   *\n   * @description\n   * This is the first \"cleanup\" lifecycle hook.\n   *\n   * This is the time to add any (sync or async) tasks (e.g. animations) to the lifecycle that need to happen before\n   * the nodes are removed from the DOM.\n   */\n  detaching?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleDetached extends IHooks, IState {\n  /*@internal*/$nextDetached?: ILifecycleDetached;\n\n  /**\n   * Called at the end of `$detach`, after this instance and its children (if any) are detached.\n   *\n   * - `$isAttached` is false.\n   *\n   * @description\n   * This is the third \"cleanup\" lifecycle hook (after `detaching` and `caching`).\n   *\n   * The `$nodes` are now removed from the DOM and the `View` (if possible) is returned to cache.\n   *\n   * If no `$unbind` lifecycle is queued, this is the last opportunity to make state changes before the lifecycle ends.\n   */\n  detached?(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleCaching extends IHooks, IState {\n  /**\n   * Called during `$unmount` (which happens during `$detach`), specifically after the\n   * `$nodes` are removed from the DOM, but before the view is actually added to the cache.\n   *\n   * @description\n   * This is the second \"cleanup\" lifecycle hook.\n   *\n   * This lifecycle is invoked if and only if the `ViewFactory` that created the `View` allows the view to be cached.\n   *\n   * Usually this hook is not invoked unless you explicitly set the cache size to to something greater than zero\n   * on the resource description.\n   */\n  caching?(flags: LifecycleFlags): void;\n}\n\n/**\n * Defines optional lifecycle hooks that will be called only when they are implemented.\n */\nexport interface ILifecycleHooks extends\n  ILifecycleCreated,\n  ILifecycleBinding,\n  ILifecycleBound,\n  ILifecycleUnbinding,\n  ILifecycleUnbound,\n  ILifecycleAttaching,\n  ILifecycleAttached,\n  ILifecycleDetaching,\n  ILifecycleDetached,\n  ILifecycleCaching { }\n\nexport interface ILifecycleCache {\n  $cache(flags: LifecycleFlags): void;\n}\n\nexport interface ICachable extends ILifecycleCache { }\n\nexport interface ILifecycleAttach {\n  $attach(flags: LifecycleFlags, encapsulationSource?: IEncapsulationSource): void;\n}\n\nexport interface ILifecycleDetach {\n  $detach(flags: LifecycleFlags): void;\n}\n\nexport interface IAttach extends ILifecycleAttach, ILifecycleDetach, ICachable {\n  /*@internal*/$nextAttach: IAttach;\n  /*@internal*/$prevAttach: IAttach;\n}\n\nexport interface ILifecycleMount {\n  /*@internal*/$nextMount?: ILifecycleMount;\n\n  /**\n   * Add the `$nodes` of this instance to the Host or RenderLocation that this instance is holding.\n   */\n  $mount(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleUnmount {\n  /*@internal*/$nextUnmount?: ILifecycleUnmount;\n\n  /**\n   * Remove the `$nodes` of this instance from the Host or RenderLocation that this instance is holding, optionally returning them to a cache.\n   * @returns\n   * - `true` if the instance has been returned to the cache.\n   * - `false` if the cache (typically ViewFactory) did not allow the instance to be cached.\n   * - `undefined` (void) if the instance does not support caching. Functionally equivalent to `false`\n   */\n  $unmount(flags: LifecycleFlags): boolean | void;\n}\nexport interface IMountable extends ILifecycleMount, ILifecycleUnmount { }\n\nexport interface ILifecycleUnbind {\n  $state?: State;\n  $unbind(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleUnbindAfterDetach extends ILifecycleUnbind {\n  $nextUnbindAfterDetach?: ILifecycleUnbindAfterDetach;\n}\n\nexport interface ILifecycleBind {\n  $state?: State;\n  $bind(flags: LifecycleFlags, scope?: IScope): void;\n}\n\nexport interface ILifecycleBindSelf {\n  $state?: State;\n  $bind(flags: LifecycleFlags): void;\n}\n\nexport interface ILifecycleBindScope {\n  $state?: State;\n  $bind(flags: LifecycleFlags, scope: IScope): void;\n}\n\nexport interface IBind extends ILifecycleBind, ILifecycleUnbind {\n  /*@internal*/$nextBind: IBindSelf | IBindScope;\n  /*@internal*/$prevBind: IBindSelf | IBindScope;\n}\n\nexport interface IBindScope extends Omit<IBind, '$bind'>, ILifecycleBindScope { }\n\nexport interface IBindSelf extends Omit<IBind, '$bind'>, ILifecycleBindSelf { }\n\nconst marker = Object.freeze(Object.create(null));\n\n/*\n * Note: the lifecycle object ensures that certain callbacks are executed in a particular order that may\n * deviate from the order in which the component tree is walked.\n * The component tree is always walked in a top-down recursive fashion, for example:\n * {\n *   path: \"1\",\n *   children: [\n *     { path: \"1.1\", children: [\n *       { path: \"1.1.1\" },\n *       { path: \"1.1.2\" }\n *     ]},\n *     { path: \"1.2\", children: [\n *       { path: \"1.2.1\" },\n *       { path: \"1.2.2\" }\n *     ]}\n *   ]\n * }\n * The call chain would be: 1 -> 1.1 -> 1.1.1 -> 1.1.2 -> 1.2 -> 1.2.1 -> 1.2.2\n *\n * During mounting, for example, we want to mount the root component *last* (so that the DOM doesn't need to be updated\n * for each mount operation), and we want to invoke the detached callbacks in the same order that the components were mounted.\n * But all mounts need to happen before any of the detach callbacks are invoked, so we store the components in a LinkedList\n * whose execution is deferred until all the normal $attach/$detach calls have occurred.\n * In the example of attach, the call chains would look like this:\n * $attach: 1 -> 1.1 -> 1.1.1 -> 1.1.2 -> 1.2 -> 1.2.1 -> 1.2.2\n * $mount: 1.1.1 -> 1.1.2 -> 1.1 -> 1.2.1 -> 1.2.2 -> 1.2 -> 1\n * attached: 1.1.1 -> 1.1.2 -> 1.1 -> 1.2.1 -> 1.2.2 -> 1.2 -> 1\n *\n * Instead of (without the lifecycles):\n * $attach: 1, $mount: 1, detached: 1 -> $attach: 1.1, $mount: 1.1, detached: 1.1 -> etc..\n *\n * Furthermore, the lifecycle object tracks the call depth so that it will automatically run a list of operations\n * when the top-most component finishes execution, and components themselves don't need to worry about where in the\n * tree they reside.\n */\n\nexport interface IFlushLifecycle {\n  processFlushQueue(flags: LifecycleFlags): void;\n\n  /**\n   * Queue a flush() callback to be executed either on the next promise tick or on the next\n   * bind lifecycle (if during startTask) or on the next attach lifecycle.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   *\n   * This queue is primarily used by DOM target observers and collection observers.\n   */\n  enqueueFlush(requestor: IChangeTracker): Promise<void>;\n}\n\nexport interface IBindLifecycle extends IFlushLifecycle {\n  /**\n   * Open up / expand a bind batch for enqueueing `bound` callbacks.\n   *\n   * When the top-most caller calls `endBind`, the `bound` callbacks will be invoked.\n   *\n   * Each `beginBind` *must* be matched by an `endBind`.\n   */\n  beginBind(): void;\n\n  /**\n   * Add a `bound` callback to the queue, to be invoked when the current bind batch\n   * is ended via `endBind` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueBound(requestor: ILifecycleBound): void;\n\n  /**\n   * Add a `connect` callback to the queue, to be invoked *after* mounting and *before*\n   * `detached` callbacks.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueConnect(requestor: IConnectableBinding): void;\n\n  /**\n   * Close / shrink a bind batch for invoking queued `bound` callbacks.\n   * @param flags The flags that will be passed into the `bound` callbacks.\n   *\n   * Flags during bind are primarily for optimization purposes, and to control whether\n   * changes are batched or propagated synchronously.\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`)\n   * This default will work, but is generally less efficient.\n   */\n  endBind(flags: LifecycleFlags): ILifecycleTask;\n\n  /**\n   * Open up / expand an unbind batch for enqueueing `unbound` callbacks.\n   *\n   * When the top-most caller calls `endUnbind`, the `unbound` callbacks will be invoked.\n   *\n   * Each `beginUnbind` *must* be matched by an `endUnbind`.\n   */\n  beginUnbind(): void;\n\n  /**\n   * Add an `unbound` callback to the queue, to be invoked when the current unbind batch\n   * is ended via `endUnbind` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueUnbound(requestor: ILifecycleUnbound): void;\n\n  /**\n   * Close / shrink an unbind batch for invoking queued `unbound` callbacks.\n   * @param flags The flags that will be passed into the `unbound` callbacks.\n   *\n   * Flags during unbind are primarily for optimization purposes, and to control whether\n   * changes are batched or propagated synchronously.\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`)\n   * This default will work, but is generally less efficient.\n   */\n  endUnbind(flags: LifecycleFlags): ILifecycleTask;\n}\n\nexport interface IAttachLifecycle extends IFlushLifecycle {\n  /**\n   * Open up / expand an attach batch for enqueueing `$mount` and `attached` callbacks.\n   *\n   * When the top-most caller calls `endAttach`, the `$mount` and `attached` callbacks\n   * will be invoked (in that order).\n   *\n   * Each `beginAttach` *must* be matched by an `endAttach`.\n   */\n  beginAttach(): void;\n\n  /**\n   * Add a `$mount` callback to the queue, to be invoked when the current attach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueMount(requestor: ILifecycleMount): void;\n\n  /**\n   * Add an `attached` callback to the queue, to be invoked when the current attach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueAttached(requestor: ILifecycleAttached): void;\n\n  /**\n   * Close / shrink an attach batch for invoking queued `$mount` and `attached` callbacks.\n   * @param flags The flags that will be passed into the `$mount` and `attached` callbacks.\n   *\n   * Flags during attach are primarily for optimization purposes.\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`)\n   * This default will work, but is generally less efficient.\n   */\n  endAttach(flags: LifecycleFlags): ILifecycleTask;\n\n  /**\n   * Open up / expand a detach batch for enqueueing `$unmount` and `detached` callbacks.\n   *\n   * When the top-most caller calls `endAttach`, the `$unmount` and `detached` callbacks\n   * will be invoked (in that order).\n   *\n   * Each `beginAttach` *must* be matched by an `endAttach`.\n   */\n  beginDetach(): void;\n\n  /**\n   * Add a `$unmount` callback to the queue, to be invoked when the current detach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueUnmount(requestor: ILifecycleUnmount): void;\n\n  /**\n   * Add a `detached` callback to the queue, to be invoked when the current detach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueDetached(requestor: ILifecycleDetached): void;\n\n  /**\n   * Add an `$unbind` callback to the queue, to be invoked when the current detach batch\n   * is ended via `endAttach` by the top-most caller. The callback is invoked after all the\n   * `$unmount` and `detached` callbacks are processed.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueUnbindAfterDetach(requestor: ILifecycleUnbind): void;\n\n  /**\n   * Close / shrink a detach batch for invoking queued `$unmount` and `detached` callbacks.\n   * @param flags The flags that will be passed into the `$unmount` and `detached` callbacks.\n   *\n   * Flags during detach are primarily for optimization purposes, and to control whether a\n   * component should be unmounted or not (the default is to only unmount root nodes).\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`).\n   * This default will work, but is generally less efficient.\n   */\n  endDetach(flags: LifecycleFlags): ILifecycleTask;\n}\n\nexport interface ILifecycle extends IBindLifecycle, IAttachLifecycle {\n  registerTask(task: ILifecycleTask): void;\n  finishTask(task: ILifecycleTask): void;\n}\n\nexport const ILifecycle = DI.createInterface<ILifecycle>().withDefault(x => x.singleton(Lifecycle));\nexport const IFlushLifecycle = ILifecycle as InterfaceSymbol<IFlushLifecycle>;\nexport const IBindLifecycle = ILifecycle as InterfaceSymbol<IBindLifecycle>;\nexport const IAttachLifecycle = ILifecycle as InterfaceSymbol<IAttachLifecycle>;\n\n/*@internal*/\nexport class Lifecycle implements ILifecycle {\n  /*@internal*/public bindDepth: number = 0;\n  /*@internal*/public attachDepth: number = 0;\n  /*@internal*/public detachDepth: number = 0;\n  /*@internal*/public unbindDepth: number = 0;\n\n  /*@internal*/public flushHead: IChangeTracker = this;\n  /*@internal*/public flushTail: IChangeTracker = this;\n\n  /*@internal*/public connectHead: IConnectableBinding = <IConnectableBinding><unknown>this; // this cast is safe because we know exactly which properties we'll use\n  /*@internal*/public connectTail: IConnectableBinding = <IConnectableBinding><unknown>this;\n\n  /*@internal*/public patchHead: IConnectableBinding = <IConnectableBinding><unknown>this;\n  /*@internal*/public patchTail: IConnectableBinding = <IConnectableBinding><unknown>this;\n\n  /*@internal*/public boundHead: ILifecycleBound = this;\n  /*@internal*/public boundTail: ILifecycleBound = this;\n\n  /*@internal*/public mountHead: ILifecycleMount = this;\n  /*@internal*/public mountTail: ILifecycleMount = this;\n\n  /*@internal*/public attachedHead: ILifecycleAttached = this;\n  /*@internal*/public attachedTail: ILifecycleAttached = this;\n\n  /*@internal*/public unmountHead: ILifecycleUnmount = this;\n  /*@internal*/public unmountTail: ILifecycleUnmount = this;\n\n  /*@internal*/public detachedHead: ILifecycleDetached = this; //LOL\n  /*@internal*/public detachedTail: ILifecycleDetached = this;\n\n  /*@internal*/public unbindAfterDetachHead: ILifecycleUnbindAfterDetach = this;\n  /*@internal*/public unbindAfterDetachTail: ILifecycleUnbindAfterDetach = this;\n\n  /*@internal*/public unboundHead: ILifecycleUnbound = this;\n  /*@internal*/public unboundTail: ILifecycleUnbound = this;\n\n  /*@internal*/public flushed: Promise<void> = null;\n  /*@internal*/public promise: Promise<void> = Promise.resolve();\n\n  /*@internal*/public flushCount: number = 0;\n  /*@internal*/public connectCount: number = 0;\n  /*@internal*/public patchCount: number = 0;\n  /*@internal*/public boundCount: number = 0;\n  /*@internal*/public mountCount: number = 0;\n  /*@internal*/public attachedCount: number = 0;\n  /*@internal*/public unmountCount: number = 0;\n  /*@internal*/public detachedCount: number = 0;\n  /*@internal*/public unbindAfterDetachCount: number = 0;\n  /*@internal*/public unboundCount: number = 0;\n\n  // These are dummy properties to make the lifecycle conform to the interfaces\n  // of the components it manages. This allows the lifecycle itself to be the first link\n  // in the chain and removes the need for an additional null check on each addition.\n  /*@internal*/public $nextFlush: IChangeTracker = marker;\n  /*@internal*/public flush: IChangeTracker['flush'] = PLATFORM.noop;\n  /*@internal*/public $nextConnect: IConnectableBinding = marker;\n  /*@internal*/public connect: IConnectableBinding['connect'] = PLATFORM.noop;\n  /*@internal*/public $nextPatch: IConnectableBinding = marker;\n  /*@internal*/public patch: IConnectableBinding['patch'] = PLATFORM.noop;\n  /*@internal*/public $nextBound: ILifecycleBound = marker;\n  /*@internal*/public bound: ILifecycleBound['bound'] = PLATFORM.noop;\n  /*@internal*/public $nextMount: ILifecycleMount = marker;\n  /*@internal*/public $mount: ILifecycleMount['$mount'] = PLATFORM.noop;\n  /*@internal*/public $nextAttached: ILifecycleAttached = marker;\n  /*@internal*/public attached: ILifecycleAttached['attached'] = PLATFORM.noop;\n  /*@internal*/public $nextUnmount: ILifecycleUnmount = marker;\n  /*@internal*/public $unmount: ILifecycleUnmount['$unmount'] = PLATFORM.noop;\n  /*@internal*/public $nextDetached: ILifecycleDetached = marker;\n  /*@internal*/public detached: ILifecycleDetached['detached'] = PLATFORM.noop;\n  /*@internal*/public $nextUnbindAfterDetach: ILifecycleUnbindAfterDetach = marker;\n  /*@internal*/public $unbind: ILifecycleUnbindAfterDetach['$unbind'] = PLATFORM.noop;\n  /*@internal*/public $nextUnbound: ILifecycleUnbound = marker;\n  /*@internal*/public unbound: ILifecycleUnbound['unbound'] = PLATFORM.noop;\n\n  /*@internal*/public task: AggregateLifecycleTask = null;\n\n  public registerTask(task: ILifecycleTask): void {\n    if (this.task === null) {\n      this.task = new AggregateLifecycleTask();\n    }\n    this.task.addTask(task);\n  }\n\n  public finishTask(task: ILifecycleTask): void {\n    if (this.task !== null) {\n      if (this.task === task) {\n        this.task = null;\n      } else {\n        this.task.removeTask(task);\n      }\n    }\n  }\n\n  public enqueueFlush(requestor: IChangeTracker): Promise<void> {\n    // Queue a flush() callback; the depth is just for debugging / testing purposes and has\n    // no effect on execution. flush() will automatically be invoked when the promise resolves,\n    // or it can be manually invoked synchronously.\n    if (this.flushHead === this) {\n      this.flushed = this.promise.then(() => { this.processFlushQueue(LifecycleFlags.fromAsyncFlush); });\n    }\n    if (requestor.$nextFlush === null) {\n      requestor.$nextFlush = marker;\n      this.flushTail.$nextFlush = requestor;\n      this.flushTail = requestor;\n      ++this.flushCount;\n    }\n    return this.flushed;\n  }\n\n  public processFlushQueue(flags: LifecycleFlags): void {\n    flags |= LifecycleFlags.fromSyncFlush;\n    // flush callbacks may lead to additional flush operations, so keep looping until\n    // the flush head is back to `this` (though this will typically happen in the first iteration)\n    while (this.flushCount > 0) {\n      let current = this.flushHead.$nextFlush;\n      this.flushHead = this.flushTail = this;\n      this.flushCount = 0;\n      let next: typeof current;\n      do {\n        next = current.$nextFlush;\n        current.$nextFlush = null;\n        current.flush(flags);\n        current = next;\n      } while (current !== marker);\n    }\n  }\n\n  public beginBind(): void {\n    ++this.bindDepth;\n  }\n\n  public enqueueBound(requestor: ILifecycleBound): void {\n    // build a standard singly linked list for bound callbacks\n    if (requestor.$nextBound === null) {\n      requestor.$nextBound = marker;\n      this.boundTail.$nextBound = requestor;\n      this.boundTail = requestor;\n      ++this.boundCount;\n    }\n  }\n\n  public enqueueConnect(requestor: IConnectableBinding): void {\n    // enqueue connect and patch calls in separate lists so that they can be invoked\n    // independently from eachother\n    // TODO: see if we can eliminate/optimize some of this, because this is a relatively hot path\n    // (first get all the necessary integration tests working, then look for optimizations)\n\n    // build a standard singly linked list for connect callbacks\n    if (requestor.$nextConnect === null) {\n      requestor.$nextConnect = marker;\n      this.connectTail.$nextConnect = requestor;\n      this.connectTail = requestor;\n      ++this.connectCount;\n    }\n    // build a standard singly linked list for patch callbacks\n    if (requestor.$nextPatch === null) {\n      requestor.$nextPatch = marker;\n      this.patchTail.$nextPatch = requestor;\n      this.patchTail = requestor;\n      ++this.patchCount;\n    }\n  }\n\n  public processConnectQueue(flags: LifecycleFlags): void {\n    // connects cannot lead to additional connects, so we don't need to loop here\n    if (this.connectCount > 0) {\n      this.connectCount = 0;\n      let current = this.connectHead.$nextConnect;\n      this.connectHead = this.connectTail = <IConnectableBinding><unknown>this;\n      let next: typeof current;\n      do {\n        current.connect(flags);\n        next = current.$nextConnect;\n        current.$nextConnect = null;\n        current = next;\n      } while (current !== marker);\n    }\n  }\n\n  public processPatchQueue(flags: LifecycleFlags): void {\n    // flush before patching, but only if this is the initial bind;\n    // no DOM is attached yet so we can safely let everything propagate\n    if (flags & LifecycleFlags.fromStartTask) {\n      this.processFlushQueue(flags | LifecycleFlags.fromSyncFlush);\n    }\n    // patch callbacks may lead to additional bind operations, so keep looping until\n    // the patch head is back to `this` (though this will typically happen in the first iteration)\n    while (this.patchCount > 0) {\n      this.patchCount = 0;\n      let current = this.patchHead.$nextPatch;\n      this.patchHead = this.patchTail = <IConnectableBinding><unknown>this;\n      let next: typeof current;\n      do {\n        current.patch(flags);\n        next = current.$nextPatch;\n        current.$nextPatch = null;\n        current = next;\n      } while (current !== marker);\n    }\n  }\n\n  public endBind(flags: LifecycleFlags): ILifecycleTask {\n    // close / shrink a bind batch\n    if (--this.bindDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        return this.task;\n      }\n\n      this.processBindQueue(flags);\n\n      return LifecycleTask.done;\n    }\n  }\n\n  public processBindQueue(flags: LifecycleFlags): void {\n    // flush before processing bound callbacks, but only if this is the initial bind;\n    // no DOM is attached yet so we can safely let everything propagate\n    if (flags & LifecycleFlags.fromStartTask) {\n      this.processFlushQueue(flags | LifecycleFlags.fromSyncFlush);\n    }\n    // bound callbacks may lead to additional bind operations, so keep looping until\n    // the bound head is back to `this` (though this will typically happen in the first iteration)\n    while (this.boundCount > 0) {\n      this.boundCount = 0;\n      let current = this.boundHead.$nextBound;\n      let next: ILifecycleBound;\n      this.boundHead = this.boundTail = this;\n      do {\n        current.bound(flags);\n        next = current.$nextBound;\n        current.$nextBound = null;\n        current = next;\n      } while (current !== marker);\n    }\n  }\n\n  public beginUnbind(): void {\n    // open up / expand an unbind batch; the very first caller will close it again with endUnbind\n    ++this.unbindDepth;\n  }\n\n  public enqueueUnbound(requestor: ILifecycleUnbound): void {\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for unbound callbacks\n    if (requestor.$nextUnbound === null) {\n      requestor.$nextUnbound = marker;\n      this.unboundTail.$nextUnbound = requestor;\n      this.unboundTail = requestor;\n      ++this.unboundCount;\n    }\n  }\n\n  public endUnbind(flags: LifecycleFlags): ILifecycleTask {\n    // close / shrink an unbind batch\n    if (--this.unbindDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        return this.task;\n      }\n\n      this.processUnbindQueue(flags);\n\n      return LifecycleTask.done;\n    }\n  }\n\n  public processUnbindQueue(flags: LifecycleFlags): void {\n    // unbound callbacks may lead to additional unbind operations, so keep looping until\n    // the unbound head is back to `this` (though this will typically happen in the first iteration)\n    while (this.unboundCount > 0) {\n      this.unboundCount = 0;\n      let current = this.unboundHead.$nextUnbound;\n      let next: ILifecycleUnbound;\n      this.unboundHead = this.unboundTail = this;\n      do {\n        current.unbound(flags);\n        next = current.$nextUnbound;\n        current.$nextUnbound = null;\n        current = next;\n      } while (current !== marker);\n    }\n  }\n\n  public beginAttach(): void {\n    // open up / expand an attach batch; the very first caller will close it again with endAttach\n    ++this.attachDepth;\n  }\n\n  public enqueueMount(requestor: ILifecycleMount): void {\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for mount callbacks\n    if (requestor.$nextMount === null) {\n      requestor.$nextMount = marker;\n      this.mountTail.$nextMount = requestor;\n      this.mountTail = requestor;\n      ++this.mountCount;\n    }\n  }\n\n  public enqueueAttached(requestor: ILifecycleAttached): void {\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for attached callbacks\n    if (requestor.$nextAttached === null) {\n      requestor.$nextAttached = marker;\n      this.attachedTail.$nextAttached = requestor;\n      this.attachedTail = requestor;\n      ++this.attachedCount;\n    }\n  }\n\n  public endAttach(flags: LifecycleFlags): ILifecycleTask {\n    // close / shrink an attach batch\n    if (--this.attachDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        return this.task;\n      }\n\n      this.processAttachQueue(flags);\n\n      return LifecycleTask.done;\n    }\n  }\n\n  public processAttachQueue(flags: LifecycleFlags): void {\n    // flush and patch before starting the attach lifecycle to ensure batched collection changes are propagated to repeaters\n    // and the DOM is updated\n    this.processFlushQueue(flags | LifecycleFlags.fromSyncFlush);\n    // TODO: prevent duplicate updates coming from the patch queue (or perhaps it's just not needed in its entirety?)\n    //this.processPatchQueue(flags | LifecycleFlags.fromSyncFlush);\n\n    if (this.mountCount > 0) {\n      this.mountCount = 0;\n      let currentMount = this.mountHead.$nextMount;\n      this.mountHead = this.mountTail = this;\n      let nextMount: typeof currentMount;\n\n      do {\n        currentMount.$mount(flags);\n        nextMount = currentMount.$nextMount;\n        currentMount.$nextMount = null;\n        currentMount = nextMount;\n      } while (currentMount !== marker);\n    }\n    // Connect all connect-queued bindings AFTER mounting is done, so that the DOM is visible asap,\n    // but connect BEFORE running the attached callbacks to ensure any changes made during those callbacks\n    // are still accounted for.\n    // TODO: add a flag/option to further delay connect with a RAF callback (the tradeoff would be that we'd need\n    // to run an additional patch cycle before that connect, which can be expensive and unnecessary in most real\n    // world scenarios, but can significantly speed things up with nested, highly volatile data like in dbmonster)\n    this.processConnectQueue(LifecycleFlags.mustEvaluate);\n\n    if (this.attachedCount > 0) {\n      this.attachedCount = 0;\n      let currentAttached = this.attachedHead.$nextAttached;\n      this.attachedHead = this.attachedTail = this;\n      let nextAttached: typeof currentAttached;\n\n      do {\n        currentAttached.attached(flags);\n        nextAttached = currentAttached.$nextAttached;\n        currentAttached.$nextAttached = null;\n        currentAttached = nextAttached;\n      } while (currentAttached !== marker);\n    }\n  }\n\n  public beginDetach(): void {\n    // open up / expand a detach batch; the very first caller will close it again with endDetach\n    ++this.detachDepth;\n  }\n\n  public enqueueUnmount(requestor: ILifecycleUnmount): void {\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for unmount callbacks\n    if (requestor.$nextUnmount === null) {\n      requestor.$nextUnmount = marker;\n      this.unmountTail.$nextUnmount = requestor;\n      this.unmountTail = requestor;\n      ++this.unmountCount;\n    }\n  }\n\n  public enqueueDetached(requestor: ILifecycleDetached): void {\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for detached callbacks\n    if (requestor.$nextDetached === null) {\n      requestor.$nextDetached = marker;\n      this.detachedTail.$nextDetached = requestor;\n      this.detachedTail = requestor;\n      ++this.detachedCount;\n    }\n  }\n\n  public enqueueUnbindAfterDetach(requestor: ILifecycleUnbindAfterDetach): void {\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for unbindAfterDetach callbacks\n    if (requestor.$nextUnbindAfterDetach === null) {\n      requestor.$nextUnbindAfterDetach = marker;\n      this.unbindAfterDetachTail.$nextUnbindAfterDetach = requestor;\n      this.unbindAfterDetachTail = requestor;\n      ++this.unbindAfterDetachCount;\n    }\n  }\n\n  public endDetach(flags: LifecycleFlags): ILifecycleTask {\n    // close / shrink a detach batch\n    if (--this.detachDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        return this.task;\n      }\n\n      this.processDetachQueue(flags);\n\n      return LifecycleTask.done;\n    }\n  }\n\n  public processDetachQueue(flags: LifecycleFlags): void {\n    // flush before unmounting to ensure batched collection changes propagate to the repeaters,\n    // which may lead to additional unmount operations\n    this.processFlushQueue(flags | LifecycleFlags.fromFlush | LifecycleFlags.doNotUpdateDOM);\n\n    if (this.unmountCount > 0) {\n      this.unmountCount = 0;\n      let currentUnmount = this.unmountHead.$nextUnmount;\n      this.unmountHead = this.unmountTail = this;\n      let nextUnmount: typeof currentUnmount;\n\n      do {\n        currentUnmount.$unmount(flags);\n        nextUnmount = currentUnmount.$nextUnmount;\n        currentUnmount.$nextUnmount = null;\n        currentUnmount = nextUnmount;\n      } while (currentUnmount !== marker);\n    }\n\n    if (this.detachedCount > 0) {\n      this.detachedCount = 0;\n      let currentDetached = this.detachedHead.$nextDetached;\n      this.detachedHead = this.detachedTail = this;\n      let nextDetached: typeof currentDetached;\n\n      do {\n        currentDetached.detached(flags);\n        nextDetached = currentDetached.$nextDetached;\n        currentDetached.$nextDetached = null;\n        currentDetached = nextDetached;\n      } while (currentDetached !== marker);\n    }\n\n    if (this.unbindAfterDetachCount > 0) {\n      this.beginUnbind();\n      this.unbindAfterDetachCount = 0;\n      let currentUnbind = this.unbindAfterDetachHead.$nextUnbindAfterDetach;\n      this.unbindAfterDetachHead = this.unbindAfterDetachTail = this;\n      let nextUnbind: typeof currentUnbind;\n\n      do {\n        currentUnbind.$unbind(flags);\n        nextUnbind = currentUnbind.$nextUnbindAfterDetach;\n        currentUnbind.$nextUnbindAfterDetach = null;\n        currentUnbind = nextUnbind;\n      } while (currentUnbind !== marker);\n      this.endUnbind(flags);\n    }\n  }\n}\n\n@inject(ILifecycle)\nexport class CompositionCoordinator {\n  public onSwapComplete: () => void = PLATFORM.noop;\n\n  private queue: (IView | PromiseSwap)[] = null;\n  private swapTask: ILifecycleTask = LifecycleTask.done;\n\n  private currentView: IView = null;\n  private scope: IScope;\n  private isBound: boolean = false;\n  private isAttached: boolean = false;\n\n  constructor(public readonly $lifecycle: ILifecycle) {}\n\n  public static register(container: IContainer): IResolver<CompositionCoordinator> {\n    return Registration.transient(this, this).register(container, this);\n  }\n\n  public compose(value: IView | Promise<IView>, flags: LifecycleFlags): void {\n    if (this.swapTask.done) {\n      if (value instanceof Promise) {\n        this.enqueue(new PromiseSwap(this, value));\n        this.processNext();\n      } else {\n        this.swap(value, flags);\n      }\n    } else {\n      if (value instanceof Promise) {\n        this.enqueue(new PromiseSwap(this, value));\n      } else {\n        this.enqueue(value);\n      }\n\n      if (this.swapTask.canCancel()) {\n        this.swapTask.cancel();\n      }\n    }\n  }\n\n  public binding(flags: LifecycleFlags, scope: IScope): void {\n    this.scope = scope;\n    this.isBound = true;\n\n    if (this.currentView !== null) {\n      this.currentView.$bind(flags, scope);\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.isAttached = true;\n\n    if (this.currentView !== null) {\n      this.currentView.$attach(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.isAttached = false;\n\n    if (this.currentView !== null) {\n      this.currentView.$detach(flags);\n    }\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.isBound = false;\n\n    if (this.currentView !== null) {\n      this.currentView.$unbind(flags);\n    }\n  }\n\n  public caching(flags: LifecycleFlags): void {\n    this.currentView = null;\n  }\n\n  private enqueue(view: IView | PromiseSwap): void {\n    if (this.queue === null) {\n      this.queue = [];\n    }\n\n    this.queue.push(view);\n  }\n\n  private swap(view: IView, flags: LifecycleFlags): void {\n    if (this.currentView === view) {\n      return;\n    }\n\n    const $lifecycle = this.$lifecycle;\n    const swapTask = new AggregateLifecycleTask();\n\n    let lifecycleTask: ILifecycleTask;\n    let currentView = this.currentView;\n    if (currentView === null) {\n      lifecycleTask = LifecycleTask.done;\n    } else {\n      $lifecycle.enqueueUnbindAfterDetach(currentView);\n      $lifecycle.beginDetach();\n      currentView.$detach(flags);\n      lifecycleTask = $lifecycle.endDetach(flags);\n    }\n    swapTask.addTask(lifecycleTask);\n\n    currentView = this.currentView = view;\n\n    if (currentView === null) {\n      lifecycleTask = LifecycleTask.done;\n    } else {\n      if (this.isBound) {\n        $lifecycle.beginBind();\n        currentView.$bind(flags, this.scope);\n        $lifecycle.endBind(flags);\n      }\n      if (this.isAttached) {\n        $lifecycle.beginAttach();\n        currentView.$attach(flags);\n        lifecycleTask = $lifecycle.endAttach(flags);\n      } else {\n        lifecycleTask = LifecycleTask.done;\n      }\n    }\n    swapTask.addTask(lifecycleTask);\n\n    if (swapTask.done) {\n      this.swapTask = LifecycleTask.done;\n      this.onSwapComplete();\n    } else {\n      this.swapTask = swapTask;\n      this.swapTask.wait().then(() => {\n        this.onSwapComplete();\n        this.processNext();\n      });\n    }\n  }\n\n  private processNext(): void {\n    if (this.queue !== null && this.queue.length > 0) {\n      const next = this.queue.pop();\n      this.queue.length = 0;\n\n      if (PromiseSwap.is(next)) {\n        this.swapTask = next.start();\n      } else {\n        this.swap(next, LifecycleFlags.fromLifecycleTask);\n      }\n    } else {\n      this.swapTask = LifecycleTask.done;\n    }\n  }\n}\n\nexport const LifecycleTask = {\n  done: {\n    done: true,\n    canCancel(): boolean { return false; },\n    // tslint:disable-next-line:no-empty\n    cancel(): void {},\n    wait(): Promise<unknown> { return Promise.resolve(); }\n  }\n};\n\nexport interface ILifecycleTask<T = unknown> {\n  readonly done: boolean;\n  canCancel(): boolean;\n  cancel(): void;\n  wait(): Promise<T>;\n}\n\nexport class AggregateLifecycleTask implements ILifecycleTask<void> {\n  public done: boolean = true;\n\n  /*@internal*/\n  public owner: Lifecycle = null;\n\n  private tasks: ILifecycleTask[] = [];\n  private waiter: Promise<void> = null;\n  private resolve: () => void = null;\n\n  public addTask(task: ILifecycleTask): void {\n    if (!task.done) {\n      this.done = false;\n      this.tasks.push(task);\n      task.wait().then(() => { this.tryComplete(); });\n    }\n  }\n\n  public removeTask(task: ILifecycleTask): void {\n    if (task.done) {\n      const idx = this.tasks.indexOf(task);\n      if (idx !== -1) {\n        this.tasks.splice(idx, 1);\n      }\n    }\n    if (this.tasks.length === 0) {\n      if (this.owner !== null) {\n        this.owner.finishTask(this);\n        this.owner = null;\n      }\n    }\n  }\n\n  public canCancel(): boolean {\n    if (this.done) {\n      return false;\n    }\n\n    return this.tasks.every(x => x.canCancel());\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.tasks.forEach(x => { x.cancel(); });\n      this.done = false;\n    }\n  }\n\n  public wait(): Promise<void> {\n    if (this.waiter === null) {\n      if (this.done) {\n        this.waiter = Promise.resolve();\n      } else {\n        // tslint:disable-next-line:promise-must-complete\n        this.waiter = new Promise((resolve) => this.resolve = resolve);\n      }\n    }\n\n    return this.waiter;\n  }\n\n  private tryComplete(): void {\n    if (this.done) {\n      return;\n    }\n\n    if (this.tasks.every(x => x.done)) {\n      this.complete(true);\n    }\n  }\n\n  private complete(notCancelled: boolean): void {\n    this.done = true;\n\n    if (notCancelled && this.owner !== null) {\n      this.owner.processDetachQueue(LifecycleFlags.fromLifecycleTask);\n      this.owner.processUnbindQueue(LifecycleFlags.fromLifecycleTask);\n      this.owner.processBindQueue(LifecycleFlags.fromLifecycleTask);\n      this.owner.processAttachQueue(LifecycleFlags.fromLifecycleTask);\n    }\n    this.owner.finishTask(this);\n\n    if (this.resolve !== null) {\n      this.resolve();\n    }\n  }\n}\n\n/*@internal*/\nexport class PromiseSwap implements ILifecycleTask<IView> {\n  public done: boolean = false;\n  private isCancelled: boolean = false;\n\n  constructor(\n    private coordinator: CompositionCoordinator,\n    private promise: Promise<IView>\n  ) {}\n\n  public static is(object: object): object is PromiseSwap {\n    return 'start' in object;\n  }\n\n  public start(): ILifecycleTask<IView | unknown> {\n    if (this.isCancelled) {\n      return LifecycleTask.done;\n    }\n\n    this.promise = this.promise.then(x => {\n      this.onResolve(x);\n      return x;\n    });\n\n    return this;\n  }\n\n  public canCancel(): boolean {\n    return !this.done;\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.isCancelled = true;\n    }\n  }\n\n  public wait(): Promise<IView> {\n    return this.promise;\n  }\n\n  private onResolve(value: IView): void {\n    if (this.isCancelled) {\n      return;\n    }\n\n    this.done = true;\n    this.coordinator.compose(value, LifecycleFlags.fromLifecycleTask);\n  }\n}\n\n// tslint:disable:jsdoc-format\n/**\n * A general-purpose ILifecycleTask implementation that can be placed\n * before an attached, detached, bound or unbound hook during attaching,\n * detaching, binding or unbinding, respectively.\n *\n * The provided promise will be awaited before the corresponding lifecycle\n * hook (and any hooks following it) is invoked.\n *\n * The provided callback will be invoked after the promise is resolved\n * and before the next lifecycle hook.\n *\n * Example:\n```ts\nexport class MyViewModel {\n  private $lifecycle: ILifecycle; // set before created() hook\n  private answer: number;\n\n  public binding(flags: LifecycleFlags): void {\n    // this.answer === undefined\n    this.$lifecycle.registerTask(new PromiseTask(\n      this.getAnswerAsync,\n      answer => {\n        this.answer = answer;\n      }\n    ));\n  }\n\n  public bound(flags: LifecycleFlags): void {\n    // this.answer === 42\n  }\n\n  private getAnswerAsync(): Promise<number> {\n    return Promise.resolve().then(() => 42);\n  }\n}\n```\n */\n// tslint:enable:jsdoc-format\nexport class PromiseTask<T = void> implements ILifecycleTask<T> {\n  public done: boolean;\n  private isCancelled: boolean;\n  private promise: Promise<T>;\n  private callback: (result?: T) => void;\n\n  constructor(\n    promise: Promise<T>,\n    callback: (result?: T) => void\n  ) {\n    this.done = false;\n    this.isCancelled = false;\n    this.callback = callback;\n    this.promise = promise.then(value => {\n      if (this.isCancelled === true) {\n        return;\n      }\n      this.done = true;\n      this.callback(value);\n      return value;\n    });\n  }\n\n  public canCancel(): boolean {\n    return !this.done;\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.isCancelled = true;\n    }\n  }\n\n  public wait(): Promise<T> {\n    return this.promise;\n  }\n}\n","import { Constructable, Decoratable, Decorated, IContainer, Registration, Writable } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../observation';\nimport { IResourceKind, IResourceType } from '../resource';\nimport { IBinding } from './binding';\n\nexport interface IBindingBehavior {\n  bind(flags: LifecycleFlags, scope: IScope, binding: IBinding): void;\n  unbind(flags: LifecycleFlags, scope: IScope, binding: IBinding): void;\n}\n\nexport interface IBindingBehaviorSource {\n  name: string;\n}\n\nexport interface IBindingBehaviorType extends IResourceType<IBindingBehaviorSource> {\n}\n\ntype BindingBehaviorDecorator = <T extends Constructable>(target: Decoratable<IBindingBehavior, T>) => Decorated<IBindingBehavior, T> & IBindingBehaviorType;\n\nexport function bindingBehavior(name: string): BindingBehaviorDecorator;\nexport function bindingBehavior(source: IBindingBehaviorSource): BindingBehaviorDecorator;\nexport function bindingBehavior(nameOrSource: string | IBindingBehaviorSource): BindingBehaviorDecorator {\n  return target => BindingBehaviorResource.define(nameOrSource, target);\n}\n\nexport const BindingBehaviorResource: IResourceKind<IBindingBehaviorSource, IBindingBehaviorType> = {\n  name: 'binding-behavior',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable & Partial<IBindingBehaviorType>>(Type: T): Type is T & IBindingBehaviorType {\n    return Type.kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | IBindingBehaviorSource, ctor: T): T & IBindingBehaviorType {\n    const Type = ctor as T & IBindingBehaviorType;\n    const description = typeof nameOrSource === 'string'\n      ? { name: nameOrSource }\n      : nameOrSource;\n\n    (Type as Writable<IBindingBehaviorType>).kind = BindingBehaviorResource;\n    (Type as Writable<IBindingBehaviorType>).description = description;\n    Type.register = register;\n\n    return Type;\n  }\n};\n\nfunction register(this: IBindingBehaviorType, container: IContainer): void {\n  container.register(\n    Registration.singleton(\n      BindingBehaviorResource.keyFrom(this.description.name),\n      this\n    )\n  );\n}\n","import { Constructable, DI, IContainer, IResolver, PLATFORM, Reporter, Writable } from '@aurelia/kernel';\n\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction isRenderLocation(node: INode): node is IRenderLocation {\n  return node.textContent === 'au-end';\n}\n\nexport interface INodeLike {\n  readonly firstChild: INode | null;\n  readonly lastChild: INode | null;\n  readonly childNodes: ArrayLike<INode>;\n}\nexport const INode = DI.createInterface<INode>().noDefault();\nexport interface INode extends INodeLike {\n  textContent: string;\n  readonly parentNode: INode | null;\n  readonly nextSibling: INode | null;\n  readonly previousSibling: INode | null;\n  readonly nodeName: string;\n  readonly nodeType: number;\n}\nexport interface IRemovableNode extends INode {\n  remove(): void;\n}\nexport const IEncapsulationSource = DI.createInterface<IEncapsulationSource>().noDefault();\nexport interface IEncapsulationSource extends INode {}\n\nexport interface IAttr extends Partial<INode> {\n  readonly name: string;\n  value: string;\n}\n\nexport interface IElement extends INode {\n  readonly content?: IDocumentFragment;\n}\n\nexport interface IStyleDeclaration {\n  cssText: string;\n  setProperty(propertyName: string, value: string, priority?: string): void;\n  removeProperty(propertyName: string): void;\n}\nexport interface IHTMLElement extends IElement {\n  readonly style: IStyleDeclaration;\n  setAttributeNS(namespace: string, qualifiedName: string, value: string): void;\n  getAttributeNS(namespace: string, qualifiedName: string): string;\n}\n\nexport interface IInputElement extends IElement {\n  // tslint:disable-next-line:no-reserved-keywords\n  readonly type: string;\n  value: string;\n  checked: boolean;\n}\n\nexport interface IText extends INode {\n  readonly nodeName: '#text';\n  readonly nodeType: typeof TEXT_NODE;\n}\n\nexport interface IComment extends INode {\n  readonly nodeName: '#comment';\n  readonly nodeType: typeof COMMENT_NODE;\n}\n\nexport interface IDocumentFragment extends INode {\n  readonly nodeName: '#document-fragment';\n  readonly nodeType: typeof DOCUMENT_FRAGMENT_NODE;\n}\n\nexport const IRenderLocation = DI.createInterface<IRenderLocation>().noDefault();\nexport interface IRenderLocation extends INode {\n  $start?: IRenderLocation;\n  $nodes?: INodeSequence | typeof PLATFORM['emptyObject'];\n}\n\n/**\n * Represents a DocumentFragment\n */\nexport interface INodeSequence extends INodeLike {\n  /**\n   * The nodes of this sequence.\n   */\n  childNodes: ReadonlyArray<INode>;\n\n  /**\n   * Find all instruction targets in this sequence.\n   */\n  findTargets(): ArrayLike<INode> | ReadonlyArray<INode>;\n\n  /**\n   * Insert this sequence as a sibling before refNode\n   */\n  insertBefore(refNode: INode): void;\n\n  /**\n   * Append this sequence as a child to parent\n   */\n  appendTo(parent: INode): void;\n\n  /**\n   * Remove this sequence from its parent.\n   */\n  remove(): void;\n}\n\nexport interface INodeObserver {\n  disconnect(): void;\n}\n\n// tslint:disable:no-any\nexport const DOM = {\n  createDocumentFragment(markupOrNode?: string | IElement): IDocumentFragment {\n    if (markupOrNode === undefined || markupOrNode === null) {\n      return <IDocumentFragment>document.createDocumentFragment();\n    }\n    if ((<IElement>markupOrNode).nodeType > 0) {\n      if ((<IElement>markupOrNode).content !== undefined) {\n        return (<IElement>markupOrNode).content;\n      }\n      const fragment = document.createDocumentFragment();\n      fragment.appendChild(<any>markupOrNode);\n      return <IDocumentFragment>fragment;\n    }\n    return DOM.createTemplate(<string>markupOrNode).content;\n  },\n  createTemplate(markup?: string): IElement {\n    if (markup === undefined) {\n      return <IElement>document.createElement('template');\n    }\n    const template = document.createElement('template');\n    template.innerHTML = markup;\n    return <IElement>template;\n  },\n  addClass(node: INode, className: string): void {\n    (<any>node).classList.add(className);\n  },\n  addEventListener(eventName: string, subscriber: any, publisher?: INode, options?: any): void {\n    ((<any>publisher) || document).addEventListener(eventName, subscriber, options);\n  },\n  appendChild(parent: INode, child: INode): void {\n    (<any>parent).appendChild(child);\n  },\n  attachShadow(host: IElement, options: ShadowRootInit): IDocumentFragment {\n    return (<any>host).attachShadow(options);\n  },\n  cloneNode<T extends INode = INode>(node: T, deep?: boolean): T {\n    return (<any>node).cloneNode(deep !== false); // use true unless the caller explicitly passes in false\n  },\n  convertToRenderLocation(node: INode): IRenderLocation {\n    if (isRenderLocation(node)) {\n      return node; // it's already a RenderLocation (converted by FragmentNodeSequence)\n    }\n    if ((<any>node).parentNode === null) {\n      throw Reporter.error(52);\n    }\n    const locationEnd = <IRenderLocation>document.createComment('au-end');\n    const locationStart = <IRenderLocation>document.createComment('au-start');\n    DOM.replaceNode(locationEnd, node);\n    DOM.insertBefore(locationStart, locationEnd);\n    locationEnd.$start = locationStart;\n    locationStart.$nodes = null;\n    return locationEnd;\n  },\n  createComment(text: string): IComment {\n    return <IComment>document.createComment(text);\n  },\n  createElement(name: string): IElement {\n    return document.createElement(name);\n  },\n  createNodeObserver(target: INode, callback: MutationCallback, options: MutationObserverInit): MutationObserver {\n    const observer = new MutationObserver(callback);\n    observer.observe(<any>target, options);\n    return observer;\n  },\n  createTextNode(text: string): IText {\n    return <IText>document.createTextNode(text);\n  },\n  getAttribute(node: INode, name: string): any {\n    return (<any>node).getAttribute(name);\n  },\n  hasClass(node: INode, className: string): boolean {\n    return (<any>node).classList.contains(className);\n  },\n  insertBefore(nodeToInsert: INode, referenceNode: INode): void {\n    (<any>referenceNode).parentNode.insertBefore(nodeToInsert, referenceNode);\n  },\n  isAllWhitespace(node: INode): boolean {\n    if ((<any>node).auInterpolationTarget === true) {\n      return false;\n    }\n    const text = node.textContent;\n    const len = text.length;\n    let i = 0;\n    // for perf benchmark of this compared to the regex method: http://jsben.ch/p70q2 (also a general case against using regex)\n    while (i < len) {\n      // charCodes 0-0x20(32) can all be considered whitespace (non-whitespace chars in this range don't have a visual representation anyway)\n      if (text.charCodeAt(i) > 0x20) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  },\n  isCommentNodeType(node: INode): node is IComment {\n    return node.nodeType === COMMENT_NODE;\n  },\n  isDocumentFragmentType(node: INode): node is IDocumentFragment {\n    return node.nodeType === DOCUMENT_FRAGMENT_NODE;\n  },\n  isElementNodeType(node: INode): node is IElement {\n    return node.nodeType === ELEMENT_NODE;\n  },\n  isNodeInstance(potentialNode: any): potentialNode is INode {\n    return potentialNode.nodeType > 0;\n  },\n  isTextNodeType(node: INode): node is IText {\n    return node.nodeType === TEXT_NODE;\n  },\n  migrateChildNodes(currentParent: INode, newParent: INode): void {\n    while (currentParent.firstChild) {\n      DOM.appendChild(newParent, currentParent.firstChild);\n    }\n  },\n  registerElementResolver(container: IContainer, resolver: IResolver): void {\n    container.registerResolver(INode, resolver);\n    container.registerResolver(Element, resolver);\n    container.registerResolver(HTMLElement, resolver);\n    container.registerResolver(SVGElement, resolver);\n  },\n  remove(node: INodeLike): void {\n    if ((<any>node).remove) {\n      (<any>node).remove();\n    } else {\n      (<any>node).parentNode.removeChild(node);\n    }\n  },\n  removeAttribute(node: INode, name: string): void {\n    (<any>node).removeAttribute(name);\n  },\n  removeClass(node: INode, className: string): void {\n    (<any>node).classList.remove(className);\n  },\n  removeEventListener(eventName: string, subscriber: any, publisher?: INode, options?: any): void {\n    ((<any>publisher) || document).removeEventListener(eventName, subscriber, options);\n  },\n  replaceNode(newChild: INode, oldChild: INode): void {\n    if (oldChild.parentNode) {\n      (<any>oldChild).parentNode.replaceChild(newChild, oldChild);\n    }\n  },\n  setAttribute(node: INode, name: string, value: any): void {\n    (<any>node).setAttribute(name, value);\n  },\n  treatAsNonWhitespace(node: INode): void {\n    // see isAllWhitespace above\n    (<any>node).auInterpolationTarget = true;\n  }\n};\n\n// This is an implementation of INodeSequence that represents \"no DOM\" to render.\n// It's used in various places to avoid null and to encode\n// the explicit idea of \"no view\".\nconst emptySequence: INodeSequence = {\n  firstChild: null,\n  lastChild: null,\n  childNodes: PLATFORM.emptyArray,\n  findTargets(): ReturnType<INodeSequence['findTargets']> { return PLATFORM.emptyArray; },\n  insertBefore(refNode: INode): ReturnType<INodeSequence['insertBefore']> { /*do nothing*/ },\n  appendTo(parent: INode): ReturnType<INodeSequence['appendTo']> { /*do nothing*/ },\n  remove(): ReturnType<INodeSequence['remove']> { /*do nothing*/ }\n};\n\nexport const NodeSequence = {\n  empty: emptySequence\n};\n\n/**\n * An specialized INodeSequence with optimizations for text (interpolation) bindings\n * The contract of this INodeSequence is:\n * - the previous element is an `au-marker` node\n * - text is the actual text node\n */\nexport class TextNodeSequence implements INodeSequence {\n  public firstChild: IText;\n  public lastChild: IText;\n  public childNodes: IText[];\n\n  private targets: [INode];\n\n  constructor(text: IText) {\n    this.firstChild = text;\n    this.lastChild = text;\n    this.childNodes = [text];\n    this.targets = [new AuMarker(text)];\n  }\n\n  public findTargets(): ArrayLike<INode> {\n    return this.targets;\n  }\n\n  public insertBefore(refNode: INode): void {\n    (<any>refNode).parentNode.insertBefore(this.firstChild, refNode);\n  }\n\n  public appendTo(parent: INode): void {\n    (<any>parent).appendChild(this.firstChild);\n  }\n\n  public remove(): void {\n    (<any>this.firstChild).remove();\n  }\n}\n// tslint:enable:no-any\n\n// This is the most common form of INodeSequence.\n// Every custom element or template controller whose node sequence is based on an HTML template\n// has an instance of this under the hood. Anyone who wants to create a node sequence from\n// a string of markup would also receive an instance of this.\n// CompiledTemplates create instances of FragmentNodeSequence.\n/*@internal*/\nexport class FragmentNodeSequence implements INodeSequence {\n  public firstChild: INode;\n  public lastChild: INode;\n  public childNodes: INode[];\n\n  private fragment: IDocumentFragment;\n  private targets: ArrayLike<INode>;\n\n  private start: IRenderLocation;\n  private end: IRenderLocation;\n\n  constructor(fragment: IDocumentFragment) {\n    this.fragment = fragment;\n    // tslint:disable-next-line:no-any\n    const targetNodeList = (<any>fragment).querySelectorAll('.au');\n    let i = 0;\n    let ii = targetNodeList.length;\n    const targets = this.targets = Array(ii);\n    while (i < ii) {\n      // eagerly convert all markers to IRenderLocations (otherwise the renderer\n      // will do it anyway) and store them in the target list (since the comments\n      // can't be queried)\n      const target = targetNodeList[i];\n      if (target.nodeName === 'AU-MARKER') {\n        // note the renderer will still call this method, but it will just return the\n        // location if it sees it's already a location\n        targets[i] = DOM.convertToRenderLocation(target);\n      } else {\n        // also store non-markers for consistent ordering\n        targets[i] = target;\n      }\n      ++i;\n    }\n    const childNodeList = fragment.childNodes;\n    i = 0;\n    ii = childNodeList.length;\n    const childNodes = this.childNodes = Array(ii);\n    while (i < ii) {\n      childNodes[i] = childNodeList[i] as Writable<INode>;\n      ++i;\n    }\n\n    this.firstChild = fragment.firstChild;\n    this.lastChild = fragment.lastChild;\n\n    this.start = this.end = null;\n  }\n\n  public findTargets(): ArrayLike<INode> {\n    // tslint:disable-next-line:no-any\n    return this.targets;\n  }\n\n  public insertBefore(refNode: IRenderLocation): void {\n    // tslint:disable-next-line:no-any\n    (<any>refNode).parentNode.insertBefore(this.fragment, refNode);\n    // internally we could generally assume that this is an IRenderLocation,\n    // but since this is also public API we still need to double check\n    // (or horrible things might happen)\n    if (isRenderLocation(refNode)) {\n      this.end = refNode;\n      const start = this.start = refNode.$start;\n      if (start.$nodes === null) {\n        start.$nodes = this;\n      } else {\n        // if more than one NodeSequence uses the same RenderLocation, it's an child\n        // of a repeater (or something similar) and we shouldn't remove all nodes between\n        // start - end since that would always remove all items from a repeater, even\n        // when only one is removed\n        // so we set $nodes to PLATFORM.emptyObject to 1) tell other sequences that it's\n        // occupied and 2) prevent start.$nodes === this from ever evaluating to true\n        // during remove()\n        start.$nodes = PLATFORM.emptyObject;\n      }\n    }\n  }\n\n  public appendTo(parent: INode): void {\n    // tslint:disable-next-line:no-any\n    (<any>parent).appendChild(this.fragment);\n    // this can never be a RenderLocation, and if for whatever reason we moved\n    // from a RenderLocation to a host, make sure \"start\" and \"end\" are null\n    this.start = this.end = null;\n  }\n\n  public remove(): void {\n    const fragment = this.fragment;\n    if (this.start !== null && this.start.$nodes === this) {\n      // if we're between a valid \"start\" and \"end\" (e.g. if/else, containerless, or a\n      // repeater with a single item) then simply remove everything in-between (but not\n      // the comments themselves as they belong to the parent)\n      const end = this.end;\n      let next: INode;\n      let current = this.start.nextSibling;\n      while (current !== end) {\n        next = current.nextSibling;\n        // tslint:disable-next-line:no-any\n        (<any>fragment).appendChild(current);\n        current = next;\n      }\n      this.start.$nodes = null;\n      this.start = this.end = null;\n    } else {\n      // otherwise just remove from first to last child in the regular way\n      let current = this.firstChild;\n\n      if (current.parentNode !== fragment) {\n        const end = this.lastChild;\n        let next: INode;\n\n        while (current !== null) {\n          next = current.nextSibling;\n          // tslint:disable-next-line:no-any\n          (<any>fragment).appendChild(current);\n\n          if (current === end) {\n            break;\n          }\n\n          current = next;\n        }\n      }\n    }\n  }\n}\n\ninterface ICloneableNode extends INode {\n  cloneNode(deep?: boolean): ICloneableNode;\n}\n\nexport interface INodeSequenceFactory {\n  createNodeSequence(): INodeSequence;\n}\n\nexport class NodeSequenceFactory {\n  private readonly deepClone: boolean;\n  private readonly node: ICloneableNode;\n  private readonly Type: Constructable<INodeSequence>;\n  constructor(fragment: IDocumentFragment) {\n    const childNodes = fragment.childNodes;\n    switch (childNodes.length) {\n      case 0:\n        this.createNodeSequence = () => NodeSequence.empty;\n        return;\n      case 2:\n        const target = childNodes[0];\n        if (target.nodeName === 'AU-MARKER' || target.nodeName === '#comment') {\n          const text = childNodes[1];\n          if (text.nodeType === TEXT_NODE && text.textContent === ' ') {\n            text.textContent = '';\n            this.deepClone = false;\n            this.node = <ICloneableNode>text;\n            this.Type = TextNodeSequence;\n            return;\n          }\n        }\n      // falls through if not returned\n      default:\n        this.deepClone = true;\n        this.node = <ICloneableNode>fragment;\n        this.Type = FragmentNodeSequence;\n    }\n  }\n\n  public static createFor(markupOrNode: string | INode): NodeSequenceFactory {\n    const fragment = DOM.createDocumentFragment(markupOrNode);\n    return new NodeSequenceFactory(fragment);\n  }\n\n  public createNodeSequence(): INodeSequence {\n    return new this.Type(this.node.cloneNode(this.deepClone));\n  }\n}\n\n/*@internal*/\nexport class AuMarker implements INode {\n  public get parentNode(): INode {\n    return this.nextSibling.parentNode;\n  }\n  public readonly nextSibling: INode;\n  public readonly previousSibling: INode;\n  public readonly content?: INode;\n  public readonly firstChild: INode;\n  public readonly lastChild: INode;\n  public readonly childNodes: ArrayLike<INode>;\n  public readonly nodeName: 'AU-MARKER';\n  public readonly nodeType: typeof ELEMENT_NODE;\n  public textContent: string = '';\n\n  constructor(next: INode) {\n    this.nextSibling = next;\n  }\n  public remove(): void { /* do nothing */ }\n}\n(proto => {\n  proto.previousSibling = null;\n  proto.firstChild = null;\n  proto.lastChild = null;\n  proto.childNodes = PLATFORM.emptyArray;\n  proto.nodeName = 'AU-MARKER';\n  proto.nodeType = ELEMENT_NODE;\n})(<Writable<AuMarker>>AuMarker.prototype);\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport {\n  IBatchedCollectionSubscriber, IBatchedSubscriberCollection, IndexMap, IPropertySubscriber,\n  ISubscriberCollection, LifecycleFlags, MutationKind, MutationKindToBatchedSubscriber,\n  MutationKindToSubscriber, SubscriberFlags\n} from '../observation';\n\nexport function subscriberCollection<T extends MutationKind>(mutationKind: T): ClassDecorator {\n  return function(target: Function): void {\n    const proto = <ISubscriberCollection<MutationKind.instance | MutationKind.collection>>target.prototype;\n\n    proto._subscriberFlags = SubscriberFlags.None;\n    proto._subscriber0 = null;\n    proto._subscriber1 = null;\n    proto._subscriber2 = null;\n    proto._subscribersRest = null;\n\n    proto.addSubscriber = addSubscriber;\n    proto.removeSubscriber = removeSubscriber;\n    proto.hasSubscriber = hasSubscriber;\n    proto.hasSubscribers = hasSubscribers;\n    proto.callSubscribers = (mutationKind === MutationKind.instance ? callPropertySubscribers : callCollectionSubscribers);\n  };\n}\n\nfunction addSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: MutationKindToSubscriber<T>): boolean {\n  if (this.hasSubscriber(subscriber)) {\n    return false;\n  }\n  const subscriberFlags = this._subscriberFlags;\n  if (!(subscriberFlags & SubscriberFlags.Subscriber0)) {\n    this._subscriber0 = subscriber;\n    this._subscriberFlags |= SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber1)) {\n    this._subscriber1 = subscriber;\n    this._subscriberFlags |= SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber2)) {\n    this._subscriber2 = subscriber;\n    this._subscriberFlags |= SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.SubscribersRest)) {\n    this._subscribersRest = [subscriber];\n    this._subscriberFlags |= SubscriberFlags.SubscribersRest;\n    return true;\n  }\n  this._subscribersRest.push(subscriber);\n  return true;\n}\n\nfunction removeSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: IPropertySubscriber): boolean {\n  const subscriberFlags = this._subscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._subscriber0 === subscriber) {\n    this._subscriber0 = null;\n    this._subscriberFlags &= ~SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._subscriber1 === subscriber) {\n    this._subscriber1 = null;\n    this._subscriberFlags &= ~SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._subscriber2 === subscriber) {\n    this._subscriber2 = null;\n    this._subscriberFlags &= ~SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    const subscribers = this._subscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        subscribers.splice(i, 1);\n        if (ii === 1) {\n          this._subscriberFlags &= ~SubscriberFlags.SubscribersRest;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction callPropertySubscribers(\n  this: ISubscriberCollection<MutationKind.instance>,\n  newValue: IIndexable | Primitive,\n  previousValue: IIndexable | Primitive,\n  flags: LifecycleFlags): void {\n  /**\n   * Note: change handlers may have the side-effect of adding/removing subscribers to this collection during this\n   * callSubscribers invocation, so we're caching them all before invoking any.\n   * Subscribers added during this invocation are not invoked (and they shouldn't be).\n   * Subscribers removed during this invocation will still be invoked (and they also shouldn't be,\n   * however this is accounted for via $isBound and similar flags on the subscriber objects)\n   */\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleChange(newValue, previousValue, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleChange(newValue, previousValue, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleChange(newValue, previousValue, flags);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleChange(newValue, previousValue, flags);\n      }\n    }\n  }\n}\n\nfunction callCollectionSubscribers(this: ISubscriberCollection<MutationKind.collection> & Required<IBatchedSubscriberCollection<MutationKind.collection>>, origin: string, args: IArguments | null, flags: LifecycleFlags): void {\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleChange(origin, args, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleChange(origin, args, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleChange(origin, args, flags);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleChange(origin, args, flags);\n      }\n    }\n  }\n  this.lifecycle.enqueueFlush(this);\n}\n\nfunction hasSubscribers<T extends MutationKind>(this: ISubscriberCollection<T>): boolean {\n  return this._subscriberFlags !== SubscriberFlags.None;\n}\n\nfunction hasSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: IPropertySubscriber): boolean {\n  // Flags here is just a perf tweak\n  // Compared to not using flags, it's a moderate speed-up when this collection does not have the subscriber;\n  // and minor slow-down when it does, and the former is more common than the latter.\n  const subscriberFlags = this._subscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._subscriber0 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._subscriber1 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._subscriber2 === subscriber) {\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    // no need to check length; if the flag is set, there's always at least one\n    const subscribers = this._subscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function batchedSubscriberCollection(): ClassDecorator {\n  return function(target: Function): void {\n    const proto = <IBatchedSubscriberCollection<MutationKind.collection>>target.prototype;\n\n    proto._batchedSubscriberFlags = SubscriberFlags.None;\n    proto._batchedSubscriber0 = null;\n    proto._batchedSubscriber1 = null;\n    proto._batchedSubscriber2 = null;\n    proto._batchedSubscribersRest = null;\n\n    proto.addBatchedSubscriber = addBatchedSubscriber;\n    proto.removeBatchedSubscriber = removeBatchedSubscriber;\n    proto.hasBatchedSubscriber = hasBatchedSubscriber;\n    proto.hasBatchedSubscribers = hasBatchedSubscribers;\n    proto.callBatchedSubscribers = callBatchedCollectionSubscribers;\n  };\n}\n\nfunction addBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: MutationKindToBatchedSubscriber<MutationKind.collection>): boolean {\n  if (this.hasBatchedSubscriber(subscriber)) {\n    return false;\n  }\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if (!(subscriberFlags & SubscriberFlags.Subscriber0)) {\n    this._batchedSubscriber0 = subscriber;\n    this._batchedSubscriberFlags |= SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber1)) {\n    this._batchedSubscriber1 = subscriber;\n    this._batchedSubscriberFlags |= SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber2)) {\n    this._batchedSubscriber2 = subscriber;\n    this._batchedSubscriberFlags |= SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.SubscribersRest)) {\n    this._batchedSubscribersRest = [subscriber];\n    this._batchedSubscriberFlags |= SubscriberFlags.SubscribersRest;\n    return true;\n  }\n  this._batchedSubscribersRest.push(subscriber);\n  return true;\n}\n\nfunction removeBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: IBatchedCollectionSubscriber): boolean {\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._batchedSubscriber0 === subscriber) {\n    this._batchedSubscriber0 = null;\n    this._batchedSubscriberFlags &= ~SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._batchedSubscriber1 === subscriber) {\n    this._batchedSubscriber1 = null;\n    this._batchedSubscriberFlags &= ~SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._batchedSubscriber2 === subscriber) {\n    this._batchedSubscriber2 = null;\n    this._batchedSubscriberFlags &= ~SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    const subscribers = this._batchedSubscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        subscribers.splice(i, 1);\n        if (ii === 1) {\n          this._batchedSubscriberFlags &= ~SubscriberFlags.SubscribersRest;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction callBatchedCollectionSubscribers(this: IBatchedSubscriberCollection<MutationKind.collection>, indexMap: IndexMap): void {\n  const subscriber0 = this._batchedSubscriber0;\n  const subscriber1 = this._batchedSubscriber1;\n  const subscriber2 = this._batchedSubscriber2;\n  let subscribers = this._batchedSubscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleBatchedChange(indexMap);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleBatchedChange(indexMap);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleBatchedChange(indexMap);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleBatchedChange(indexMap);\n      }\n    }\n  }\n}\n\nfunction hasBatchedSubscribers(this: IBatchedSubscriberCollection<MutationKind.collection>): boolean {\n  return this._batchedSubscriberFlags !== SubscriberFlags.None;\n}\n\nfunction hasBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: IBatchedCollectionSubscriber): boolean {\n  // Flags here is just a perf tweak\n  // Compared to not using flags, it's a moderate speed-up when this collection does not have the subscriber;\n  // and minor slow-down when it does, and the former is more common than the latter.\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._batchedSubscriber0 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._batchedSubscriber1 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._batchedSubscriber2 === subscriber) {\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    // no need to check length; if the flag is set, there's always at least one\n    const subscribers = this._batchedSubscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport { DOM } from '../dom';\nimport { ILifecycle } from '../lifecycle';\nimport { IBindingTargetAccessor, LifecycleFlags, MutationKind } from '../observation';\nimport { subscriberCollection } from './subscriber-collection';\n\ntype BindingTargetAccessor = IBindingTargetAccessor & {\n  lifecycle: ILifecycle;\n  currentFlags: LifecycleFlags;\n  oldValue?: IIndexable | Primitive;\n  defaultValue: Primitive | IIndexable;\n  $nextFlush?: BindingTargetAccessor;\n  flush(flags: LifecycleFlags): void;\n  setValueCore(value: Primitive | IIndexable, flags: LifecycleFlags): void;\n};\n\nfunction setValue(this: BindingTargetAccessor, newValue: Primitive | IIndexable, flags: LifecycleFlags): Promise<void> {\n  const currentValue = this.currentValue;\n  newValue = newValue === null || newValue === undefined ? this.defaultValue : newValue;\n  if (currentValue !== newValue) {\n    this.currentValue = newValue;\n    if ((flags & (LifecycleFlags.fromFlush | LifecycleFlags.fromBind)) &&\n      !((flags & LifecycleFlags.doNotUpdateDOM) && DOM.isNodeInstance(this.obj))) {\n      this.setValueCore(newValue, flags);\n    } else {\n      this.currentFlags = flags;\n      return this.lifecycle.enqueueFlush(this);\n    }\n  }\n  return Promise.resolve();\n}\n\nfunction flush(this: BindingTargetAccessor, flags: LifecycleFlags): void {\n  if (flags & LifecycleFlags.doNotUpdateDOM) {\n    if (DOM.isNodeInstance(this.obj)) {\n      // re-queue the change so it will still propagate on flush when it's attached again\n      this.lifecycle.enqueueFlush(this);\n      return;\n    }\n  }\n  const currentValue = this.currentValue;\n  // we're doing this check because a value could be set multiple times before a flush, and the final value could be the same as the original value\n  // in which case the target doesn't need to be updated\n  if (this.oldValue !== currentValue) {\n    this.setValueCore(currentValue, this.currentFlags | flags | LifecycleFlags.updateTargetInstance);\n    this.oldValue = this.currentValue;\n  }\n}\n\nfunction dispose(this: BindingTargetAccessor): void {\n  this.currentValue = null;\n  this.oldValue = null;\n  this.defaultValue = null;\n\n  this.obj = null;\n  this.propertyKey = '';\n}\n\nexport function targetObserver(defaultValue: Primitive | IIndexable = null): ClassDecorator {\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.instance)(target);\n    const proto = <BindingTargetAccessor>target.prototype;\n\n    proto.$nextFlush = null;\n\n    proto.currentValue = defaultValue;\n    proto.oldValue = defaultValue;\n    proto.defaultValue = defaultValue;\n\n    proto.obj = null;\n    proto.propertyKey = '';\n\n    proto.setValue = proto.setValue || setValue;\n    proto.flush = proto.flush || flush;\n    proto.dispose = proto.dispose || dispose;\n  };\n}\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport { DOM, IHTMLElement, INode } from '../dom';\nimport { ILifecycle } from '../lifecycle';\nimport { IBindingTargetAccessor } from '../observation';\nimport { targetObserver } from './target-observer';\n\n// tslint:disable-next-line:no-http-string\nconst xlinkAttributeNS = 'http://www.w3.org/1999/xlink';\n\nexport interface XLinkAttributeAccessor extends IBindingTargetAccessor<IHTMLElement, string, string> {}\n\n@targetObserver('')\nexport class XLinkAttributeAccessor implements XLinkAttributeAccessor {\n  public currentValue: string;\n  public oldValue: string;\n  public defaultValue: string;\n\n  // xlink namespaced attributes require getAttributeNS/setAttributeNS\n  // (even though the NS version doesn't work for other namespaces\n  // in html5 documents)\n\n  // Using very HTML-specific code here since this isn't likely to get\n  // called unless operating against a real HTML element.\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: IHTMLElement,\n    public propertyKey: string,\n    public attributeName: string) {\n\n    this.oldValue = this.currentValue = this.getValue();\n  }\n\n  public getValue(): string {\n    return this.obj.getAttributeNS(xlinkAttributeNS, this.attributeName);\n  }\n\n  public setValueCore(newValue: string): void {\n    this.obj.setAttributeNS(xlinkAttributeNS, this.attributeName, newValue);\n  }\n}\n\nXLinkAttributeAccessor.prototype.attributeName = '';\n\nexport interface DataAttributeAccessor extends IBindingTargetAccessor<INode, string, string> {}\n\n@targetObserver()\nexport class DataAttributeAccessor implements DataAttributeAccessor {\n  public currentValue: string;\n  public oldValue: string;\n  public defaultValue: string;\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: INode,\n    public propertyKey: string) {\n\n    this.oldValue = this.currentValue = this.getValue();\n  }\n\n  public getValue(): string {\n    return DOM.getAttribute(this.obj, this.propertyKey);\n  }\n\n  public setValueCore(newValue: string): void {\n    if (newValue === null) {\n      DOM.removeAttribute(this.obj, this.propertyKey);\n    } else {\n      DOM.setAttribute(this.obj, this.propertyKey, newValue);\n    }\n  }\n}\n\nexport interface StyleAttributeAccessor extends IBindingTargetAccessor<IHTMLElement, 'style', string | IIndexable> {}\n\n@targetObserver()\nexport class StyleAttributeAccessor implements StyleAttributeAccessor {\n  public currentValue: string | IIndexable;\n  public oldValue: string | IIndexable;\n  public defaultValue: string | IIndexable;\n\n  public propertyKey: 'style';\n\n  public styles: IIndexable;\n  public version: number;\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: IHTMLElement) {\n\n    this.oldValue = this.currentValue = obj.style.cssText;\n  }\n\n  public getValue(): string {\n    return this.obj.style.cssText;\n  }\n\n  // tslint:disable-next-line:function-name\n  public _setProperty(style: string, value: string): void {\n    let priority = '';\n\n    if (value !== null && value !== undefined && typeof value.indexOf === 'function' && value.indexOf('!important') !== -1) {\n      priority = 'important';\n      value = value.replace('!important', '');\n    }\n\n    this.obj.style.setProperty(style, value, priority);\n  }\n\n  public setValueCore(newValue: string | IIndexable): void {\n    const styles = this.styles || {};\n    let style;\n    let version = this.version;\n\n    if (newValue !== null) {\n      if (newValue instanceof Object) {\n        let value;\n        for (style in (<Object>newValue)) {\n          if (newValue.hasOwnProperty(style)) {\n            value = newValue[style];\n            style = style.replace(/([A-Z])/g, m => `-${m.toLowerCase()}`);\n            styles[style] = version;\n            this._setProperty(style, value);\n          }\n        }\n      } else if ((<string>newValue).length) {\n        const rx = /\\s*([\\w\\-]+)\\s*:\\s*((?:(?:[\\w\\-]+\\(\\s*(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[\\w\\-]+\\(\\s*(?:^\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^\\)]*)\\),?|[^\\)]*)\\),?|\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^;]*),?\\s*)+);?/g;\n        let pair;\n        while ((pair = rx.exec(newValue)) !== null) {\n          style = pair[1];\n          if (!style) { continue; }\n\n          styles[style] = version;\n          this._setProperty(style, pair[2]);\n        }\n      }\n    }\n\n    this.styles = styles;\n    this.version += 1;\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (style in styles) {\n      if (!styles.hasOwnProperty(style) || styles[style] !== version) {\n        continue;\n      }\n      this.obj.style.removeProperty(style);\n    }\n  }\n}\n\nStyleAttributeAccessor.prototype.styles = null;\nStyleAttributeAccessor.prototype.version = 0;\nStyleAttributeAccessor.prototype.propertyKey = 'style';\n\nexport interface ClassAttributeAccessor extends IBindingTargetAccessor<INode, string, string> {}\n\n@targetObserver('')\nexport class ClassAttributeAccessor implements ClassAttributeAccessor {\n  public currentValue: string;\n  public oldValue: string;\n  public defaultValue: string;\n\n  public doNotCache: true;\n  public version: number;\n  public nameIndex: IIndexable;\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: INode) { }\n\n  public getValue(): string {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: string): void {\n    const nameIndex = this.nameIndex || {};\n    let version = this.version;\n    let names;\n    let name;\n\n    // Add the classes, tracking the version at which they were added.\n    if (newValue.length) {\n      const node = this.obj;\n      names = newValue.split(/\\s+/);\n      for (let i = 0, length = names.length; i < length; i++) {\n        name = names[i];\n        if (!name.length) {\n          continue;\n        }\n        nameIndex[name] = version;\n        DOM.addClass(node, name);\n      }\n    }\n\n    // Update state variables.\n    this.nameIndex = nameIndex;\n    this.version += 1;\n\n    // First call to setValue?  We're done.\n    if (version === 0) {\n      return;\n    }\n\n    // Remove classes from previous version.\n    version -= 1;\n    for (name in nameIndex) {\n      if (!nameIndex.hasOwnProperty(name) || nameIndex[name] !== version) {\n        continue;\n      }\n\n      // TODO: this has the side-effect that classes already present which are added again,\n      // will be removed if they're not present in the next update.\n      // Better would be do have some configurability for this behavior, allowing the user to\n      // decide whether initial classes always need to be kept, always removed, or something in between\n      DOM.removeClass(this.obj, name);\n    }\n  }\n}\n\nClassAttributeAccessor.prototype.doNotCache = true;\nClassAttributeAccessor.prototype.version = 0;\nClassAttributeAccessor.prototype.nameIndex = null;\n\nexport interface ElementPropertyAccessor extends IBindingTargetAccessor<IIndexable, string, Primitive | IIndexable> {}\n\n@targetObserver('')\nexport class ElementPropertyAccessor implements ElementPropertyAccessor {\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: IIndexable,\n    public propertyKey: string) { }\n\n  public getValue(): Primitive | IIndexable {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(value: Primitive | IIndexable): void {\n    this.obj[this.propertyKey] = value;\n  }\n}\n\nexport interface PropertyAccessor extends IBindingTargetAccessor<IIndexable, string, Primitive | IIndexable> {}\n\nexport class PropertyAccessor implements PropertyAccessor {\n  constructor(public obj: IIndexable, public propertyKey: string) { }\n\n  public getValue(): Primitive | IIndexable {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(value: Primitive | IIndexable): void {\n    this.obj[this.propertyKey] = value;\n  }\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { ILifecycle } from '../../lifecycle';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { DataAttributeAccessor } from '../target-accessors';\n\n@bindingBehavior('attr')\nexport class AttrBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: Binding): void {\n    binding.targetObserver = new DataAttributeAccessor(binding.locator.get(ILifecycle), binding.target, binding.targetProperty);\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: Binding): void {\n    return;\n  }\n}\n","/*\n* Note: the oneTime binding now has a non-zero value for 2 reasons:\n*  - plays nicer with bitwise operations (more consistent code, more explicit settings)\n*  - allows for potentially having something like BindingMode.oneTime | BindingMode.fromView, where an initial value is set once to the view but updates from the view also propagate back to the view model\n*\n* Furthermore, the \"default\" mode would be for simple \".bind\" expressions to make it explicit for our logic that the default is being used.\n* This essentially adds extra information which binding could use to do smarter things and allows bindingBehaviors that add a mode instead of simply overwriting it\n*/\nexport enum BindingMode {\n  oneTime  = 0b0001,\n  toView   = 0b0010,\n  fromView = 0b0100,\n  twoWay   = 0b0110,\n  default  = 0b1000\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { BindingMode } from '../binding-mode';\n\nconst { oneTime, toView, fromView, twoWay } = BindingMode;\n\nexport type WithMode = { mode: BindingMode; originalMode?: BindingMode };\n\nexport abstract class BindingModeBehavior {\n  constructor(private mode: BindingMode) {}\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: Binding & WithMode): void {\n    binding.originalMode = binding.mode;\n    binding.mode = this.mode;\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: Binding & WithMode): void {\n    binding.mode = binding.originalMode;\n    binding.originalMode = null;\n  }\n}\n\n@bindingBehavior('oneTime')\nexport class OneTimeBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(oneTime);\n  }\n}\n\n@bindingBehavior('toView')\nexport class ToViewBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(toView);\n  }\n}\n\n@bindingBehavior('fromView')\nexport class FromViewBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(fromView);\n  }\n}\n\n@bindingBehavior('twoWay')\nexport class TwoWayBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(twoWay);\n  }\n}\n","import { Reporter } from '@aurelia/kernel';\nimport { IPropertySubscriber, LifecycleFlags, MutationKind, PropertyObserver } from '../observation';\nimport { subscriberCollection } from './subscriber-collection';\n\nconst defineProperty = Reflect.defineProperty;\n// note: we're reusing the same object for setting all descriptors, just changing some properties as needed\n//   this works, because the properties are copied by defineProperty (so changing them afterwards doesn't affect existing descriptors)\n// see also: https://tc39.github.io/ecma262/#sec-topropertydescriptor\nconst observedPropertyDescriptor: PropertyDescriptor = {\n  get: undefined,\n  set: undefined,\n  enumerable: true,\n  configurable: true\n};\n\nfunction subscribe(this: PropertyObserver, subscriber: IPropertySubscriber): void {\n  if (this.observing === false) {\n    this.observing = true;\n    const { obj, propertyKey } = this;\n    this.currentValue = obj[propertyKey];\n    observedPropertyDescriptor.get = () => this.getValue();\n    observedPropertyDescriptor.set = value => { this.setValue(value, LifecycleFlags.updateTargetInstance); };\n    if (!defineProperty(obj, propertyKey, observedPropertyDescriptor)) {\n      Reporter.write(1, propertyKey, obj);\n    }\n  }\n  this.addSubscriber(subscriber);\n}\n\nfunction dispose(this: PropertyObserver): void {\n  delete this.obj[this.propertyKey];\n  this.obj = null;\n  this.propertyKey = null;\n  this.currentValue = null;\n}\n\nexport function propertyObserver(): ClassDecorator {\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.instance)(target);\n    const proto = <PropertyObserver>target.prototype;\n\n    proto.observing = false;\n    proto.obj = null;\n    proto.propertyKey = null;\n    // Note: this will generate some \"false positive\" changes when setting a target undefined from a source undefined,\n    // but those aren't harmful because the changes won't be propagated through to subscribers during $bind anyway.\n    // It will, however, solve some \"false negative\" changes when the source value is undefined but the target value is not;\n    // in such cases, this.currentValue in the observer being undefined will block the change from propagating to the target.\n    // This is likely not working correctly in vCurrent either.\n    proto.currentValue = Symbol();\n\n    proto.subscribe = proto.subscribe || subscribe;\n    proto.unsubscribe = proto.unsubscribe || proto.removeSubscriber;\n\n    proto.dispose = proto.dispose || dispose;\n  };\n}\n","import { IIndexable, PLATFORM, Primitive } from '@aurelia/kernel';\nimport { IAccessor, IPropertyObserver, IPropertySubscriber, ISubscribable, LifecycleFlags, MutationKind } from '../observation';\nimport { propertyObserver } from './property-observer';\n\nconst noop = PLATFORM.noop;\n\n// note: string.length is the only property of any primitive that is not a function,\n// so we can hardwire it to that and simply return undefined for anything else\n// note#2: a modified primitive constructor prototype would not work (and really, it shouldn't..)\nexport class PrimitiveObserver implements IAccessor, ISubscribable<MutationKind.instance> {\n  public getValue: () => undefined | number;\n  // removed the error reporter here because technically any primitive property that can get, can also set,\n  // but since that never serves any purpose (e.g. setting string.length doesn't throw but doesn't change the length either),\n  // we could best just leave this as a no-op and so don't need to store the propertyName\n  public setValue: () => void;\n  public subscribe: () => void;\n  public unsubscribe: () => void;\n  public dispose: () => void;\n\n  public doNotCache: boolean = true;\n  public obj: Primitive;\n\n  constructor(obj: Primitive, propertyKey: PropertyKey) {\n    // we don't need to store propertyName because only 'length' can return a useful value\n    if (propertyKey === 'length') {\n      // deliberately not checking for typeof string as users probably still want to know via an error that their string is undefined\n      this.obj = obj;\n      this.getValue = this.getStringLength;\n    } else {\n      this.getValue = this.returnUndefined;\n    }\n  }\n\n  private getStringLength(): number {\n    return (<string>this.obj).length;\n  }\n  private returnUndefined(): undefined {\n    return undefined;\n  }\n}\nPrimitiveObserver.prototype.setValue = noop;\nPrimitiveObserver.prototype.subscribe = noop;\nPrimitiveObserver.prototype.unsubscribe = noop;\nPrimitiveObserver.prototype.dispose = noop;\n\nexport interface SetterObserver extends IPropertyObserver<IIndexable, string> {}\n\n@propertyObserver()\nexport class SetterObserver implements SetterObserver {\n  public subscribe: (subscriber: IPropertySubscriber) => void;\n  public unsubscribe: (subscriber: IPropertySubscriber) => void;\n  public obj: IIndexable;\n  public propertyKey: string;\n\n  constructor(obj: IIndexable, propertyKey: string) {\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.currentValue;\n  }\n  public setValue(newValue: IIndexable | Primitive, flags: LifecycleFlags): void {\n    const currentValue = this.currentValue;\n    if (currentValue !== newValue) {\n      this.currentValue = newValue;\n      if (!(flags & LifecycleFlags.fromBind)) {\n        this.callSubscribers(newValue, currentValue, flags);\n      }\n      // If subscribe() has been called, the target property descriptor is replaced by these getter/setter methods,\n      // so calling obj[propertyKey] will actually return this.currentValue.\n      // However, if subscribe() was not yet called (indicated by !this.observing), the target descriptor\n      // is unmodified and we need to explicitly set the property value.\n      // This will happen in one-time, to-view and two-way bindings during $bind, meaning that the $bind will not actually update the target value.\n      // This wasn't visible in vCurrent due to connect-queue always doing a delayed update, so in many cases it didn't matter whether $bind updated the target or not.\n      if (!this.observing) {\n        this.obj[this.propertyKey] = newValue;\n      }\n    }\n  }\n}\n\nexport interface Observer extends IPropertyObserver<IIndexable, string> {}\n\n@propertyObserver()\nexport class Observer implements Observer {\n  public obj: IIndexable;\n  public propertyKey: string;\n  public currentValue: IIndexable | Primitive;\n\n  private callback: (newValue: IIndexable | Primitive, oldValue: IIndexable | Primitive) => IIndexable | Primitive;\n\n  constructor(\n    instance: object,\n    propertyName: string,\n    callbackName: string\n  ) {\n      this.obj = instance;\n      this.propertyKey = propertyName;\n      this.currentValue = instance[propertyName];\n      this.callback = callbackName in instance\n        ? instance[callbackName].bind(instance)\n        : noop;\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.currentValue;\n  }\n\n  public setValue(newValue: IIndexable | Primitive, flags: LifecycleFlags): void {\n    const currentValue = this.currentValue;\n\n    if (currentValue !== newValue) {\n      this.currentValue = newValue;\n\n      if (!(flags & LifecycleFlags.fromBind)) {\n        const coercedValue = this.callback(newValue, currentValue);\n\n        if (coercedValue !== undefined) {\n          this.currentValue = newValue = coercedValue;\n        }\n\n        this.callSubscribers(newValue, currentValue, flags);\n      }\n    }\n  }\n}\n","import { IIndexable, Reporter, StrictPrimitive } from '@aurelia/kernel';\nimport { IBindScope } from '../lifecycle';\nimport { IBindingContext, IOverrideContext, IScope, ObservedCollection, ObserversLookup, PropertyObserver } from '../observation';\nimport { SetterObserver } from './property-observation';\n\nconst enum RuntimeError {\n  UndefinedScope = 250, // trying to evaluate on something that's not a valid binding\n  NullScope = 251, // trying to evaluate on an unbound binding\n  NilOverrideContext = 252,\n  NilParentScope = 253\n}\n\n/*@internal*/\nexport class InternalObserversLookup {\n  public getOrCreate(obj: IBindingContext | IOverrideContext, key: string): PropertyObserver {\n    let observer = this[key];\n    if (observer === undefined) {\n      observer = this[key] = new SetterObserver(obj, key);\n    }\n    return observer;\n  }\n}\n\nexport class BindingContext implements IBindingContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  public readonly $synthetic: true = true;\n\n  public $observers: ObserversLookup<IOverrideContext>;\n\n  private constructor(keyOrObj?: string | IIndexable, value?: ObservedCollection | StrictPrimitive | IIndexable) {\n    if (keyOrObj !== undefined) {\n      if (value !== undefined) {\n        // if value is defined then it's just a property and a value to initialize with\n        // tslint:disable-next-line:no-any\n        this[<any>keyOrObj] = value;\n      } else {\n        // can either be some random object or another bindingContext to clone from\n        for (const prop in <IIndexable>keyOrObj) {\n          if (keyOrObj.hasOwnProperty(prop)) {\n            this[prop] = keyOrObj[prop];\n          }\n        }\n      }\n    }\n  }\n\n  public static create(obj?: IIndexable): BindingContext;\n  public static create(key: string, value: ObservedCollection | StrictPrimitive | IIndexable): BindingContext;\n  public static create(keyOrObj?: string | IIndexable, value?: ObservedCollection | StrictPrimitive | IIndexable): BindingContext {\n    return new BindingContext(keyOrObj, value);\n  }\n\n  // tslint:disable-next-line:no-reserved-keywords\n  public static get(scope: IScope, name: string, ancestor: number): IBindingContext | IOverrideContext | IBindScope {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope);\n    }\n    let overrideContext = scope.overrideContext;\n\n    if (ancestor > 0) {\n      // jump up the required number of ancestor contexts (eg $parent.$parent requires two jumps)\n      while (ancestor > 0) {\n        if (overrideContext.parentOverrideContext === null) {\n          return undefined;\n        }\n        ancestor--;\n        overrideContext = overrideContext.parentOverrideContext;\n      }\n\n      return name in overrideContext ? overrideContext : overrideContext.bindingContext;\n    }\n\n    // traverse the context and it's ancestors, searching for a context that has the name.\n    while (overrideContext && !(name in overrideContext) && !(overrideContext.bindingContext && name in overrideContext.bindingContext)) {\n      overrideContext = overrideContext.parentOverrideContext;\n    }\n\n    if (overrideContext) {\n      // we located a context with the property.  return it.\n      return name in overrideContext ? overrideContext : overrideContext.bindingContext;\n    }\n\n    // the name wasn't found.  return the root binding context.\n    return scope.bindingContext || scope.overrideContext;\n  }\n\n  public getObservers(): ObserversLookup<IOverrideContext> {\n    let observers = this.$observers;\n    if (observers === undefined) {\n      this.$observers = observers = new InternalObserversLookup() as ObserversLookup<this>;\n    }\n    return observers;\n  }\n}\n\nexport class Scope implements IScope {\n  private constructor(\n    public readonly bindingContext: IBindingContext | IBindScope,\n    public readonly overrideContext: IOverrideContext\n  ) { }\n\n  public static create(bc: IBindingContext | IBindScope, oc: IOverrideContext | null): Scope {\n    return new Scope(bc, oc === null || oc === undefined ? OverrideContext.create(bc, oc) : oc);\n  }\n\n  public static fromOverride(oc: IOverrideContext): Scope {\n    if (oc === null || oc === undefined) {\n      throw Reporter.error(RuntimeError.NilOverrideContext);\n    }\n    return new Scope(oc.bindingContext, oc);\n  }\n\n  public static fromParent(ps: IScope, bc: IBindingContext | IBindScope): Scope {\n    if (ps === null || ps === undefined) {\n      throw Reporter.error(RuntimeError.NilParentScope);\n    }\n    return new Scope(bc, OverrideContext.create(bc, ps.overrideContext));\n  }\n}\n\nexport class OverrideContext implements IOverrideContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  public readonly $synthetic: true = true;\n\n  private constructor(\n    public readonly bindingContext: IBindingContext | IBindScope,\n    public readonly parentOverrideContext: IOverrideContext | null\n  ) { }\n\n  public static create(bc: IBindingContext | IBindScope, poc: IOverrideContext | null): OverrideContext {\n    return new OverrideContext(bc, poc === undefined ? null : poc);\n  }\n\n  public getObservers(): ObserversLookup<IOverrideContext> {\n    let observers = this.$observers;\n    if (observers === undefined) {\n      this.$observers = observers = new InternalObserversLookup();\n    }\n    return observers as ObserversLookup<IOverrideContext>;\n  }\n}\n","import { DI, Immutable } from '@aurelia/kernel';\nimport { IPropertySubscriber, LifecycleFlags } from '../observation';\n\ntype Signal = string;\n\nexport interface ISignaler {\n  signals: Immutable<Record<string, Set<IPropertySubscriber>>>;\n  dispatchSignal(name: Signal, flags?: LifecycleFlags): void;\n  addSignalListener(name: Signal, listener: IPropertySubscriber): void;\n  removeSignalListener(name: Signal, listener: IPropertySubscriber): void;\n}\n\nexport const ISignaler = DI.createInterface<ISignaler>().withDefault(x => x.singleton(Signaler));\n\n/*@internal*/\nexport class Signaler implements ISignaler {\n  public signals: Record<string, Set<IPropertySubscriber>>;\n\n  constructor() {\n    this.signals = Object.create(null);\n  }\n\n  public dispatchSignal(name: Signal, flags?: LifecycleFlags): void {\n    const listeners = this.signals[name];\n    if (listeners === undefined) {\n      return;\n    }\n    for (const listener of listeners.keys()) {\n      listener.handleChange(undefined, undefined, flags | LifecycleFlags.updateTargetInstance);\n    }\n  }\n\n  public addSignalListener(name: Signal, listener: IPropertySubscriber): void {\n    const signals = this.signals;\n    const listeners = signals[name];\n    if (listeners === undefined) {\n      signals[name] = new Set([listener]);\n    } else {\n      listeners.add(listener);\n    }\n  }\n\n  public removeSignalListener(name: Signal, listener: IPropertySubscriber): void {\n    const listeners = this.signals[name];\n    if (listeners) {\n      listeners.delete(listener);\n    }\n  }\n}\n","import { Constructable, IContainer, Registration, Writable } from '@aurelia/kernel';\nimport { IResourceKind, IResourceType } from '../resource';\n\nexport interface IValueConverterSource {\n  name: string;\n}\n\nexport type IValueConverterType = IResourceType<IValueConverterSource>;\n\nexport function valueConverter(nameOrSource: string | IValueConverterSource): <T extends Constructable>(target: T) => T & IResourceType<IValueConverterSource> {\n  return function<T extends Constructable>(target: T): T & IResourceType<IValueConverterSource> {\n    return ValueConverterResource.define(nameOrSource, target);\n  };\n}\n\nexport const ValueConverterResource: IResourceKind<IValueConverterSource, IValueConverterType> = {\n  name: 'value-converter',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable & Partial<IValueConverterType>>(Type: T): Type is T & IValueConverterType {\n    return Type.kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | IValueConverterSource, ctor: T): T & IValueConverterType {\n    const Type = ctor as T & IValueConverterType;\n    const description = typeof nameOrSource === 'string'\n      ? { name: nameOrSource }\n      : nameOrSource;\n\n    (Type as Writable<IValueConverterType>).kind = ValueConverterResource;\n    (Type as Writable<IValueConverterType>).description = description;\n    Type.register = register;\n\n    return Type;\n  }\n};\n\nfunction register(this: IValueConverterType, container: IContainer): void {\n  container.register(\n    Registration.singleton(\n      ValueConverterResource.keyFrom(this.description.name),\n      this\n    )\n  );\n}\n","import { IIndexable, IServiceLocator, PLATFORM, Reporter, StrictPrimitive } from '@aurelia/kernel';\nimport { Collection, IScope, LifecycleFlags, ObservedCollection } from '../observation';\nimport { IBinding } from './binding';\nimport { BindingBehaviorResource } from './binding-behavior';\nimport { BindingContext } from './binding-context';\nimport { IConnectableBinding } from './connectable';\nimport { ISignaler } from './signaler';\nimport { ValueConverterResource } from './value-converter';\n\n/**\n * StrictAny is a somewhat strongly typed alternative to 'any', in an effort to try to get rid of all 'any''s\n * It's not even remotely foolproof however, and this can largely be attributed to the fact that TypeScript imposes\n * far more constraints on what arithmic is allowed than vanilla JS does.\n * We don't necessarily want to impose the same constraints on users (e.g. by performing auto conversions or throwing),\n * because even though that behavior would technically be \"better\", it could also be experienced as unpredictable.\n * We'd generally not want to ask more of users than to simply understand how vanilla JS works, and let them account for its quirks themselves.\n * This gives end users less framework-specific things to learn.\n * Consequently, it's impossible to achieve any kind of strict type checking in the AST and generally in the observers.\n * We're trying to achieve some middle ground by applying some explicit type casts where TypeScript would otherwise not allow compilation.\n */\nexport type StrictAny = StrictPrimitive | IIndexable | Function;\nexport type IsPrimary = AccessThis | AccessScope | ArrayLiteral | ObjectLiteral | PrimitiveLiteral | Template;\nexport type IsLiteral = ArrayLiteral | ObjectLiteral | PrimitiveLiteral | Template;\nexport type IsLeftHandSide = IsPrimary | CallFunction | CallMember | CallScope | AccessMember | AccessKeyed | TaggedTemplate;\nexport type IsUnary = IsLeftHandSide | Unary;\nexport type IsBinary = IsUnary | Binary;\nexport type IsConditional = IsBinary | Conditional;\nexport type IsAssign = IsConditional | Assign;\nexport type IsValueConverter = IsAssign | ValueConverter;\nexport type IsBindingBehavior = IsValueConverter | BindingBehavior;\nexport type IsAssignable = AccessScope | AccessKeyed | AccessMember | Assign;\nexport type IsExpression = IsBindingBehavior | Interpolation;\nexport type IsExpressionOrStatement = IsExpression | ForOfStatement | BindingIdentifierOrPattern | HtmlLiteral;\nexport type Connects = AccessScope | ArrayLiteral | ObjectLiteral | Template | Unary | CallScope | AccessMember | AccessKeyed | TaggedTemplate | Binary | Conditional | ValueConverter | BindingBehavior | ForOfStatement;\nexport type Observes = AccessScope | AccessKeyed | AccessMember;\nexport type CallsFunction = CallFunction | CallScope | CallMember | TaggedTemplate;\nexport type IsResource = ValueConverter | BindingBehavior;\nexport type HasBind = BindingBehavior;\nexport type HasUnbind = ValueConverter | BindingBehavior;\nexport type HasAncestor = AccessThis | AccessScope | CallScope;\n\n// tslint:disable-next-line:no-any\nexport interface IVisitor<T = any> {\n  visitAccessKeyed(expr: AccessKeyed): T;\n  visitAccessMember(expr: AccessMember): T;\n  visitAccessScope(expr: AccessScope): T;\n  visitAccessThis(expr: AccessThis): T;\n  visitArrayBindingPattern(expr: ArrayBindingPattern): T;\n  visitArrayLiteral(expr: ArrayLiteral): T;\n  visitAssign(expr: Assign): T;\n  visitBinary(expr: Binary): T;\n  visitBindingBehavior(expr: BindingBehavior): T;\n  visitBindingIdentifier(expr: BindingIdentifier): T;\n  visitCallFunction(expr: CallFunction): T;\n  visitCallMember(expr: CallMember): T;\n  visitCallScope(expr: CallScope): T;\n  visitConditional(expr: Conditional): T;\n  visitForOfStatement(expr: ForOfStatement): T;\n  visitHtmlLiteral(expr: HtmlLiteral): T;\n  visitInterpolation(expr: Interpolation): T;\n  visitObjectBindingPattern(expr: ObjectBindingPattern): T;\n  visitObjectLiteral(expr: ObjectLiteral): T;\n  visitPrimitiveLiteral(expr: PrimitiveLiteral): T;\n  visitTaggedTemplate(expr: TaggedTemplate): T;\n  visitTemplate(expr: Template): T;\n  visitUnary(expr: Unary): T;\n  visitValueConverter(expr: ValueConverter): T;\n}\n\nexport interface IExpression {\n  readonly $kind: ExpressionKind;\n  evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator | null): StrictAny;\n  connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void;\n  accept<T>(visitor: IVisitor<T>): T;\n  assign?(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator | null, value: StrictAny): StrictAny;\n  bind?(flags: LifecycleFlags, scope: IScope, binding: IBinding): void;\n  unbind?(flags: LifecycleFlags, scope: IScope, binding: IBinding): void;\n}\n\nexport const enum ExpressionKind {\n  Connects             = 0b000000000001_00000, // The expression's connect() function calls observeProperty and/or calls connect() on another expression that it wraps (all expressions except for AccessThis, PrimitiveLiteral, CallMember/Function and Assign)\n  Observes             = 0b000000000010_00000, // The expression's connect() function calls observeProperty (only AccessScope, AccessMember and AccessKeyed do this)\n  CallsFunction        = 0b000000000100_00000, // Calls a function (CallFunction, CallScope, CallMember, TaggedTemplate) -> needs a valid function object returning from its lefthandside's evaluate()\n  HasAncestor          = 0b000000001000_00000, // Has an \"ancestor\" property, meaning the expression could climb up the context (only AccessThis, AccessScope and CallScope)\n  IsPrimary            = 0b000000010000_00000, // Is a primary expression according to ES parsing rules\n  IsLeftHandSide       = 0b000000100000_00000, // Is a left-hand side expression according to ES parsing rules, includes IsPrimary\n  HasBind              = 0b000001000000_00000, // Has a bind() method (currently only BindingBehavior)\n  HasUnbind            = 0b000010000000_00000, // Has an unbind() method (currentl only BindingBehavior and ValueConverter)\n  IsAssignable         = 0b000100000000_00000, // Is an assignable expression according to ES parsing rules (only AccessScope, AccessMember, AccessKeyed ans Assign)\n  IsLiteral            = 0b001000000000_00000, // Is an Aurelia resource (ValueConverter or BindingBehavior)\n  IsResource           = 0b010000000000_00000, // Is literal expression (Primitive, Array, Object or Template)\n  IsForDeclaration     = 0b100000000000_00000, // Is a For declaration (for..of, for..in -> currently only ForOfStatement)\n  Type                 = 0b000000000000_11111, // Type mask to uniquely identify each AST class (concrete types start below)\n  // ---------------------------------------------------------------------------------------------------------------------------\n  AccessThis           = 0b000000111000_00001, //               HasAncestor\n  AccessScope          = 0b000100111011_00010, // IsAssignable  HasAncestor       Observes  Connects\n  ArrayLiteral         = 0b001000110001_00011, //                                           Connects\n  ObjectLiteral        = 0b001000110001_00100, //                                           Connects\n  PrimitiveLiteral     = 0b001000110000_00101, //\n  Template             = 0b001000110001_00110, //                                           Connects\n  Unary                = 0b000000000001_00111, //                                           Connects\n  CallScope            = 0b000000101101_01000, //               HasAncestor  CallsFunction  Connects\n  CallMember           = 0b000000100100_01001, //                            CallsFunction\n  CallFunction         = 0b000000100100_01010, //                            CallsFunction\n  AccessMember         = 0b000100100011_01011, // IsAssignable                    Observes  Connects\n  AccessKeyed          = 0b000100100011_01100, // IsAssignable                    Observes  Connects\n  TaggedTemplate       = 0b000000100101_01101, //                            CallsFunction  Connects\n  Binary               = 0b000000000001_01110, //                                           Connects\n  Conditional          = 0b000000000001_11111, //                                           Connects\n  Assign               = 0b000100000000_10000, // IsAssignable\n  ValueConverter       = 0b010010000001_10001, //                                           Connects\n  BindingBehavior      = 0b010011000001_10010, //                                           Connects\n  HtmlLiteral          = 0b000000000001_10011, //                                           Connects\n  ArrayBindingPattern  = 0b100000000000_10100, //\n  ObjectBindingPattern = 0b100000000000_10101, //\n  BindingIdentifier    = 0b100000000000_10110, //\n  ForOfStatement       = 0b000000000001_10111, //                                           Connects\n  Interpolation        = 0b000000000000_11000  //\n}\n\nexport function connects(expr: IsExpressionOrStatement): expr is Connects {\n  return (expr.$kind & ExpressionKind.Connects) === ExpressionKind.Connects;\n}\nexport function observes(expr: IsExpressionOrStatement): expr is Observes {\n  return (expr.$kind & ExpressionKind.Observes) === ExpressionKind.Observes;\n}\nexport function callsFunction(expr: IsExpressionOrStatement): expr is CallsFunction {\n  return (expr.$kind & ExpressionKind.CallsFunction) === ExpressionKind.CallsFunction;\n}\nexport function hasAncestor(expr: IsExpressionOrStatement): expr is HasAncestor {\n  return (expr.$kind & ExpressionKind.HasAncestor) === ExpressionKind.HasAncestor;\n}\nexport function isAssignable(expr: IsExpressionOrStatement): expr is IsAssignable {\n  return (expr.$kind & ExpressionKind.IsAssignable) === ExpressionKind.IsAssignable;\n}\nexport function isLeftHandSide(expr: IsExpressionOrStatement): expr is IsLeftHandSide {\n  return (expr.$kind & ExpressionKind.IsLeftHandSide) === ExpressionKind.IsLeftHandSide;\n}\nexport function isPrimary(expr: IsExpressionOrStatement): expr is IsPrimary {\n  return (expr.$kind & ExpressionKind.IsPrimary) === ExpressionKind.IsPrimary;\n}\nexport function isResource(expr: IsExpressionOrStatement): expr is IsResource {\n  return (expr.$kind & ExpressionKind.IsResource) === ExpressionKind.IsResource;\n}\nexport function hasBind(expr: IsExpressionOrStatement): expr is HasBind {\n  return (expr.$kind & ExpressionKind.HasBind) === ExpressionKind.HasBind;\n}\nexport function hasUnbind(expr: IsExpressionOrStatement): expr is HasUnbind {\n  return (expr.$kind & ExpressionKind.HasUnbind) === ExpressionKind.HasUnbind;\n}\nexport function isLiteral(expr: IsExpressionOrStatement): expr is IsLiteral {\n  return (expr.$kind & ExpressionKind.IsLiteral) === ExpressionKind.IsLiteral;\n}\nexport function arePureLiterals(expressions: ReadonlyArray<IsExpressionOrStatement>): expressions is IsLiteral[] {\n  if (expressions === undefined || expressions.length === 0) {\n    return true;\n  }\n  for (let i = 0; i < expressions.length; ++i) {\n    if (!isPureLiteral(expressions[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isPureLiteral(expr: IsExpressionOrStatement): expr is IsLiteral {\n  if (isLiteral(expr)) {\n    switch (expr.$kind) {\n      case ExpressionKind.ArrayLiteral:\n        return arePureLiterals(expr.elements);\n      case ExpressionKind.ObjectLiteral:\n        return arePureLiterals(expr.values);\n      case ExpressionKind.Template:\n        return arePureLiterals(expr.expressions);\n      case ExpressionKind.PrimitiveLiteral:\n        return true;\n    }\n  }\n  return false;\n}\n\nconst enum RuntimeError {\n  NoLocator = 202,\n  NoBehaviorFound = 203,\n  BehaviorAlreadyApplied = 204,\n  NoConverterFound = 205,\n  NoBinding = 206,\n  NotAFunction = 207,\n  UnknownOperator = 208,\n  UndefinedScope = 250, // trying to evaluate on something that's not a valid binding\n  NullScope = 251, // trying to evaluate on an unbound binding\n}\n\nexport class BindingBehavior implements IExpression {\n  public $kind: ExpressionKind.BindingBehavior;\n  public readonly behaviorKey: string;\n  private readonly expressionHasBind: boolean;\n  private readonly expressionHasUnbind: boolean;\n  constructor(\n    public readonly expression: IsBindingBehavior,\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>) {\n    this.behaviorKey = BindingBehaviorResource.keyFrom(this.name);\n    this.expressionHasBind = hasBind(expression);\n    this.expressionHasUnbind = hasUnbind(expression);\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.expression.evaluate(flags, scope, locator);\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    return this.expression.assign(flags, scope, locator, value);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.expression.connect(flags, scope, binding);\n  }\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    if (!binding) {\n      throw Reporter.error(RuntimeError.NoBinding, this);\n    }\n    const locator = binding.locator;\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    if (this.expressionHasBind) {\n      (this.expression as BindingBehavior).bind(flags, scope, binding);\n    }\n    const behaviorKey = this.behaviorKey;\n    const behavior = locator.get<BindingBehavior>(behaviorKey);\n    if (!behavior) {\n      throw Reporter.error(RuntimeError.NoBehaviorFound, this);\n    }\n    if (binding[behaviorKey] !== undefined && binding[behaviorKey] !== null) {\n      throw Reporter.error(RuntimeError.BehaviorAlreadyApplied, this);\n    }\n    binding[behaviorKey] = behavior;\n    behavior.bind.apply(behavior, (<StrictAny[]>[flags, scope, binding]).concat(evalList(flags, scope, locator, this.args)));\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const behaviorKey = this.behaviorKey;\n    binding[behaviorKey].unbind(flags, scope, binding);\n    binding[behaviorKey] = null;\n    if (this.expressionHasUnbind) {\n      (this.expression as BindingBehavior | ValueConverter).unbind(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBindingBehavior(this);\n  }\n}\n\nexport class ValueConverter implements IExpression {\n  public $kind: ExpressionKind.ValueConverter;\n  public readonly converterKey: string;\n  constructor(\n    public readonly expression: IsValueConverter,\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>) {\n    this.converterKey = ValueConverterResource.keyFrom(this.name);\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    const converter = locator.get<ValueConverter & { toView(...args: (StrictAny)[]): StrictAny }>(this.converterKey);\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    if ('toView' in converter) {\n      const args = this.args;\n      const len = args.length;\n      const result = Array(len + 1);\n      result[0] = this.expression.evaluate(flags, scope, locator);\n      for (let i = 0; i < len; ++i) {\n        result[i + 1] = args[i].evaluate(flags, scope, locator);\n      }\n      return converter.toView.apply(converter, result);\n    }\n    return this.expression.evaluate(flags, scope, locator);\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    const converter = locator.get<ValueConverter & { fromView(...args: (StrictAny)[]): StrictAny }>(this.converterKey);\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    if ('fromView' in converter) {\n      value = converter.fromView.apply(converter, [value].concat(evalList(flags, scope, locator, this.args)));\n    }\n    return this.expression.assign(flags, scope, locator, value);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    if (!binding) {\n      throw Reporter.error(RuntimeError.NoBinding, this);\n    }\n    const locator = binding.locator;\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    this.expression.connect(flags, scope, binding);\n    const args = this.args;\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      args[i].connect(flags, scope, binding);\n    }\n    const converter = locator.get(this.converterKey) as { signals?: string[] };\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    const signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    const signaler = locator.get(ISignaler);\n    for (let i = 0, ii = signals.length; i < ii; ++i) {\n      signaler.addSignalListener(signals[i], binding);\n    }\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const locator = binding.locator;\n    const converter = locator.get(this.converterKey) as { signals?: string[] };\n    const signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    const signaler = locator.get(ISignaler);\n    for (let i = 0, ii = signals.length; i < ii; ++i) {\n      signaler.removeSignalListener(signals[i], binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitValueConverter(this);\n  }\n}\n\nexport class Assign implements IExpression {\n  public $kind: ExpressionKind.Assign;\n  constructor(\n    public readonly target: IsAssignable,\n    public readonly value: IsAssign) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.target.assign(flags, scope, locator, this.value.evaluate(flags, scope, locator));\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    this.value.assign(flags, scope, locator, value);\n    return this.target.assign(flags, scope, locator, value);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAssign(this);\n  }\n}\n\nexport class Conditional implements IExpression {\n  public $kind: ExpressionKind.Conditional;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly condition: IsBinary,\n    public readonly yes: IsAssign,\n    public readonly no: IsAssign) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return (!!this.condition.evaluate(flags, scope, locator))\n      ? this.yes.evaluate(flags, scope, locator)\n      : this.no.evaluate(flags, scope, locator);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const condition = this.condition;\n    if (condition.evaluate(flags, scope, null)) {\n      this.condition.connect(flags, scope, binding);\n      this.yes.connect(flags, scope, binding);\n    } else {\n      this.condition.connect(flags, scope, binding);\n      this.no.connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitConditional(this);\n  }\n}\n\nexport class AccessThis implements IExpression {\n  public static readonly $this: AccessThis = new AccessThis(0);\n  public static readonly $parent: AccessThis = new AccessThis(1);\n  public $kind: ExpressionKind.AccessThis;\n  public assign: IExpression['assign'];\n  public connect: IExpression['connect'];\n  constructor(\n    public readonly ancestor: number = 0) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    let oc = scope.overrideContext;\n    let i = this.ancestor;\n    while (i-- && oc) {\n      oc = oc.parentOverrideContext;\n    }\n    return i < 1 && oc ? oc.bindingContext : undefined;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessThis(this);\n  }\n}\n\nexport class AccessScope implements IExpression {\n  public $kind: ExpressionKind.AccessScope;\n  constructor(\n    public readonly name: string,\n    public readonly ancestor: number = 0) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const name = this.name;\n    return BindingContext.get(scope, name, this.ancestor)[name];\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    const name = this.name;\n    const context = BindingContext.get(scope, name, this.ancestor);\n    return context ? (context[name] = value) : undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const name = this.name;\n    const context = BindingContext.get(scope, name, this.ancestor);\n    binding.observeProperty(context, name);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessScope(this);\n  }\n}\n\nexport class AccessMember implements IExpression {\n  public $kind: ExpressionKind.AccessMember;\n  constructor(\n    public readonly object: IsLeftHandSide,\n    public readonly name: string) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    return instance === null || instance === undefined ? instance : instance[this.name];\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    let instance = this.object.evaluate(flags, scope, locator);\n    if (instance === null || typeof instance !== 'object') {\n      instance = {};\n      this.object.assign(flags, scope, locator, instance);\n    }\n    instance[this.name] = value;\n    return value;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (obj) {\n      binding.observeProperty(obj, this.name);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessMember(this);\n  }\n}\n\nexport class AccessKeyed implements IExpression {\n  public $kind: ExpressionKind.AccessKeyed;\n  constructor(\n    public readonly object: IsLeftHandSide,\n    public readonly key: IsAssign) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    if (instance === null || instance === undefined) {\n      return undefined;\n    }\n    const key = this.key.evaluate(flags, scope, locator);\n    // note: getKeyed and setKeyed are removed because they are identical to the default spec behavior\n    // and the runtime does this this faster\n    // tslint:disable-next-line:no-any\n    return instance[<any>key];\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    const key = this.key.evaluate(flags, scope, locator);\n    // tslint:disable-next-line:no-any\n    return instance[<any>key] = value;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (typeof obj === 'object' && obj !== null) {\n      this.key.connect(flags, scope, binding);\n      const key = this.key.evaluate(flags, scope, null);\n      // observe the property represented by the key as long as it's not an array indexer\n      // (note: string indexers behave the same way as numeric indexers as long as they represent numbers)\n      if (!(Array.isArray(obj) && isNumeric(key))) {\n        binding.observeProperty(obj, key);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessKeyed(this);\n  }\n}\n\nexport class CallScope implements IExpression {\n  public $kind: ExpressionKind.CallScope;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>,\n    public readonly ancestor: number = 0) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator | null): StrictAny {\n    const args = evalList(flags, scope, locator, this.args);\n    const context = BindingContext.get(scope, this.name, this.ancestor);\n    const func = getFunction(flags, context, this.name);\n    if (func) {\n      return func.apply(context, args);\n    }\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const args = this.args;\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      args[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallScope(this);\n  }\n}\n\nexport class CallMember implements IExpression {\n  public $kind: ExpressionKind.CallMember;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly object: IsLeftHandSide,\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    const args = evalList(flags, scope, locator, this.args);\n    const func = getFunction(flags, instance, this.name);\n    if (func) {\n      return func.apply(instance, args);\n    }\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (getFunction(flags & ~LifecycleFlags.mustEvaluate, obj, this.name)) {\n      const args = this.args;\n      for (let i = 0, ii = args.length; i < ii; ++i) {\n        args[i].connect(flags, scope, binding);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallMember(this);\n  }\n}\n\nexport class CallFunction implements IExpression {\n  public $kind: ExpressionKind.CallFunction;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly func: IsLeftHandSide,\n    public readonly args: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const func = this.func.evaluate(flags, scope, locator) as StrictAny; // not sure why this cast is needed..\n    if (typeof func === 'function') {\n      return func.apply(null, evalList(flags, scope, locator, this.args));\n    }\n    if (!(flags & LifecycleFlags.mustEvaluate) && (func === null || func === undefined)) {\n      return undefined;\n    }\n    throw Reporter.error(RuntimeError.NotAFunction, this);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const func = this.func.evaluate(flags, scope, null);\n    this.func.connect(flags, scope, binding);\n    if (typeof func === 'function') {\n      const args = this.args;\n      for (let i = 0, ii = args.length; i < ii; ++i) {\n        args[i].connect(flags, scope, binding);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallFunction(this);\n  }\n}\n\nexport type BinaryOperator = '&&' | '||' |  '==' |  '===' |  '!=' |  '!==' |  'instanceof' |  'in' |  '+' |  '-' |  '*' |  '/' |  '%' |  '<' |  '>' |  '<=' |  '>=';\n\nexport class Binary implements IExpression {\n  public $kind: ExpressionKind.Binary;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly operation: BinaryOperator,\n    public readonly left: IsBinary,\n    public readonly right: IsBinary) {\n    // what we're doing here is effectively moving the large switch statement from evaluate to the constructor\n    // so that the check only needs to be done once, and evaluate (which is called many times) will have a lot less\n    // work to do; we can do this because the operation can't change after it's parsed\n    this.evaluate = this[operation];\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    throw Reporter.error(RuntimeError.UnknownOperator, this);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const left = this.left.evaluate(flags, scope, null);\n    this.left.connect(flags, scope, binding);\n    if (this.operation === '&&' && !left || this.operation === '||' && left) {\n      return;\n    }\n    this.right.connect(flags, scope, binding);\n  }\n\n  private ['&&'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    return this.left.evaluate(f, s, l) && this.right.evaluate(f, s, l);\n  }\n  private ['||'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    return this.left.evaluate(f, s, l) || this.right.evaluate(f, s, l);\n  }\n  private ['=='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    // tslint:disable-next-line:triple-equals\n    return this.left.evaluate(f, s, l) == this.right.evaluate(f, s, l);\n  }\n  private ['==='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) === this.right.evaluate(f, s, l);\n  }\n  private ['!='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    // tslint:disable-next-line:triple-equals\n    return this.left.evaluate(f, s, l) != this.right.evaluate(f, s, l);\n  }\n  private ['!=='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) !== this.right.evaluate(f, s, l);\n  }\n  private ['instanceof'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    const right = this.right.evaluate(f, s, l);\n    if (typeof right === 'function') {\n      return this.left.evaluate(f, s, l) instanceof right;\n    }\n    return false;\n  }\n  private ['in'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    const right = this.right.evaluate(f, s, l);\n    if (right !== null && typeof right === 'object') {\n      return this.left.evaluate(f, s, l) in right;\n    }\n    return false;\n  }\n  // note: autoConvertAdd (and the null check) is removed because the default spec behavior is already largely similar\n  // and where it isn't, you kind of want it to behave like the spec anyway (e.g. return NaN when adding a number to undefined)\n  // this makes bugs in user code easier to track down for end users\n  // also, skipping these checks and leaving it to the runtime is a nice little perf boost and simplifies our code\n  private ['+'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) + (<any>this.right.evaluate(f, s, l));\n  }\n  private ['-'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) - (<any>this.right.evaluate(f, s, l));\n  }\n  private ['*'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) * (<any>this.right.evaluate(f, s, l));\n  }\n  private ['/'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) / (<any>this.right.evaluate(f, s, l));\n  }\n  private ['%'](f: LifecycleFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) % (<any>this.right.evaluate(f, s, l));\n  }\n  private ['<'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) < this.right.evaluate(f, s, l);\n  }\n  private ['>'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) > this.right.evaluate(f, s, l);\n  }\n  private ['<='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) <= this.right.evaluate(f, s, l);\n  }\n  private ['>='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) >= this.right.evaluate(f, s, l);\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBinary(this);\n  }\n}\n\nexport type UnaryOperator = 'void' | 'typeof' | '!' | '-' | '+';\n\nexport class Unary implements IExpression {\n  public $kind: ExpressionKind.Unary;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly operation: UnaryOperator,\n    public readonly expression: IsLeftHandSide) {\n    // see Binary (we're doing the same thing here)\n    // tslint:disable-next-line:no-any\n    this.evaluate = this[operation];\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    throw Reporter.error(RuntimeError.UnknownOperator, this);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.expression.connect(flags, scope, binding);\n  }\n\n  public ['void'](f: LifecycleFlags, s: IScope, l: IServiceLocator): undefined {\n    return void this.expression.evaluate(f, s, l);\n  }\n  public ['typeof'](f: LifecycleFlags, s: IScope, l: IServiceLocator): string {\n    return typeof this.expression.evaluate(f, s, l);\n  }\n  public ['!'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return !this.expression.evaluate(f, s, l);\n  }\n  public ['-'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return -this.expression.evaluate(f, s, l);\n  }\n  public ['+'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return +this.expression.evaluate(f, s, l);\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitUnary(this);\n  }\n}\nexport class PrimitiveLiteral<TValue extends StrictPrimitive = StrictPrimitive> implements IExpression {\n  public static readonly $undefined: PrimitiveLiteral<undefined> = new PrimitiveLiteral<undefined>(undefined);\n  public static readonly $null: PrimitiveLiteral<null> = new PrimitiveLiteral<null>(null);\n  public static readonly $true: PrimitiveLiteral<true> = new PrimitiveLiteral<true>(true);\n  public static readonly $false: PrimitiveLiteral<false> = new PrimitiveLiteral<false>(false);\n  public static readonly $empty: PrimitiveLiteral<string> = new PrimitiveLiteral<''>('');\n  public $kind: ExpressionKind.PrimitiveLiteral;\n  public connect: IExpression['connect'];\n  public assign: IExpression['assign'];\n  constructor(public readonly value: TValue) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): TValue {\n    return this.value;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitPrimitiveLiteral(this);\n  }\n}\n\nexport class HtmlLiteral implements IExpression {\n  public $kind: ExpressionKind.HtmlLiteral;\n  public assign: IExpression['assign'];\n  constructor(public readonly parts: ReadonlyArray<HtmlLiteral>) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    const elements = this.parts;\n    let result = '';\n    for (let i = 0, ii = elements.length; i < ii; ++i) {\n      const value = elements[i].evaluate(flags, scope, locator);\n      if (value === undefined || value === null) {\n        continue;\n      }\n      result += value;\n    }\n    return result;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    for (let i = 0, ii = this.parts.length; i < ii; ++i) {\n      this.parts[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitHtmlLiteral(this);\n  }\n}\n\nexport class ArrayLiteral implements IExpression {\n  public static readonly $empty: ArrayLiteral = new ArrayLiteral(PLATFORM.emptyArray);\n  public $kind: ExpressionKind.ArrayLiteral;\n  public assign: IExpression['assign'];\n  constructor(public readonly elements: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): ReadonlyArray<StrictAny> {\n    const elements = this.elements;\n    const length = elements.length;\n    const result = Array(length);\n    for (let i = 0; i < length; ++i) {\n      result[i] = elements[i].evaluate(flags, scope, locator);\n    }\n    return result;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const elements = this.elements;\n    for (let i = 0, ii = elements.length; i < ii; ++i) {\n      elements[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitArrayLiteral(this);\n  }\n}\n\nexport class ObjectLiteral implements IExpression {\n  public static readonly $empty: ObjectLiteral = new ObjectLiteral(PLATFORM.emptyArray, PLATFORM.emptyArray);\n  public $kind: ExpressionKind.ObjectLiteral;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly keys: ReadonlyArray<number | string>,\n    public readonly values: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): Record<string, StrictAny> {\n    const instance: Record<string, StrictAny> = {};\n    const keys = this.keys;\n    const values = this.values;\n    for (let i = 0, ii = keys.length; i < ii; ++i) {\n      instance[keys[i]] = values[i].evaluate(flags, scope, locator);\n    }\n    return instance;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const keys = this.keys;\n    const values = this.values;\n    for (let i = 0, ii = keys.length; i < ii; ++i) {\n      values[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitObjectLiteral(this);\n  }\n}\n\nexport class Template implements IExpression {\n  public static readonly $empty: Template = new Template(['']);\n  public $kind: ExpressionKind.Template;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly cooked: ReadonlyArray<string>,\n    public readonly expressions?: ReadonlyArray<IsAssign>) {\n    this.expressions = expressions || PLATFORM.emptyArray;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    const expressions = this.expressions;\n    const cooked = this.cooked;\n    let result = cooked[0];\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      result += expressions[i].evaluate(flags, scope, locator);\n      result += cooked[i + 1];\n    }\n    return result;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const expressions = this.expressions;\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      expressions[i].connect(flags, scope, binding);\n      i++;\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitTemplate(this);\n  }\n}\n\nexport class TaggedTemplate implements IExpression {\n  public $kind: ExpressionKind.TaggedTemplate;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly cooked: ReadonlyArray<string> & { raw?: ReadonlyArray<string> },\n    raw: ReadonlyArray<string>,\n    public readonly func: IsLeftHandSide,\n    public readonly expressions?: ReadonlyArray<IsAssign>) {\n    cooked.raw = raw;\n    this.expressions = expressions || PLATFORM.emptyArray;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    const expressions = this.expressions;\n    const len = expressions.length;\n    const results = Array(len);\n    for (let i = 0, ii = len; i < ii; ++i) {\n      results[i] = expressions[i].evaluate(flags, scope, locator);\n    }\n    const func = this.func.evaluate(flags, scope, locator) as StrictAny; // not sure why this cast is needed..\n    if (typeof func !== 'function') {\n      throw Reporter.error(RuntimeError.NotAFunction, this);\n    }\n    return func.apply(null, [this.cooked].concat(results));\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const expressions = this.expressions;\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      expressions[i].connect(flags, scope, binding);\n    }\n    this.func.connect(flags, scope, binding);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitTaggedTemplate(this);\n  }\n}\n\nexport class ArrayBindingPattern implements IExpression {\n  public $kind: ExpressionKind.ArrayBindingPattern;\n  // We'll either have elements, or keys+values, but never all 3\n  constructor(\n    public readonly elements: ReadonlyArray<IsAssign>\n  ) { }\n\n  // tslint:disable-next-line:no-any\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): any {\n    // TODO\n  }\n\n  // tslint:disable-next-line:no-any\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, obj: IIndexable): any {\n    // TODO\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitArrayBindingPattern(this);\n  }\n}\n\nexport class ObjectBindingPattern implements IExpression {\n  public $kind: ExpressionKind.ObjectBindingPattern;\n  // We'll either have elements, or keys+values, but never all 3\n  constructor(\n    public readonly keys: ReadonlyArray<string | number>,\n    public readonly values: ReadonlyArray<IsAssign>\n  ) { }\n\n  // tslint:disable-next-line:no-any\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): any {\n    // TODO\n  }\n\n  // tslint:disable-next-line:no-any\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, obj: IIndexable): any {\n    // TODO\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitObjectBindingPattern(this);\n  }\n}\n\nexport class BindingIdentifier implements IExpression {\n  public $kind: ExpressionKind.BindingIdentifier;\n  constructor(public readonly name: string) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.name;\n  }\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBindingIdentifier(this);\n  }\n}\n\nexport type BindingIdentifierOrPattern = BindingIdentifier | ArrayBindingPattern | ObjectBindingPattern;\n\nconst toStringTag = Object.prototype.toString;\n\n// https://tc39.github.io/ecma262/#sec-iteration-statements\n// https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\nexport class ForOfStatement implements IExpression {\n  public $kind: ExpressionKind.ForOfStatement;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly declaration: BindingIdentifierOrPattern,\n    public readonly iterable: IsBindingBehavior) { }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.iterable.evaluate(flags, scope, locator);\n  }\n\n  public count(result: ObservedCollection | number | null | undefined): number {\n    return CountForOfStatement[toStringTag.call(result)](result);\n  }\n\n  // tslint:disable-next-line:no-any\n  public iterate(result: ObservedCollection | number | null | undefined, func: (arr: Collection, index: number, item: any) => void): void {\n    IterateForOfStatement[toStringTag.call(result)](result, func);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.declaration.connect(flags, scope, binding);\n    this.iterable.connect(flags, scope, binding);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitForOfStatement(this);\n  }\n}\n\n/*\n* Note: this implementation is far simpler than the one in vCurrent and might be missing important stuff (not sure yet)\n* so while this implementation is identical to Template and we could reuse that one, we don't want to lock outselves in to potentially the wrong abstraction\n* but this class might be a candidate for removal if it turns out it does provide all we need\n*/\nexport class Interpolation implements IExpression {\n  public $kind: ExpressionKind.Interpolation;\n  public assign: IExpression['assign'];\n  public readonly isMulti: boolean;\n  public readonly firstExpression: IsBindingBehavior;\n  constructor(\n    public readonly parts: ReadonlyArray<string>,\n    public readonly expressions: ReadonlyArray<IsBindingBehavior>) {\n      this.isMulti = expressions.length > 1;\n      this.firstExpression = expressions[0];\n    }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    if (this.isMulti) {\n      const expressions = this.expressions;\n      const parts = this.parts;\n      let result = parts[0];\n      for (let i = 0, ii = expressions.length; i < ii; ++i) {\n        result += expressions[i].evaluate(flags, scope, locator);\n        result += parts[i + 1];\n      }\n      return result;\n    } else {\n      const parts = this.parts;\n      return parts[0] + this.firstExpression.evaluate(flags, scope, locator) + parts[1];\n    }\n  }\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitInterpolation(this);\n  }\n}\n\n/*\n* Note: for a property that is always the same, directly assigning it to the prototype is more efficient CPU wise\n* (gets assigned once, instead of per constructor call) as well as memory wise (stored once, instead of per instance)\n*\n* This gives us a cheap way to add some extra information to the AST for the runtime to do things more efficiently.\n*/\nBindingBehavior.prototype.$kind = ExpressionKind.BindingBehavior;\nValueConverter.prototype.$kind = ExpressionKind.ValueConverter;\nAssign.prototype.$kind = ExpressionKind.Assign;\nConditional.prototype.$kind = ExpressionKind.Conditional;\nAccessThis.prototype.$kind = ExpressionKind.AccessThis;\nAccessScope.prototype.$kind = ExpressionKind.AccessScope;\nAccessMember.prototype.$kind = ExpressionKind.AccessMember;\nAccessKeyed.prototype.$kind = ExpressionKind.AccessKeyed;\nCallScope.prototype.$kind = ExpressionKind.CallScope;\nCallMember.prototype.$kind = ExpressionKind.CallMember;\nCallFunction.prototype.$kind = ExpressionKind.CallFunction;\nBinary.prototype.$kind = ExpressionKind.Binary;\nUnary.prototype.$kind = ExpressionKind.Unary;\nPrimitiveLiteral.prototype.$kind = ExpressionKind.PrimitiveLiteral;\nHtmlLiteral.prototype.$kind = ExpressionKind.HtmlLiteral;\nArrayLiteral.prototype.$kind = ExpressionKind.ArrayLiteral;\nObjectLiteral.prototype.$kind = ExpressionKind.ObjectLiteral;\nTemplate.prototype.$kind = ExpressionKind.Template;\nTaggedTemplate.prototype.$kind = ExpressionKind.TaggedTemplate;\nArrayBindingPattern.prototype.$kind = ExpressionKind.ArrayBindingPattern;\nObjectBindingPattern.prototype.$kind = ExpressionKind.ObjectBindingPattern;\nBindingIdentifier.prototype.$kind = ExpressionKind.BindingIdentifier;\nForOfStatement.prototype.$kind = ExpressionKind.ForOfStatement;\nInterpolation.prototype.$kind = ExpressionKind.Interpolation;\n\n/// Evaluate the [list] in context of the [scope].\nfunction evalList(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, list: ReadonlyArray<IExpression>): StrictAny[] {\n  const len = list.length;\n  const result = Array(len);\n  for (let i = 0; i < len; ++i) {\n    result[i] = list[i].evaluate(flags, scope, locator);\n  }\n  return result;\n}\n\nfunction getFunction(flags: LifecycleFlags, obj: StrictAny, name: string): Function | null {\n  const func = obj === null || obj === undefined ? null : obj[name];\n  if (typeof func === 'function') {\n    return func;\n  }\n  if (!(flags & LifecycleFlags.mustEvaluate) && (func === null || func === undefined)) {\n    return null;\n  }\n  throw Reporter.error(RuntimeError.NotAFunction, obj, name, func);\n}\n\nfunction isNumeric(value: StrictAny): value is number {\n  const valueType = typeof value;\n  if (valueType === 'number') return true;\n  if (valueType !== 'string') return false;\n  const len = (<string>value).length;\n  if (len === 0) return false;\n  for (let i = 0; i < len; ++i) {\n    const char = (<string>value).charCodeAt(i);\n    if (char < 0x30 /*0*/ || char > 0x39/*9*/) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*@internal*/\nexport const IterateForOfStatement = {\n  ['[object Array]'](result: StrictAny[], func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    for (let i = 0, ii = result.length; i < ii; ++i) {\n      func(result, i, result[i]);\n    }\n  },\n  ['[object Map]'](result: Map<StrictAny, StrictAny>, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    const arr = Array(result.size);\n    let i = -1;\n    for (const entry of result.entries()) {\n      arr[++i] = entry;\n    }\n    IterateForOfStatement['[object Array]'](arr, func);\n  },\n  ['[object Set]'](result: Set<StrictAny>, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    const arr = Array(result.size);\n    let i = -1;\n    for (const key of result.keys()) {\n      arr[++i] = key;\n    }\n    IterateForOfStatement['[object Array]'](arr, func);\n  },\n  ['[object Number]'](result: number, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    const arr = Array(result);\n    for (let i = 0; i < result; ++i) {\n      arr[i] = i;\n    }\n    IterateForOfStatement['[object Array]'](arr, func);\n  },\n  ['[object Null]'](result: null, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    return;\n  },\n  ['[object Undefined]'](result: null, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    return;\n  }\n};\n\n/*@internal*/\nexport const CountForOfStatement = {\n  ['[object Array]'](result: StrictAny[]): number { return result.length; },\n  ['[object Map]'](result: Map<StrictAny, StrictAny>): number { return result.size; },\n  ['[object Set]'](result: Set<StrictAny>): number { return result.size; },\n  ['[object Number]'](result: number): number { return result; },\n  ['[object Null]'](result: null): number { return 0; },\n  ['[object Undefined]'](result: null): number { return 0; }\n};\n\n// Give each AST class a noop for each interface method if and only if it's not already defined\n// This accomplishes the following:\n//   1) no runtime error due to bad AST structure (it's the parser's job to guard against that)\n//   2) no runtime error due to a bad binding such as two-way on a literal (no need, since it doesn't threaten the integrity of the app's state)\n//   3) should we decide something else, we can easily change the global behavior of 1) and 2) by simply assigning a different method here (either in the source or via AOT)\nconst ast = [AccessThis, AccessScope, ArrayLiteral, ObjectLiteral, PrimitiveLiteral, Template, Unary, CallFunction, CallMember, CallScope, AccessMember, AccessKeyed, TaggedTemplate, Binary, Conditional, Assign, ForOfStatement];\nfor (let i = 0, ii = ast.length; i < ii; ++i) {\n  const proto = ast[i].prototype;\n  // tslint:disable-next-line:no-any\n  proto.assign = proto.assign || <any>PLATFORM.noop;\n  proto.connect = proto.connect || PLATFORM.noop;\n}\n","import { Decoratable, Decorated, IIndexable } from '@aurelia/kernel';\nimport { IBindingTargetObserver, IPropertySubscriber, LifecycleFlags } from '../observation';\nimport { StrictAny } from './ast';\nimport { IBinding } from './binding';\nimport { IObserverLocator } from './observer-locator';\n\n// TODO: add connect-queue (or something similar) back in when everything else is working, to improve startup time\n\nconst slotNames: string[] = [];\nconst versionSlotNames: string[] = [];\nlet lastSlot = -1;\nfunction ensureEnoughSlotNames(currentSlot: number): void {\n  if (currentSlot === lastSlot) {\n    lastSlot += 5;\n    const ii = slotNames.length = versionSlotNames.length = lastSlot + 1;\n    for (let i = currentSlot + 1; i < ii; ++i) {\n      slotNames[i] = `_observer${i}`;\n      versionSlotNames[i] = `_observerVersion${i}`;\n    }\n  }\n}\nensureEnoughSlotNames(-1);\n\nexport interface IPartialConnectableBinding extends IBinding, IPropertySubscriber {\n  observerLocator: IObserverLocator;\n}\n\nexport interface IConnectableBinding extends IPartialConnectableBinding {\n  $nextConnect?: IConnectableBinding;\n  $nextPatch?: IConnectableBinding;\n  observerSlots: number;\n  version: number;\n  observeProperty(obj: StrictAny, propertyName: StrictAny): void;\n  addObserver(observer: IBindingTargetObserver): void;\n  unobserve(all?: boolean): void;\n  connect(flags: LifecycleFlags): void;\n  patch(flags: LifecycleFlags): void;\n}\n\n/*@internal*/\nexport function addObserver(this: IConnectableBinding, observer: IBindingTargetObserver): void {\n  // find the observer.\n  const observerSlots = this.observerSlots === undefined ? 0 : this.observerSlots;\n  let i = observerSlots;\n\n  while (i-- && this[slotNames[i]] !== observer);\n\n  // if we are not already observing, put the observer in an open slot and subscribe.\n  if (i === -1) {\n    i = 0;\n    while (this[slotNames[i]]) {\n      i++;\n    }\n    this[slotNames[i]] = observer;\n    observer.subscribe(this);\n    // increment the slot count.\n    if (i === observerSlots) {\n      this.observerSlots = i + 1;\n    }\n  }\n  // set the \"version\" when the observer was used.\n  if (this.version === undefined) {\n    this.version = 0;\n  }\n  this[versionSlotNames[i]] = this.version;\n  ensureEnoughSlotNames(i);\n}\n\n/*@internal*/\nexport function observeProperty(this: IConnectableBinding, obj: IIndexable, propertyName: string): void {\n  const observer = this.observerLocator.getObserver(obj, propertyName) as IBindingTargetObserver;\n  /* Note: we need to cast here because we can indeed get an accessor instead of an observer,\n   *  in which case the call to observer.subscribe will throw. It's not very clean and we can solve this in 2 ways:\n   *  1. Fail earlier: only let the locator resolve observers from .getObserver, and throw if no branches are left (e.g. it would otherwise return an accessor)\n   *  2. Fail silently (without throwing): give all accessors a no-op subscribe method\n   *\n   * We'll probably want to implement some global configuration (like a \"strict\" toggle) so users can pick between enforced correctness vs. ease-of-use\n   */\n  this.addObserver(observer);\n}\n\n/*@internal*/\nexport function unobserve(this: IConnectableBinding, all?: boolean): void {\n  const slots = this.observerSlots;\n  let slotName: string;\n  let observer: IBindingTargetObserver;\n  if (all === true) {\n    for (let i = 0; i < slots; ++i) {\n      slotName = slotNames[i];\n      observer = this[slotName];\n      if (observer !== null && observer !== undefined) {\n        this[slotName] = null;\n        observer.unsubscribe(this);\n      }\n    }\n  } else {\n    const version = this.version;\n    for (let i = 0; i < slots; ++i) {\n      if (this[versionSlotNames[i]] !== version) {\n        slotName = slotNames[i];\n        observer = this[slotName];\n        if (observer !== null && observer !== undefined) {\n          this[slotName] = null;\n          observer.unsubscribe(this);\n        }\n      }\n    }\n  }\n}\n\ntype DecoratableConnectable = Decoratable<IConnectableBinding, IPartialConnectableBinding>;\ntype DecoratedConnectable = Decorated<IConnectableBinding, IPartialConnectableBinding>;\n\nfunction connectableDecorator(target: DecoratableConnectable): DecoratedConnectable {\n  const proto = target.prototype;\n  if (!proto.hasOwnProperty('observeProperty')) proto.observeProperty = observeProperty;\n  if (!proto.hasOwnProperty('unobserve')) proto.unobserve = unobserve;\n  if (!proto.hasOwnProperty('addObserver')) proto.addObserver = addObserver;\n  return target as DecoratedConnectable;\n}\n\nexport function connectable(): typeof connectableDecorator;\nexport function connectable(target: DecoratableConnectable): DecoratedConnectable;\nexport function connectable(target?: DecoratableConnectable): DecoratedConnectable | typeof connectableDecorator {\n  return target === undefined ? connectableDecorator : connectableDecorator(target);\n}\n","import { IServiceLocator, Reporter } from '@aurelia/kernel';\nimport { IBindScope, ILifecycle, State } from '../lifecycle';\nimport { AccessorOrObserver, IBindingTargetObserver, IScope, LifecycleFlags } from '../observation';\nimport { ExpressionKind, ForOfStatement, hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { BindingMode } from './binding-mode';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\nimport { IObserverLocator } from './observer-locator';\n\nexport interface IBinding extends IBindScope {\n  readonly locator: IServiceLocator;\n  readonly $scope: IScope;\n}\n\nexport type IBindingTarget = any; // Node | CSSStyleDeclaration | IObservable;\n\n// BindingMode is not a const enum (and therefore not inlined), so assigning them to a variable to save a member accessor is a minor perf tweak\nconst { oneTime, toView, fromView } = BindingMode;\n\n// pre-combining flags for bitwise checks is a minor perf tweak\nconst toViewOrOneTime = toView | oneTime;\n\nexport interface Binding extends IConnectableBinding {}\n\n@connectable()\nexport class Binding implements IPartialConnectableBinding {\n  public $nextConnect: IConnectableBinding = null;\n  public $nextPatch: IConnectableBinding = null;\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $state: State = State.none;\n  public $scope: IScope = null;\n  public $lifecycle: ILifecycle;\n\n  public targetObserver: AccessorOrObserver;\n\n  constructor(\n    public sourceExpression: IsBindingBehavior | ForOfStatement,\n    public target: IBindingTarget,\n    public targetProperty: string,\n    public mode: BindingMode,\n    public observerLocator: IObserverLocator,\n    public locator: IServiceLocator) {\n    this.$lifecycle = locator.get(ILifecycle);\n  }\n\n  public updateTarget(value: StrictAny, flags: LifecycleFlags): void {\n    this.targetObserver.setValue(value, flags | LifecycleFlags.updateTargetInstance);\n  }\n\n  public updateSource(value: StrictAny, flags: LifecycleFlags): void {\n    this.sourceExpression.assign(flags | LifecycleFlags.updateSourceExpression, this.$scope, this.locator, value);\n  }\n\n  public handleChange(newValue: StrictAny, previousValue: StrictAny, flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n\n    const sourceExpression = this.sourceExpression;\n    const $scope = this.$scope;\n    const locator = this.locator;\n\n    if (flags & LifecycleFlags.updateTargetInstance) {\n      const targetObserver = this.targetObserver;\n      const mode = this.mode;\n\n      previousValue = targetObserver.getValue();\n      // if the only observable is an AccessScope then we can assume the passed-in newValue is the correct and latest value\n      if (sourceExpression.$kind !== ExpressionKind.AccessScope || this.observerSlots > 1) {\n        newValue = sourceExpression.evaluate(flags, $scope, locator);\n      }\n      if (newValue !== previousValue) {\n        this.updateTarget(newValue, flags);\n      }\n      if ((mode & oneTime) === 0) {\n        this.version++;\n        sourceExpression.connect(flags, $scope, this);\n        this.unobserve(false);\n      }\n      return;\n    }\n\n    if (flags & LifecycleFlags.updateSourceExpression) {\n      if (newValue !== sourceExpression.evaluate(flags, $scope, locator)) {\n        this.updateSource(newValue, flags);\n      }\n      return;\n    }\n\n    throw Reporter.error(15, LifecycleFlags[flags]);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    let sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    const mode = this.mode;\n    let targetObserver = this.targetObserver as IBindingTargetObserver;\n    if (!targetObserver) {\n      if (mode & fromView) {\n        targetObserver = this.targetObserver = this.observerLocator.getObserver(this.target, this.targetProperty) as IBindingTargetObserver;\n      } else {\n        targetObserver = this.targetObserver = this.observerLocator.getAccessor(this.target, this.targetProperty) as IBindingTargetObserver;\n      }\n    }\n    if (targetObserver.bind) {\n      targetObserver.bind(flags);\n    }\n\n    // during bind, binding behavior might have changed sourceExpression\n    sourceExpression = this.sourceExpression;\n    if (mode & toViewOrOneTime) {\n      this.updateTarget(sourceExpression.evaluate(flags, scope, this.locator), flags);\n    }\n    if (mode & toView) {\n      this.$lifecycle.enqueueConnect(this);\n    }\n    if (mode & fromView) {\n      targetObserver.subscribe(this);\n    }\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n\n    const targetObserver = this.targetObserver as IBindingTargetObserver;\n    if (targetObserver.unbind) {\n      targetObserver.unbind(flags);\n    }\n    if (targetObserver.unsubscribe) {\n      targetObserver.unsubscribe(this);\n    }\n    this.unobserve(true);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n  }\n\n  public connect(flags: LifecycleFlags): void {\n    if (this.$state & State.isBound) {\n      this.sourceExpression.connect(flags | LifecycleFlags.mustEvaluate, this.$scope, this);\n    }\n  }\n\n  public patch(flags: LifecycleFlags): void {\n    if (this.$state & State.isBound) {\n      this.updateTarget(this.sourceExpression.evaluate(flags | LifecycleFlags.mustEvaluate, this.$scope, this.locator), flags);\n    }\n  }\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { Binding, IBinding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { BindingMode } from '../binding-mode';\n\nexport type DebounceableBinding = IBinding & {\n  debouncedMethod: ((newValue: unknown, oldValue: unknown, flags: LifecycleFlags) => void) & { originalName: string };\n  debounceState: {\n    callContextToDebounce: LifecycleFlags;\n    delay: number;\n    timeoutId: number;\n    oldValue: unknown;\n  };\n};\n\nconst unset = {};\n\n/*@internal*/\nexport function debounceCallSource(event: Event): void {\n  const state = this.debounceState;\n  clearTimeout(state.timeoutId);\n  state.timeoutId = setTimeout(() => this.debouncedMethod(event), state.delay);\n}\n\n/*@internal*/\nexport function debounceCall(this: DebounceableBinding, newValue: unknown, oldValue: unknown, flags: LifecycleFlags): void {\n  const state = this.debounceState;\n  clearTimeout(state.timeoutId);\n  if (!(flags & state.callContextToDebounce)) {\n    state.oldValue = unset;\n    this.debouncedMethod(newValue, oldValue, flags);\n    return;\n  }\n  if (state.oldValue === unset) {\n    state.oldValue = oldValue;\n  }\n  // To disambiguate between \"number\" and \"NodeJS.Timer\" we cast it to an unknown, so we can subsequently cast it to number.\n  const timeoutId: unknown = setTimeout(\n    () => {\n      const ov = state.oldValue;\n      state.oldValue = unset;\n      this.debouncedMethod(newValue, ov, flags);\n    },\n    state.delay\n  );\n  state.timeoutId = timeoutId as number;\n}\n\nconst fromView = BindingMode.fromView;\n\n@bindingBehavior('debounce')\nexport class DebounceBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: DebounceableBinding, delay: number = 200): void {\n    let methodToDebounce;\n    let callContextToDebounce;\n    let debouncer;\n\n    if (binding instanceof Binding) {\n      methodToDebounce = 'handleChange';\n      debouncer = debounceCall;\n      callContextToDebounce = binding.mode & fromView ? LifecycleFlags.updateSourceExpression : LifecycleFlags.updateTargetInstance;\n    } else {\n      methodToDebounce = 'callSource';\n      debouncer = debounceCallSource;\n      callContextToDebounce = LifecycleFlags.updateTargetInstance;\n    }\n\n    // stash the original method and it's name.\n    // note: a generic name like \"originalMethod\" is not used to avoid collisions\n    // with other binding behavior types.\n    binding.debouncedMethod = binding[methodToDebounce];\n    binding.debouncedMethod.originalName = methodToDebounce;\n\n    // replace the original method with the debouncing version.\n    binding[methodToDebounce] = debouncer;\n\n    // create the debounce state.\n    binding.debounceState = {\n      callContextToDebounce,\n      delay,\n      timeoutId: 0,\n      oldValue: unset\n    };\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: DebounceableBinding): void {\n    // restore the state of the binding.\n    const methodToRestore = binding.debouncedMethod.originalName;\n    binding[methodToRestore] = binding.debouncedMethod;\n    binding.debouncedMethod = null;\n    clearTimeout(binding.debounceState.timeoutId);\n    binding.debounceState = null;\n  }\n}\n","import { DI, inject, IRegistry } from '@aurelia/kernel';\nimport { valueConverter } from '../value-converter';\n\nconst SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\n\nexport interface ISanitizer {\n /**\n  * Sanitizes the provided input.\n  * @param input The input to be sanitized.\n  */\n  sanitize(input: string): string;\n}\n\nexport const ISanitizer = DI.createInterface<ISanitizer>()\n  .withDefault(x => x.singleton(class {\n    public sanitize(input: string): string {\n      return input.replace(SCRIPT_REGEX, '');\n    }\n  })\n);\n\n/**\n * Simple html sanitization converter to preserve whitelisted elements and attributes on a bound property containing html.\n */\n@valueConverter('sanitize')\n@inject(ISanitizer)\nexport class SanitizeValueConverter {\n  public static register: IRegistry['register'];\n\n  constructor(private sanitizer: ISanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n /**\n  * Process the provided markup that flows to the view.\n  * @param untrustedMarkup The untrusted markup to be sanitized.\n  */\n  public toView(untrustedMarkup: string): string|null {\n    if (untrustedMarkup === null || untrustedMarkup === undefined) {\n      return null;\n    }\n\n    return this.sanitizer.sanitize(untrustedMarkup);\n  }\n}\n","import { DI, IDisposable } from '@aurelia/kernel';\nimport { DOM, INode } from '../dom';\n\nexport interface IEventWithStandardPropagation extends Event {\n  propagationStopped?: boolean;\n  standardStopPropagation?: Event['stopPropagation'];\n}\n\n/*@internal*/\nexport type CompatibleEvent = {\n  target?: EventTarget;\n\n  // legacy\n  path?: EventTarget[];\n\n  // old composedPath\n  deepPath?(): EventTarget[];\n\n  // current spec\n  composedPath?(): EventTarget[];\n};\n\n//Note: path and deepPath are designed to handle v0 and v1 shadow dom specs respectively\n/*@internal*/\nexport function findOriginalEventTarget(event: Event & CompatibleEvent): EventTarget {\n  return (event.composedPath && event.composedPath()[0]) || (event.deepPath && event.deepPath()[0]) || (event.path && event.path[0]) || event.target;\n}\n\nfunction stopPropagation(this: IEventWithStandardPropagation): void {\n  this.standardStopPropagation();\n  this.propagationStopped = true;\n}\n\nfunction handleCapturedEvent(event: IEventWithStandardPropagation): void {\n  event.propagationStopped = false;\n  let target: IEventTargetWithLookups = findOriginalEventTarget(event) as EventTarget & IEventTargetWithLookups;\n  const orderedCallbacks = [];\n  /**\n   * During capturing phase, event 'bubbles' down from parent. Needs to reorder callback from root down to target\n   */\n  while (target) {\n    if (target.capturedCallbacks) {\n      const callback = target.capturedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        orderedCallbacks.push(callback);\n      }\n    }\n    target = target.parentNode;\n  }\n\n  for (let i = orderedCallbacks.length - 1; i >= 0 && !event.propagationStopped; i--) {\n    const orderedCallback = orderedCallbacks[i];\n    if ('handleEvent' in orderedCallback) {\n      orderedCallback.handleEvent(event);\n    } else {\n      orderedCallback(event);\n    }\n  }\n}\n\nfunction handleDelegatedEvent(event: IEventWithStandardPropagation): void {\n  event.propagationStopped = false;\n  let target: IEventTargetWithLookups = findOriginalEventTarget(event) as EventTarget & IEventTargetWithLookups;\n  while (target && !event.propagationStopped) {\n    if (target.delegatedCallbacks) {\n      const callback = target.delegatedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        if ('handleEvent' in callback) {\n          callback.handleEvent(event);\n        } else {\n          callback(event);\n        }\n      }\n    }\n    target = target.parentNode;\n  }\n}\n\nexport class ListenerTracker {\n  private count: number = 0;\n\n  constructor(\n    private eventName: string,\n    private listener: EventListenerOrEventListenerObject,\n    private capture: boolean\n  ) { }\n\n  public increment(): void {\n    this.count++;\n    if (this.count === 1) {\n      DOM.addEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n\n  public decrement(): void {\n    this.count--;\n    if (this.count === 0) {\n      DOM.removeEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n}\n\n/**\n * Enable dispose() pattern for `delegate` & `capture` commands\n */\nexport class DelegateOrCaptureSubscription {\n  constructor(\n    public entry: ListenerTracker,\n    public lookup: Record<string, EventListenerOrEventListenerObject>,\n    public targetEvent: string,\n    callback: EventListenerOrEventListenerObject\n  ) {\n    lookup[targetEvent] = callback;\n  }\n\n  public dispose(): void {\n    this.entry.decrement();\n    this.lookup[this.targetEvent] = null;\n  }\n}\n\n/**\n * Enable dispose() pattern for addEventListener for `trigger`\n */\nexport class TriggerSubscription {\n  constructor(\n    public target: INode,\n    public targetEvent: string,\n    public callback: EventListenerOrEventListenerObject\n  ) {\n    DOM.addEventListener(targetEvent, callback, target);\n  }\n\n  public dispose(): void {\n    DOM.removeEventListener(this.targetEvent, this.callback, this.target);\n  }\n}\n\nexport interface  IEventTargetWithLookups extends INode {\n  delegatedCallbacks?: Record<string, EventListenerOrEventListenerObject>;\n  capturedCallbacks?: Record<string, EventListenerOrEventListenerObject>;\n}\n\nexport enum DelegationStrategy {\n  none = 0,\n  capturing = 1,\n  bubbling = 2\n}\n\nexport interface IElementConfiguration {\n  tagName: string;\n  properties: Record<string, string[]>;\n}\n\nexport interface IEventSubscriber extends IDisposable {\n  subscribe(node: INode, callbackOrListener: EventListenerOrEventListenerObject): void;\n}\n\nexport class EventSubscriber implements IEventSubscriber {\n  private target: INode;\n  private handler: EventListenerOrEventListenerObject;\n\n  constructor(private readonly events: string[]) {\n    this.events = events;\n    this.target = null;\n    this.handler = null;\n  }\n\n  public subscribe(node: INode, callbackOrListener: EventListenerOrEventListenerObject): void {\n    this.target = node;\n    this.handler = callbackOrListener;\n\n    const add = DOM.addEventListener;\n    const events = this.events;\n\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      add(events[i], callbackOrListener, node);\n    }\n  }\n\n  public dispose(): void {\n    const node = this.target;\n    const callbackOrListener = this.handler;\n    const events = this.events;\n    const remove = DOM.removeEventListener;\n\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      remove(events[i], callbackOrListener, node);\n    }\n\n    this.target = this.handler = null;\n  }\n}\n\nexport type EventSubscription = DelegateOrCaptureSubscription | TriggerSubscription;\n\nexport interface IEventManager {\n  registerElementConfiguration(config: IElementConfiguration): void;\n  getElementHandler(target: INode, propertyName: string): IEventSubscriber | null;\n  addEventListener(target: INode, targetEvent: string, callbackOrListener: EventListenerOrEventListenerObject, delegate: DelegationStrategy): IDisposable;\n}\n\nexport const IEventManager = DI.createInterface<IEventManager>()\n  .withDefault(x => x.singleton(EventManager));\n\n/*@internal*/\nexport class EventManager implements IEventManager {\n  public elementHandlerLookup: Record<string, Record<string, string[]>> = {};\n  public delegatedHandlers: Record<string, ListenerTracker> = {};\n  public capturedHandlers: Record<string, ListenerTracker> = {};\n\n  constructor() {\n    this.registerElementConfiguration({\n      tagName: 'INPUT',\n      properties: {\n        value: ['change', 'input'],\n        checked: ['change', 'input'],\n        files: ['change', 'input']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'TEXTAREA',\n      properties: {\n        value: ['change', 'input']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'SELECT',\n      properties: {\n        value: ['change']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'content editable',\n      properties: {\n        value: ['change', 'input', 'blur', 'keyup', 'paste']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'scrollable element',\n      properties: {\n        scrollTop: ['scroll'],\n        scrollLeft: ['scroll']\n      }\n    });\n  }\n\n  public registerElementConfiguration(config: IElementConfiguration): void {\n    const properties = config.properties;\n    const lookup: Record<string, string[]> = this.elementHandlerLookup[config.tagName] = {};\n\n    for (const propertyName in properties) {\n      if (properties.hasOwnProperty(propertyName)) {\n        lookup[propertyName] = properties[propertyName];\n      }\n    }\n  }\n\n  public getElementHandler(target: INode, propertyName: string): IEventSubscriber | null {\n    const tagName = target['tagName'];\n    const lookup = this.elementHandlerLookup;\n\n    if (tagName) {\n      if (lookup[tagName] && lookup[tagName][propertyName]) {\n        return new EventSubscriber(lookup[tagName][propertyName]);\n      }\n      if (propertyName === 'textContent' || propertyName === 'innerHTML') {\n        return new EventSubscriber(lookup['content editable'].value);\n      }\n      if (propertyName === 'scrollTop' || propertyName === 'scrollLeft') {\n        return new EventSubscriber(lookup['scrollable element'][propertyName]);\n      }\n    }\n    return null;\n  }\n\n  public addEventListener(\n    target: IEventTargetWithLookups,\n    targetEvent: string,\n    callbackOrListener: EventListenerOrEventListenerObject,\n    strategy: DelegationStrategy\n  ): EventSubscription {\n    let delegatedHandlers: Record<string, ListenerTracker> | undefined;\n    let capturedHandlers: Record<string, ListenerTracker> | undefined;\n    let handlerEntry: ListenerTracker | ListenerTracker | undefined;\n\n    if (strategy === DelegationStrategy.bubbling) {\n      delegatedHandlers = this.delegatedHandlers;\n      handlerEntry = delegatedHandlers[targetEvent] || (delegatedHandlers[targetEvent] = new ListenerTracker(targetEvent, handleDelegatedEvent, false));\n      handlerEntry.increment();\n      const delegatedCallbacks = target.delegatedCallbacks || (target.delegatedCallbacks = {});\n      return new DelegateOrCaptureSubscription(handlerEntry, delegatedCallbacks, targetEvent, callbackOrListener);\n    }\n    if (strategy === DelegationStrategy.capturing) {\n      capturedHandlers = this.capturedHandlers;\n      handlerEntry = capturedHandlers[targetEvent] || (capturedHandlers[targetEvent] = new ListenerTracker(targetEvent, handleCapturedEvent, true));\n      handlerEntry.increment();\n      const capturedCallbacks = target.capturedCallbacks || (target.capturedCallbacks = {});\n      return new DelegateOrCaptureSubscription(handlerEntry, capturedCallbacks, targetEvent, callbackOrListener);\n    }\n    return new TriggerSubscription(target, targetEvent, callbackOrListener);\n  }\n}\n","import { IRegistry, Reporter } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { bindingBehavior } from '../binding-behavior';\nimport { findOriginalEventTarget } from '../event-manager';\nimport { Listener } from '../listener';\n\n/*@internal*/\nexport function handleSelfEvent(event: Event): ReturnType<Listener['callSource']> {\n  const target = findOriginalEventTarget(event);\n\n  if (this.target !== target) {\n    return;\n  }\n\n  return this.selfEventCallSource(event);\n}\n\nexport type SelfableBinding = Listener & {\n  selfEventCallSource: Listener['callSource'];\n};\n\n@bindingBehavior('self')\nexport class SelfBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: SelfableBinding): void {\n    if (!binding.callSource || !binding.targetEvent) {\n      throw Reporter.error(8);\n    }\n\n    binding.selfEventCallSource = binding.callSource;\n    binding.callSource = handleSelfEvent;\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: SelfableBinding): void {\n    binding.callSource = binding.selfEventCallSource;\n    binding.selfEventCallSource = null;\n  }\n}\n","import { inject, IRegistry, Reporter } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { ISignaler } from '../signaler';\n\nexport type SignalableBinding = Binding & {\n  signal: string | string[];\n};\n\n@bindingBehavior('signal')\n@inject(ISignaler)\nexport class SignalBindingBehavior {\n  public static register: IRegistry['register'];\n\n  constructor(private signaler: ISignaler) {}\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: SignalableBinding, ...args: string[]): void {\n    if (!binding.updateTarget) {\n      throw Reporter.error(11);\n    }\n\n    if (arguments.length === 4) {\n      const name = args[0];\n      this.signaler.addSignalListener(name, binding);\n      binding.signal = name;\n    } else if (arguments.length > 4) {\n      const names = Array.prototype.slice.call(arguments, 3);\n      let i = names.length;\n\n      while (i--) {\n        const name = names[i];\n        this.signaler.addSignalListener(name, binding);\n      }\n\n      binding.signal = names;\n    } else {\n      throw Reporter.error(12);\n    }\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: SignalableBinding): void {\n    const name = binding.signal;\n    binding.signal = null;\n\n    if (Array.isArray(name)) {\n      const names = name;\n      let i = names.length;\n\n      while (i--) {\n        this.signaler.removeSignalListener(names[i], binding);\n      }\n    } else {\n      this.signaler.removeSignalListener(name, binding);\n    }\n  }\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { Binding, IBinding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { BindingMode } from '../binding-mode';\n\nexport type ThrottleableBinding = IBinding & {\n  throttledMethod: ((value: unknown) => unknown) & { originalName: string };\n  throttleState: {\n    delay: number;\n    timeoutId: number;\n    last: number;\n    newValue?: unknown;\n  };\n};\n\n/*@internal*/\nexport function throttle(this: ThrottleableBinding, newValue: unknown): void {\n  const state = this.throttleState;\n  const elapsed = +new Date() - state.last;\n\n  if (elapsed >= state.delay) {\n    clearTimeout(state.timeoutId);\n    state.timeoutId = -1;\n    state.last = +new Date();\n    this.throttledMethod(newValue);\n    return;\n  }\n\n  state.newValue = newValue;\n\n  if (state.timeoutId === -1) {\n    // To disambiguate between \"number\" and \"NodeJS.Timer\" we cast it to an unknown, so we can subsequently cast it to number.\n    const timeoutId: unknown = setTimeout(\n      () => {\n        state.timeoutId = -1;\n        state.last = +new Date();\n        this.throttledMethod(state.newValue);\n      },\n      state.delay - elapsed\n    );\n    state.timeoutId = timeoutId as number;\n  }\n}\n\n@bindingBehavior('throttle')\nexport class ThrottleBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: ThrottleableBinding, delay: number = 200): void {\n    let methodToThrottle: string;\n\n    if (binding instanceof Binding) {\n      if (binding.mode === BindingMode.twoWay) {\n        methodToThrottle = 'updateSource';\n      } else {\n        methodToThrottle = 'updateTarget';\n      }\n    } else {\n      methodToThrottle = 'callSource';\n    }\n\n    // stash the original method and it's name.\n    // note: a generic name like \"originalMethod\" is not used to avoid collisions\n    // with other binding behavior types.\n    binding.throttledMethod = binding[methodToThrottle];\n    binding.throttledMethod.originalName = methodToThrottle;\n\n    // replace the original method with the throttling version.\n    binding[methodToThrottle] = throttle;\n\n    // create the throttle state.\n    binding.throttleState = {\n      delay: delay,\n      last: 0,\n      timeoutId: -1\n    };\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: ThrottleableBinding): void {\n    // restore the state of the binding.\n    const methodToRestore = binding.throttledMethod.originalName;\n    binding[methodToRestore] = binding.throttledMethod;\n    binding.throttledMethod = null;\n    clearTimeout(binding.throttleState.timeoutId);\n    binding.throttleState = null;\n  }\n}\n","import {\n  Collection, CollectionKind, CollectionObserver, IBindingTargetObserver,\n  ICollectionObserver, IndexMap, IPropertySubscriber, LifecycleFlags, MutationKind\n} from '../observation';\nimport { batchedSubscriberCollection, subscriberCollection } from './subscriber-collection';\nimport { targetObserver } from './target-observer';\n\nfunction flush(this: CollectionObserver): void {\n  this.callBatchedSubscribers(this.indexMap);\n  this.resetIndexMap();\n}\n\nfunction dispose(this: CollectionObserver): void {\n  this.collection.$observer = undefined;\n  this.collection = null;\n  this.indexMap = null;\n}\n\nfunction resetIndexMapIndexed(this: ICollectionObserver<CollectionKind.indexed>): void {\n  const len = this.collection.length;\n  const indexMap: IndexMap = (this.indexMap = Array(len));\n  let i = 0;\n  while (i < len) {\n    indexMap[i] = i++;\n  }\n  indexMap.deletedItems = [];\n}\n\nfunction resetIndexMapKeyed(this: ICollectionObserver<CollectionKind.keyed>): void {\n  const len = this.collection.size;\n  const indexMap: IndexMap = (this.indexMap = Array(len));\n  let i = 0;\n  while (i < len) {\n    indexMap[i] = i++;\n  }\n  indexMap.deletedItems = [];\n}\n\nfunction getLengthObserver(this: CollectionObserver): CollectionLengthObserver {\n  return this.lengthObserver === undefined ? (this.lengthObserver = new CollectionLengthObserver(<Collection&ICollectionObserver<CollectionKind>>this, this.lengthPropertyName)) : this.lengthObserver as CollectionLengthObserver;\n}\n\nexport function collectionObserver(kind: CollectionKind.array | CollectionKind.set | CollectionKind.map): ClassDecorator {\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.collection)(target);\n    batchedSubscriberCollection()(target);\n    const proto = <CollectionObserver>target.prototype;\n\n    proto.$nextFlush = null;\n\n    proto.collection = null;\n    proto.indexMap = null;\n    proto.hasChanges = false;\n    proto.lengthPropertyName = kind & CollectionKind.indexed ? 'length' : 'size';\n    proto.collectionKind = kind;\n    proto.resetIndexMap = kind & CollectionKind.indexed ? resetIndexMapIndexed : resetIndexMapKeyed;\n    proto.flush = flush;\n    proto.dispose = dispose;\n    proto.getLengthObserver = getLengthObserver;\n\n    proto.subscribe = proto.subscribe || proto.addSubscriber;\n    proto.unsubscribe = proto.unsubscribe || proto.removeSubscriber;\n\n    proto.subscribeBatched = proto.subscribeBatched || proto.addBatchedSubscriber;\n    proto.unsubscribeBatched = proto.unsubscribeBatched || proto.removeBatchedSubscriber;\n  };\n}\n\nexport interface CollectionLengthObserver extends IBindingTargetObserver<any, string> {}\n\n@targetObserver()\nexport class CollectionLengthObserver implements CollectionLengthObserver {\n  public currentValue: number;\n  public currentFlags: LifecycleFlags;\n\n  constructor(public obj: Collection, public propertyKey: 'length' | 'size') {\n    this.currentValue = obj[propertyKey];\n  }\n\n  public getValue(): number {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(newValue: number): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n}\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport { ILifecycle } from '../lifecycle';\nimport { CollectionKind, ICollectionObserver, IndexMap, IObservedArray, LifecycleFlags } from '../observation';\nimport { collectionObserver } from './collection-observer';\nconst proto = Array.prototype;\nexport const nativePush = proto.push; // TODO: probably want to make these internal again\nexport const nativeUnshift = proto.unshift;\nexport const nativePop = proto.pop;\nexport const nativeShift = proto.shift;\nexport const nativeSplice = proto.splice;\nexport const nativeReverse = proto.reverse;\nexport const nativeSort = proto.sort;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.push\nfunction observePush(this: IObservedArray): ReturnType<typeof nativePush> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativePush.apply(this, arguments);\n  }\n  const len = this.length;\n  const argCount = arguments.length;\n  if (argCount === 0) {\n    return len;\n  }\n  this.length = o.indexMap.length = len + argCount;\n  let i = len;\n  while (i < this.length) {\n    this[i] = arguments[i - len]; o.indexMap[i] = - 2;\n    i++;\n  }\n  o.callSubscribers('push', arguments, LifecycleFlags.isCollectionMutation);\n  return this.length;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.unshift\nfunction observeUnshift(this: IObservedArray): ReturnType<typeof nativeUnshift>  {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeUnshift.apply(this, arguments);\n  }\n  const argCount = arguments.length;\n  const inserts = new Array(argCount);\n  let i = 0;\n  while (i < argCount) {\n    inserts[i++] = - 2;\n  }\n  nativeUnshift.apply(o.indexMap, inserts);\n  const len = nativeUnshift.apply(this, arguments);\n  o.callSubscribers('unshift', arguments, LifecycleFlags.isCollectionMutation);\n  return len;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.pop\nfunction observePop(this: IObservedArray): ReturnType<typeof nativePop> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativePop.call(this);\n  }\n  const indexMap = o.indexMap;\n  const element = nativePop.call(this);\n  // only mark indices as deleted if they actually existed in the original array\n  const index = indexMap.length - 1;\n  if (indexMap[index] > -1) {\n    nativePush.call(indexMap.deletedItems, element);\n  }\n  nativePop.call(indexMap);\n  o.callSubscribers('pop', arguments, LifecycleFlags.isCollectionMutation);\n  return element;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.shift\nfunction observeShift(this: IObservedArray): ReturnType<typeof nativeShift> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeShift.call(this);\n  }\n  const indexMap = o.indexMap;\n  const element = nativeShift.call(this);\n  // only mark indices as deleted if they actually existed in the original array\n  if (indexMap[0] > -1) {\n    nativePush.call(indexMap.deletedItems, element);\n  }\n  nativeShift.call(indexMap);\n  o.callSubscribers('shift', arguments, LifecycleFlags.isCollectionMutation);\n  return element;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\nfunction observeSplice(this: IObservedArray, start: number, deleteCount?: number): ReturnType<typeof nativeSplice> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeSplice.apply(this, arguments);\n  }\n  const indexMap = o.indexMap;\n  if (deleteCount > 0) {\n    let i = isNaN(start) ? 0 : start;\n    const to = i + deleteCount;\n    while (i < to) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, this[i]);\n      }\n      i++;\n    }\n  }\n  const argCount = arguments.length;\n  if (argCount > 2) {\n    const itemCount = argCount - 2;\n    const inserts = new Array(itemCount);\n    let i = 0;\n    while (i < itemCount) {\n      inserts[i++] = - 2;\n    }\n    nativeSplice.call(indexMap, start, deleteCount, ...inserts);\n  } else if (argCount === 2) {\n    nativeSplice.call(indexMap, start, deleteCount);\n  }\n  const deleted = nativeSplice.apply(this, arguments);\n  o.callSubscribers('splice', arguments, LifecycleFlags.isCollectionMutation);\n  return deleted;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.reverse\nfunction observeReverse(this: IObservedArray): ReturnType<typeof nativeReverse> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeReverse.call(this);\n  }\n  const len = this.length;\n  const middle = (len / 2) | 0;\n  let lower = 0;\n  while (lower !== middle) {\n    const upper = len - lower - 1;\n    const lowerValue = this[lower]; const lowerIndex = o.indexMap[lower];\n    const upperValue = this[upper]; const upperIndex = o.indexMap[upper];\n    this[lower] = upperValue; o.indexMap[lower] = upperIndex;\n    this[upper] = lowerValue; o.indexMap[upper] = lowerIndex;\n    lower++;\n  }\n  o.callSubscribers('reverse', arguments, LifecycleFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n// https://github.com/v8/v8/blob/master/src/js/array.js\nfunction observeSort(this: IObservedArray, compareFn?: (a: IIndexable | Primitive, b: IIndexable | Primitive) => number): IObservedArray {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeSort.call(this, compareFn);\n  }\n  const len = this.length;\n  if (len < 2) {\n    return this;\n  }\n  quickSort(this, o.indexMap, 0, len, preSortCompare);\n  let i = 0;\n  while (i < len) {\n    if (this[i] === undefined) {\n      break;\n    }\n    i++;\n  }\n  if (compareFn === undefined || typeof compareFn !== 'function'/*spec says throw a TypeError, should we do that too?*/) {\n    compareFn = sortCompare;\n  }\n  quickSort(this, o.indexMap, 0, i, compareFn);\n  o.callSubscribers('sort', arguments, LifecycleFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-sortcompare\nfunction sortCompare(x: IIndexable | Primitive, y: IIndexable | Primitive): number {\n  if (x === y) {\n    return 0;\n  }\n  x = x === null ? 'null' : x.toString();\n  y = y === null ? 'null' : y.toString();\n  return x < y ? -1 : 1;\n}\n\nfunction preSortCompare(x: IIndexable | Primitive, y: IIndexable | Primitive): number {\n  if (x === undefined) {\n    if (y === undefined) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n  if (y === undefined) {\n    return -1;\n  }\n  return 0;\n}\n\nfunction insertionSort(arr: IObservedArray, indexMap: IndexMap, fromIndex: number, toIndex: number, compareFn: (a: IIndexable | Primitive, b: IIndexable | Primitive) => number): void {\n  let velement, ielement, vtmp, itmp, order;\n  let i, j;\n  for (i = fromIndex + 1; i < toIndex; i++) {\n    velement = arr[i]; ielement = indexMap[i];\n    for (j = i - 1; j >= fromIndex; j--) {\n      vtmp = arr[j]; itmp = indexMap[j];\n      order = compareFn(vtmp, velement);\n      if (order > 0) {\n        arr[j + 1] = vtmp; indexMap[j + 1] = itmp;\n      } else {\n        break;\n      }\n    }\n    arr[j + 1] = velement; indexMap[j + 1] = ielement;\n  }\n}\n\nfunction quickSort(arr: IObservedArray, indexMap: IndexMap, fromIndex: number, toIndex: number, compareFn: (a: IIndexable | Primitive, b: IIndexable | Primitive) => number): void {\n  let thirdIndex = 0, i = 0;\n  let v0, v1, v2;\n  let i0, i1, i2;\n  let c01, c02, c12;\n  let vtmp, itmp;\n  let vpivot, ipivot, lowEnd, highStart;\n  let velement, ielement, order, vtopElement;\n\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    if (toIndex - fromIndex <= 10) {\n      insertionSort(arr, indexMap, fromIndex, toIndex, compareFn);\n      return;\n    }\n\n    thirdIndex = fromIndex + ((toIndex - fromIndex) >> 1);\n    v0 = arr[fromIndex];       i0 = indexMap[fromIndex];\n    v1 = arr[toIndex - 1];     i1 = indexMap[toIndex - 1];\n    v2 = arr[thirdIndex]; i2 = indexMap[thirdIndex];\n    c01 = compareFn(v0, v1);\n    if (c01 > 0) {\n      vtmp = v0; itmp = i0;\n      v0 = v1;   i0 = i1;\n      v1 = vtmp; i1 = itmp;\n    }\n    c02 = compareFn(v0, v2);\n    if (c02 >= 0) {\n      vtmp = v0; itmp = i0;\n      v0 = v2;   i0 = i2;\n      v2 = v1;   i2 = i1;\n      v1 = vtmp; i1 = itmp;\n    } else {\n      c12 = compareFn(v1, v2);\n      if (c12 > 0) {\n        vtmp = v1; itmp = i1;\n        v1 = v2;   i1 = i2;\n        v2 = vtmp; i2 = itmp;\n      }\n    }\n    arr[fromIndex] = v0;   indexMap[fromIndex] = i0;\n    arr[toIndex - 1] = v2; indexMap[toIndex - 1] = i2;\n    vpivot = v1;      ipivot = i1;\n    lowEnd = fromIndex + 1;\n    highStart = toIndex - 1;\n    arr[thirdIndex] = arr[lowEnd]; indexMap[thirdIndex] = indexMap[lowEnd];\n    arr[lowEnd] = vpivot;          indexMap[lowEnd] = ipivot;\n\n    partition: for (i = lowEnd + 1; i < highStart; i++) {\n      velement = arr[i]; ielement = indexMap[i];\n      order = compareFn(velement, vpivot);\n      if (order < 0) {\n        arr[i] = arr[lowEnd];   indexMap[i] = indexMap[lowEnd];\n        arr[lowEnd] = velement; indexMap[lowEnd] = ielement;\n        lowEnd++;\n      } else if (order > 0) {\n        do {\n          highStart--;\n          // tslint:disable-next-line:triple-equals\n          if (highStart == i) {\n            break partition;\n          }\n          vtopElement = arr[highStart];          order = compareFn(vtopElement, vpivot);\n        } while (order > 0);\n        arr[i] = arr[highStart];   indexMap[i] = indexMap[highStart];\n        arr[highStart] = velement; indexMap[highStart] = ielement;\n        if (order < 0) {\n          velement = arr[i];      ielement = indexMap[i];\n          arr[i] = arr[lowEnd];   indexMap[i] = indexMap[lowEnd];\n          arr[lowEnd] = velement; indexMap[lowEnd] = ielement;\n          lowEnd++;\n        }\n      }\n    }\n    if (toIndex - highStart < lowEnd - fromIndex) {\n      quickSort(arr, indexMap, highStart, toIndex, compareFn);\n      toIndex = lowEnd;\n    } else {\n      quickSort(arr, indexMap, fromIndex, lowEnd, compareFn);\n      fromIndex = highStart;\n    }\n  }\n}\n\nfor (const observe of [observePush, observeUnshift, observePop, observeShift, observeSplice, observeReverse, observeSort]) {\n  Object.defineProperty(observe, 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableArrayObservation(): void {\n  if (proto.push['observing'] !== true) proto.push = observePush;\n  if (proto.unshift['observing'] !== true) proto.unshift = observeUnshift;\n  if (proto.pop['observing'] !== true) proto.pop = observePop;\n  if (proto.shift['observing'] !== true) proto.shift = observeShift;\n  if (proto.splice['observing'] !== true) proto.splice = observeSplice;\n  if (proto.reverse['observing'] !== true) proto.reverse = observeReverse;\n  if (proto.sort['observing'] !== true) proto.sort = observeSort;\n}\n\nenableArrayObservation();\n\nexport function disableArrayObservation(): void {\n  if (proto.push['observing'] === true) proto.push = nativePush;\n  if (proto.unshift['observing'] === true) proto.unshift = nativeUnshift;\n  if (proto.pop['observing'] === true) proto.pop = nativePop;\n  if (proto.shift['observing'] === true) proto.shift = nativeShift;\n  if (proto.splice['observing'] === true) proto.splice = nativeSplice;\n  if (proto.reverse['observing'] === true) proto.reverse = nativeReverse;\n  if (proto.sort['observing'] === true) proto.sort = nativeSort;\n}\n\nexport interface ArrayObserver extends ICollectionObserver<CollectionKind.array> {}\n\n@collectionObserver(CollectionKind.array)\nexport class ArrayObserver implements ArrayObserver {\n  public resetIndexMap: () => void;\n\n  public collection: IObservedArray;\n\n  constructor(lifecycle: ILifecycle, array: IObservedArray) {\n    this.lifecycle = lifecycle;\n    array.$observer = this;\n    this.collection = array;\n    this.resetIndexMap();\n  }\n}\n\nexport function getArrayObserver(lifecycle: ILifecycle, array: IObservedArray): ArrayObserver {\n  return (array.$observer as ArrayObserver) || new ArrayObserver(lifecycle, array);\n}\n","import { IIndexable, PLATFORM, Primitive, Reporter } from '@aurelia/kernel';\nimport { ILifecycle } from '../lifecycle';\nimport { IBindingTargetAccessor, IBindingTargetObserver, IObservable, IPropertySubscriber, ISubscribable, LifecycleFlags, MutationKind } from '../observation';\nimport { IDirtyChecker } from './dirty-checker';\nimport { IObserverLocator } from './observer-locator';\nimport { subscriberCollection } from './subscriber-collection';\n\nexport interface ComputedOverrides {\n  // Indicates that a getter doesn't need to re-calculate its dependencies after the first observation.\n  // tslint:disable-next-line:no-reserved-keywords\n  static?: boolean;\n\n  // Indicates that the getter of a getter/setter pair can change its value based on side-effects outside the setter.\n  volatile?: boolean;\n}\n\nexport type ComputedLookup = { computed?: Record<string, ComputedOverrides> };\n\nexport function computed(config: ComputedOverrides): PropertyDecorator {\n  return function(target: Object & ComputedLookup, key: string): void {\n    (target.computed || (target.computed = {}))[key] = config;\n  };\n}\n\nconst noProxy = !(typeof Proxy !== undefined);\nconst computedOverrideDefaults: ComputedOverrides = { static: false, volatile: false };\n\n/* @internal */\nexport function createComputedObserver(\n  observerLocator: IObserverLocator,\n  dirtyChecker: IDirtyChecker,\n  lifecycle: ILifecycle,\n  // tslint:disable-next-line:no-reserved-keywords\n  instance: IObservable & { constructor: Function & ComputedLookup },\n  propertyName: string,\n  descriptor: PropertyDescriptor): IBindingTargetAccessor {\n\n  if (descriptor.configurable === false) {\n    return dirtyChecker.createProperty(instance, propertyName);\n  }\n\n  if (descriptor.get) {\n    const overrides: ComputedOverrides = instance.constructor.computed\n      ? instance.constructor.computed[propertyName] || computedOverrideDefaults\n      : computedOverrideDefaults;\n\n    if (descriptor.set) {\n      if (overrides.volatile) {\n        return noProxy\n          ? dirtyChecker.createProperty(instance, propertyName)\n          : new GetterObserver(overrides, instance, propertyName, descriptor, observerLocator, lifecycle);\n      }\n\n      return new CustomSetterObserver(instance, propertyName, descriptor, lifecycle);\n    }\n\n    return noProxy\n      ? dirtyChecker.createProperty(instance, propertyName)\n      : new GetterObserver(overrides, instance, propertyName, descriptor, observerLocator, lifecycle);\n  }\n\n  throw Reporter.error(18, propertyName);\n}\n\nexport interface CustomSetterObserver extends IBindingTargetObserver { }\n\n// Used when the getter is dependent solely on changes that happen within the setter.\n@subscriberCollection(MutationKind.instance)\nexport class CustomSetterObserver implements CustomSetterObserver {\n  public $nextFlush: this = null;\n  public dispose: () => void;\n  public observing: boolean = false;\n  public currentValue: IIndexable | Primitive;\n  public oldValue: IIndexable | Primitive;\n\n  constructor(\n    public obj: IObservable,\n    public propertyKey: string,\n    private descriptor: PropertyDescriptor,\n    private lifecycle: ILifecycle\n  ) { }\n\n  public getValue(): IIndexable | Primitive {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(newValue: IIndexable | Primitive): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public flush(flags: LifecycleFlags): void {\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n\n    this.callSubscribers(newValue, oldValue, flags | LifecycleFlags.updateTargetInstance);\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.observing) {\n      this.convertProperty();\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n\n  public convertProperty(): void {\n    const setter = this.descriptor.set;\n    const that = this;\n\n    this.observing = true;\n    this.currentValue = this.obj[this.propertyKey];\n\n    Reflect.defineProperty(this.obj, this.propertyKey, {\n      set: function(newValue: IIndexable | Primitive): void {\n        setter.call(that.obj, newValue);\n\n        const oldValue = this.currentValue;\n\n        if (oldValue !== newValue) {\n          that.oldValue = oldValue;\n          this.lifecycle.queueFlush(that);\n\n          that.currentValue = newValue;\n        }\n      }\n    });\n  }\n}\n\nCustomSetterObserver.prototype.dispose = PLATFORM.noop;\n\nexport interface GetterObserver extends IBindingTargetObserver { }\n\n// Used when there is no setter, and the getter is dependent on other properties of the object;\n// Used when there is a setter but the value of the getter can change based on properties set outside of the setter.\n/*@internal*/\n@subscriberCollection(MutationKind.instance)\nexport class GetterObserver implements GetterObserver {\n  public dispose: () => void;\n  private controller: GetterController;\n\n  constructor(\n    private overrides: ComputedOverrides,\n    public obj: IObservable,\n    public propertyKey: string,\n    private descriptor: PropertyDescriptor,\n    private observerLocator: IObserverLocator,\n    private lifecycle: ILifecycle\n  ) {\n    this.controller = new GetterController(\n      overrides,\n      obj,\n      propertyKey,\n      descriptor,\n      this,\n      observerLocator,\n      lifecycle\n    );\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.controller.value;\n  }\n\n  // tslint:disable-next-line:no-empty\n  public setValue(newValue: IIndexable | Primitive): void { }\n\n  public flush(flags: LifecycleFlags): void {\n    const oldValue = this.controller.value;\n    const newValue = this.controller.getValueAndCollectDependencies();\n\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, flags | LifecycleFlags.updateTargetInstance);\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n    this.controller.onSubscriberAdded();\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n    this.controller.onSubscriberRemoved();\n  }\n}\n\nGetterObserver.prototype.dispose = PLATFORM.noop;\n\n/*@internal*/\nexport class GetterController {\n  public value: IIndexable | Primitive;\n  public isCollecting: boolean = false;\n\n  private dependencies: ISubscribable<MutationKind.instance>[] = [];\n  private subscriberCount: number = 0;\n\n  constructor(\n    private overrides: ComputedOverrides,\n    private instance: IObservable,\n    private propertyName: string,\n    descriptor: PropertyDescriptor,\n    private owner: GetterObserver,\n    observerLocator: IObserverLocator,\n    private lifecycle: ILifecycle\n  ) {\n    const proxy = new Proxy(instance, createGetterTraps(observerLocator, this));\n    const getter = descriptor.get;\n    const ctrl = this;\n\n    Reflect.defineProperty(instance, propertyName, {\n      get: function(): IIndexable | Primitive {\n        if (ctrl.subscriberCount < 1 || ctrl.isCollecting) {\n          ctrl.value = getter.apply(proxy);\n        }\n\n        return ctrl.value;\n      }\n    });\n  }\n\n  public addDependency(subscribable: ISubscribable<MutationKind.instance>): void {\n    if (this.dependencies.includes(subscribable)) {\n      return;\n    }\n\n    this.dependencies.push(subscribable);\n  }\n\n  public onSubscriberAdded(): void {\n    this.subscriberCount++;\n\n    if (this.subscriberCount > 1) {\n      return;\n    }\n\n    this.getValueAndCollectDependencies(true);\n  }\n\n  public getValueAndCollectDependencies(requireCollect: boolean = false): IIndexable | Primitive {\n    const dynamicDependencies = !this.overrides.static || requireCollect;\n\n    if (dynamicDependencies) {\n      this.unsubscribeAllDependencies();\n      this.isCollecting = true;\n    }\n\n    this.value = this.instance[this.propertyName]; // triggers observer collection\n\n    if (dynamicDependencies) {\n      this.isCollecting = false;\n      this.dependencies.forEach(x => { x.subscribe(this); });\n    }\n\n    return this.value;\n  }\n\n  public onSubscriberRemoved(): void {\n    this.subscriberCount--;\n\n    if (this.subscriberCount === 0) {\n      this.unsubscribeAllDependencies();\n    }\n  }\n\n  public handleChange(): void {\n    this.lifecycle.enqueueFlush(this.owner);\n  }\n\n  private unsubscribeAllDependencies(): void {\n    this.dependencies.forEach(x => { x.unsubscribe(this); });\n    this.dependencies.length = 0;\n  }\n}\n\nfunction createGetterTraps(observerLocator: IObserverLocator, controller: GetterController): ReturnType<typeof proxyOrValue> {\n  return {\n    get: function(instance: IIndexable, key: string): IIndexable | Primitive {\n      const value = instance[key];\n\n      if (key === '$observers' || typeof value === 'function' || !controller.isCollecting) {\n        return value;\n      }\n\n      // TODO: fix this\n      if (instance instanceof Array) {\n        controller.addDependency(observerLocator.getArrayObserver(instance));\n\n        if (key === 'length') {\n          controller.addDependency(observerLocator.getArrayObserver(instance).getLengthObserver());\n        }\n      } else if (instance instanceof Map) {\n        controller.addDependency(observerLocator.getMapObserver(instance));\n\n        if (key === 'size') {\n          controller.addDependency(observerLocator.getMapObserver(instance).getLengthObserver());\n        }\n      } else if (instance instanceof Set) {\n        controller.addDependency(observerLocator.getSetObserver(instance));\n\n        if (key === 'size') {\n          return observerLocator.getSetObserver(instance).getLengthObserver();\n        }\n      } else {\n        controller.addDependency(observerLocator.getObserver(instance, key) as IBindingTargetObserver);\n      }\n\n      return proxyOrValue(observerLocator, controller, value);\n    }\n  };\n}\n\nfunction proxyOrValue(observerLocator: IObserverLocator, controller: GetterController, value: IIndexable): ProxyHandler<IIndexable> {\n  if (!(value instanceof Object)) {\n    return value;\n  }\n\n  return new Proxy(value, createGetterTraps(observerLocator, controller));\n}\n","import { DI, IIndexable, Primitive } from '@aurelia/kernel';\nimport { IBindingTargetAccessor, IBindingTargetObserver, IObservable, IPropertySubscriber, LifecycleFlags } from '../observation';\nimport { propertyObserver } from './property-observer';\n\nexport interface IDirtyChecker {\n  createProperty(obj: IObservable, propertyName: string): IBindingTargetAccessor;\n}\n\nexport const IDirtyChecker = DI.createInterface<IDirtyChecker>()\n  .withDefault(x => x.singleton(DirtyChecker));\n\n/*@internal*/\nexport class DirtyChecker {\n  private tracked: DirtyCheckProperty[] = [];\n  private checkDelay: number = 120;\n\n  public createProperty(obj: IObservable, propertyName: string): DirtyCheckProperty {\n    return new DirtyCheckProperty(this, obj, propertyName);\n  }\n\n  public addProperty(property: DirtyCheckProperty): void {\n    const tracked = this.tracked;\n\n    tracked.push(property);\n\n    if (tracked.length === 1) {\n      this.scheduleDirtyCheck();\n    }\n  }\n\n  public removeProperty(property: DirtyCheckProperty): void {\n    const tracked = this.tracked;\n    tracked.splice(tracked.indexOf(property), 1);\n  }\n\n  public scheduleDirtyCheck(): void {\n    setTimeout(() => { this.check(); }, this.checkDelay);\n  }\n\n  public check(): void {\n    const tracked = this.tracked;\n    let i = tracked.length;\n\n    while (i--) {\n      const current = tracked[i];\n\n      if (current.isDirty()) {\n        current.flush(LifecycleFlags.fromFlush);\n      }\n    }\n\n    if (tracked.length) {\n      this.scheduleDirtyCheck();\n    }\n  }\n}\n\nexport interface DirtyCheckProperty extends IBindingTargetObserver { }\n\n/*@internal*/\n@propertyObserver()\nexport class DirtyCheckProperty implements DirtyCheckProperty {\n  public oldValue: IIndexable | Primitive;\n\n  constructor(\n    private dirtyChecker: DirtyChecker,\n    public obj: IObservable,\n    public propertyKey: string) {\n\n    }\n\n  public isDirty(): boolean {\n    return this.oldValue !== this.obj[this.propertyKey];\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(newValue: IIndexable | Primitive): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public flush(flags: LifecycleFlags): void {\n    const oldValue = this.oldValue;\n    const newValue = this.getValue();\n\n    this.callSubscribers(newValue, oldValue, flags | LifecycleFlags.updateTargetInstance);\n\n    this.oldValue = newValue;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.dirtyChecker.addProperty(this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.dirtyChecker.removeProperty(this);\n    }\n  }\n}\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport { DOM, IElement, IInputElement, INode, INodeObserver } from '../dom';\nimport { ILifecycle } from '../lifecycle';\nimport {\n  CollectionKind, IBatchedCollectionSubscriber, IBindingTargetObserver, ICollectionObserver,\n  IndexMap, IObserversLookup,  IPropertySubscriber, LifecycleFlags\n} from '../observation';\nimport { IEventSubscriber } from './event-manager';\nimport { IObserverLocator } from './observer-locator';\nimport { SetterObserver } from './property-observation';\nimport { targetObserver } from './target-observer';\n\nconst inputValueDefaults = {\n  ['button']: '',\n  ['checkbox']: 'on',\n  ['color']: '#000000',\n  ['date']: '',\n  ['datetime-local']: '',\n  ['email']: '',\n  ['file']: '',\n  ['hidden']: '',\n  ['image']: '',\n  ['month']: '',\n  ['number']: '',\n  ['password']: '',\n  ['radio']: 'on',\n  ['range']: '50',\n  ['reset']: '',\n  ['search']: '',\n  ['submit']: '',\n  ['tel']: '',\n  ['text']: '',\n  ['time']: '',\n  ['url']: '',\n  ['week']: ''\n};\n\nconst handleEventFlags = LifecycleFlags.fromDOMEvent | LifecycleFlags.updateSourceExpression;\n\nexport interface ValueAttributeObserver extends\n  IBindingTargetObserver<INode, string, Primitive | IIndexable> { }\n\n@targetObserver('')\nexport class ValueAttributeObserver implements ValueAttributeObserver {\n  public currentValue: Primitive | IIndexable;\n  public currentFlags: LifecycleFlags;\n  public oldValue: Primitive | IIndexable;\n  public defaultValue: Primitive | IIndexable;\n\n  public flush: () => void;\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: INode,\n    public propertyKey: string,\n    public handler: IEventSubscriber\n  ) {\n    // note: input.files can be assigned and this was fixed in Firefox 57:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1384030\n\n    // input.value (for type='file') however, can only be assigned an empty string\n    if (propertyKey === 'value') {\n      const nodeType = obj['type'];\n      this.defaultValue = inputValueDefaults[nodeType || 'text'];\n      if (nodeType === 'file') {\n        this.flush = this.flushFileChanges;\n      }\n    } else {\n      this.defaultValue = '';\n    }\n    this.oldValue = this.currentValue = obj[propertyKey];\n  }\n\n  public getValue(): Primitive | IIndexable {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(newValue: Primitive | IIndexable, flags: LifecycleFlags): void {\n    this.obj[this.propertyKey] = newValue;\n    if (flags & LifecycleFlags.fromBind) {\n      return;\n    }\n    this.callSubscribers(this.currentValue, this.oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    const oldValue = this.oldValue = this.currentValue;\n    const newValue = this.currentValue = this.getValue();\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, handleEventFlags);\n      this.oldValue = newValue;\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  private flushFileChanges(): void {\n    const currentValue = this.currentValue;\n    if (this.oldValue !== currentValue) {\n      if (currentValue === '') {\n        this.setValueCore(currentValue, this.currentFlags);\n        this.oldValue = this.currentValue;\n      }\n    }\n  }\n}\n\nValueAttributeObserver.prototype.propertyKey = '';\nValueAttributeObserver.prototype.handler = null;\n\nconst defaultHandleBatchedChangeFlags = LifecycleFlags.fromFlush | LifecycleFlags.updateTargetInstance;\n\ninterface IInternalInputElement extends IInputElement {\n  matcher?: typeof defaultMatcher;\n  model?: Primitive | IIndexable;\n  $observers?: IObserversLookup & {\n    model?: SetterObserver;\n    value?: ValueAttributeObserver;\n  };\n}\n\nexport interface CheckedObserver extends\n  IBindingTargetObserver<IInternalInputElement, string, Primitive | IIndexable>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n@targetObserver()\nexport class CheckedObserver implements CheckedObserver {\n  public currentValue: Primitive | IIndexable;\n  public currentFlags: LifecycleFlags;\n  public oldValue: Primitive | IIndexable;\n  public defaultValue: Primitive | IIndexable;\n\n  public flush: () => void;\n\n  private arrayObserver: ICollectionObserver<CollectionKind.array>;\n  private valueObserver: ValueAttributeObserver | SetterObserver;\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: IInternalInputElement,\n    public handler: IEventSubscriber,\n    public observerLocator: IObserverLocator\n  ) { }\n\n  public getValue(): Primitive | IIndexable {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: Primitive | IIndexable, flags: LifecycleFlags): void {\n    if (!this.valueObserver) {\n      this.valueObserver = this.obj['$observers'] && (this.obj['$observers'].model || this.obj['$observers'].value);\n      if (this.valueObserver) {\n        this.valueObserver.subscribe(this);\n      }\n    }\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (this.obj.type === 'checkbox' && Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(newValue);\n      this.arrayObserver.subscribeBatched(this);\n    }\n    this.synchronizeElement();\n  }\n\n  // handleBatchedCollectionChange (todo: rename to make this explicit?)\n  public handleBatchedChange(): void {\n    this.synchronizeElement();\n    this.notify(defaultHandleBatchedChangeFlags);\n  }\n\n  // handlePropertyChange (todo: rename normal subscribe methods in target observers to batched, since that's what they really are)\n  public handleChange(newValue: Primitive | IIndexable, previousValue: Primitive | IIndexable, flags: LifecycleFlags): void {\n    this.synchronizeElement();\n    this.notify(flags);\n  }\n\n  public synchronizeElement(): void {\n    const value = this.currentValue;\n    const element = this.obj;\n    const elementValue = element.hasOwnProperty('model') ? element['model'] : element.value;\n    const isRadio = element.type === 'radio';\n    const matcher = element['matcher'] || ((a: Primitive | IIndexable, b: Primitive | IIndexable) => a === b);\n\n    if (isRadio) {\n      element.checked = !!matcher(value, elementValue);\n    } else if (value === true) {\n      element.checked = true;\n    } else if (Array.isArray(value)) {\n      element.checked = value.findIndex(item => !!matcher(item, elementValue)) !== -1;\n    } else {\n      element.checked = false;\n    }\n  }\n\n  public notify(flags: LifecycleFlags): void {\n    if (flags & LifecycleFlags.fromBind) {\n      return;\n    }\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n    if (newValue === oldValue) {\n      return;\n    }\n    this.callSubscribers(this.currentValue, this.oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    let value = this.currentValue;\n    const element = this.obj;\n    const elementValue = element.hasOwnProperty('model') ? element['model'] : element.value;\n    let index;\n    const matcher = element['matcher'] || defaultMatcher;\n\n    if (element.type === 'checkbox') {\n      if (Array.isArray(value)) {\n        index = value.findIndex(item => !!matcher(item, elementValue));\n        if (element.checked && index === -1) {\n          value.push(elementValue);\n        } else if (!element.checked && index !== -1) {\n          value.splice(index, 1);\n        }\n        // when existing value is array, do not invoke callback as only the array element has changed\n        return;\n      }\n      value = element.checked;\n    } else if (element.checked) {\n      value = elementValue;\n    } else {\n      return;\n    }\n    this.oldValue = this.currentValue;\n    this.currentValue = value;\n    this.notify(handleEventFlags);\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  public unbind(): void {\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (this.valueObserver) {\n      this.valueObserver.unsubscribe(this);\n    }\n  }\n}\n\nCheckedObserver.prototype.handler = null;\nCheckedObserver.prototype.observerLocator = null;\n\nconst childObserverOptions = {\n  childList: true,\n  subtree: true,\n  characterData: true\n};\n\ntype UntypedArray = (Primitive | IIndexable)[];\n\nfunction defaultMatcher(a: Primitive | IIndexable, b: Primitive | IIndexable): boolean {\n  return a === b;\n}\n\nexport interface ISelectElement extends IElement {\n  multiple: boolean;\n  value: string;\n  options: ArrayLike<IOptionElement>;\n  matcher?: typeof defaultMatcher;\n}\nexport interface IOptionElement extends IElement {\n  model?: Primitive | IIndexable;\n  selected: boolean;\n  value: string;\n}\n\nexport interface SelectValueObserver extends\n  IBindingTargetObserver<ISelectElement, string, Primitive | IIndexable | UntypedArray>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n@targetObserver()\nexport class SelectValueObserver implements SelectValueObserver {\n  public currentValue: Primitive | IIndexable | UntypedArray;\n  public currentFlags: LifecycleFlags;\n  public oldValue: Primitive | IIndexable | UntypedArray;\n  public defaultValue: Primitive | UntypedArray;\n\n  public flush: () => void;\n\n  private arrayObserver: ICollectionObserver<CollectionKind.array>;\n  private nodeObserver: INodeObserver;\n\n  constructor(\n    public lifecycle: ILifecycle,\n    public obj: ISelectElement,\n    public handler: IEventSubscriber,\n    public observerLocator: IObserverLocator\n  ) { }\n\n  public getValue(): Primitive | IIndexable | UntypedArray {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: Primitive | UntypedArray, flags: LifecycleFlags): void {\n    const isArray = Array.isArray(newValue);\n    if (!isArray && newValue !== null && newValue !== undefined && this.obj.multiple) {\n      throw new Error('Only null or Array instances can be bound to a multi-select.');\n    }\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (isArray) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(<(Primitive | IIndexable)[]>newValue);\n      this.arrayObserver.subscribeBatched(this);\n    }\n    this.synchronizeOptions();\n    this.notify(flags);\n  }\n\n  // called when the array mutated (items sorted/added/removed, etc)\n  public handleBatchedChange(indexMap: number[]): void {\n    // we don't need to go through the normal setValue logic and can directly call synchronizeOptions here,\n    // because the change already waited one tick (batched) and there's no point in calling notify when the instance didn't change\n    this.synchronizeOptions(indexMap);\n  }\n\n  // called when a different value was assigned\n  public handleChange(newValue: Primitive | UntypedArray, previousValue: Primitive | UntypedArray, flags: LifecycleFlags): void {\n    this.setValue(newValue, flags);\n  }\n\n  public notify(flags: LifecycleFlags): void {\n    if (flags & LifecycleFlags.fromBind) {\n      return;\n    }\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n    if (newValue === oldValue) {\n      return;\n    }\n    this.callSubscribers(newValue, oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    // \"from-view\" changes are always synchronous now, so immediately sync the value and notify subscribers\n    const shouldNotify = this.synchronizeValue();\n    if (shouldNotify) {\n      this.notify(handleEventFlags);\n    }\n  }\n\n  public synchronizeOptions(indexMap?: IndexMap): void {\n    const currentValue = this.currentValue;\n    const isArray = Array.isArray(currentValue);\n    const obj = this.obj;\n    const matcher = obj.matcher || defaultMatcher;\n    const options = obj.options;\n    let i = options.length;\n\n    while (i--) {\n      const option = options[i];\n      const optionValue = option.hasOwnProperty('model') ? option.model : option.value;\n      if (isArray) {\n        option.selected = (<UntypedArray>currentValue).findIndex(item => !!matcher(optionValue, item)) !== -1;\n        continue;\n      }\n      option.selected = !!matcher(optionValue, currentValue);\n    }\n  }\n\n  public synchronizeValue(): boolean {\n    // Spec for synchronizing value from `SelectObserver` to `<select/>`\n    // When synchronizing value to observed <select/> element, do the following steps:\n    // A. If `<select/>` is multiple\n    //    1. Check if current value, called `currentValue` is an array\n    //      a. If not an array, return true to signal value has changed\n    //      b. If is an array:\n    //        i. gather all current selected <option/>, in to array called `values`\n    //        ii. loop through the `currentValue` array and remove items that are nolonger selected based on matcher\n    //        iii. loop through the `values` array and add items that are selected based on matcher\n    //        iv. Return false to signal value hasn't changed\n    // B. If the select is single\n    //    1. Let `value` equal the first selected option, if no option selected, then `value` is `null`\n    //    2. assign `this.currentValue` to `this.oldValue`\n    //    3. assign `value` to `this.currentValue`\n    //    4. return `true` to signal value has changed\n    const obj = this.obj;\n    const options = obj.options;\n    const len = options.length;\n    const currentValue = this.currentValue;\n    let i = 0;\n\n    if (obj.multiple) {\n      // A.\n      if (!Array.isArray(currentValue)) {\n        // A.1.a\n        return true;\n      }\n      // A.1.b\n      // multi select\n      let option: IOptionElement;\n      const matcher = obj.matcher || defaultMatcher;\n      // A.1.b.i\n      const values: UntypedArray = [];\n      while (i < len) {\n        option = options[i];\n        if (option.selected) {\n          values.push(option.hasOwnProperty('model')\n            ? option.model\n            : option.value\n          );\n        }\n        ++i;\n      }\n      // A.1.b.ii\n      i = 0;\n      while (i < currentValue.length) {\n        const a = currentValue[i];\n        // Todo: remove arrow fn\n        if (values.findIndex(b => !!matcher(a, b)) === -1) {\n          currentValue.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n      // A.1.b.iii\n      i = 0;\n      while (i < values.length) {\n        const a = values[i];\n        // Todo: remove arrow fn\n        if (currentValue.findIndex(b => !!matcher(a, b)) === -1) {\n          currentValue.push(a);\n        }\n        ++i;\n      }\n      // A.1.b.iv\n      return false;\n    }\n    // B. single select\n    // B.1\n    let value: Primitive | IIndexable | UntypedArray = null;\n    while (i < len) {\n      const option = options[i];\n      if (option.selected) {\n        value = option.hasOwnProperty('model')\n          ? option.model\n          : option.value;\n        break;\n      }\n      ++i;\n    }\n    // B.2\n    this.oldValue = this.currentValue;\n    // B.3\n    this.currentValue = value;\n    // B.4\n    return true;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  public bind(): void {\n    this.nodeObserver = DOM.createNodeObserver(\n      this.obj,\n      this.handleNodeChange.bind(this),\n      childObserverOptions\n    );\n  }\n\n  public unbind(): void {\n    this.nodeObserver.disconnect();\n    this.nodeObserver = null;\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n  }\n\n  public handleNodeChange(): void {\n    this.synchronizeOptions();\n    const shouldNotify = this.synchronizeValue();\n    if (shouldNotify) {\n      this.notify(handleEventFlags);\n    }\n  }\n}\n\nSelectValueObserver.prototype.handler = null;\nSelectValueObserver.prototype.observerLocator = null;\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport { ILifecycle } from '../lifecycle';\nimport { CollectionKind, ICollectionObserver, IObservedMap, LifecycleFlags } from '../observation';\nimport { nativePush, nativeSplice } from './array-observer';\nimport { collectionObserver } from './collection-observer';\n\nconst proto = Map.prototype;\nexport const nativeSet = proto.set; // TODO: probably want to make these internal again\nexport const nativeClear = proto.clear;\nexport const nativeDelete = proto.delete;\n\n// note: we can't really do much with Map due to the internal data structure not being accessible so we're just using the native calls\n// fortunately, map/delete/clear are easy to reconstruct for the indexMap\n\n// https://tc39.github.io/ecma262/#sec-map.prototype.map\nfunction observeSet(this: IObservedMap, key: IIndexable | Primitive, value: IIndexable | Primitive): ReturnType<typeof nativeSet> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeSet.call(this, key, value);\n  }\n  const oldSize = this.size;\n  nativeSet.call(this, key, value);\n  const newSize = this.size;\n  if (newSize === oldSize) {\n    let i = 0;\n    for (const entry of this.entries()) {\n      if (entry[0] === key) {\n        if (entry[1] !== value) {\n          o.indexMap[i] = -2;\n        }\n        return this;\n      }\n      i++;\n    }\n    return this;\n  }\n  o.indexMap[oldSize] = -2;\n  o.callSubscribers('set', arguments, LifecycleFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-map.prototype.clear\nfunction observeClear(this: IObservedMap): ReturnType<typeof nativeClear>  {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeClear.call(this);\n  }\n  const size = this.size;\n  if (size > 0) {\n    const indexMap = o.indexMap;\n    let i = 0;\n    for (const entry of this.keys()) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      i++;\n    }\n    nativeClear.call(this);\n    indexMap.length = 0;\n    o.callSubscribers('clear', arguments, LifecycleFlags.isCollectionMutation);\n  }\n  return undefined;\n}\n\n// https://tc39.github.io/ecma262/#sec-map.prototype.delete\nfunction observeDelete(this: IObservedMap, value: IIndexable | Primitive): ReturnType<typeof nativeDelete> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeDelete.call(this, value);\n  }\n  const size = this.size;\n  if (size === 0) {\n    return false;\n  }\n  let i = 0;\n  const indexMap = o.indexMap;\n  for (const entry of this.keys()) {\n    if (entry === value) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      nativeSplice.call(indexMap, i, 1);\n      return nativeDelete.call(this, value);\n    }\n    i++;\n  }\n  o.callSubscribers('delete', arguments, LifecycleFlags.isCollectionMutation);\n  return false;\n}\n\nfor (const observe of [observeSet, observeClear, observeDelete]) {\n  Object.defineProperty(observe, 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableMapObservation(): void {\n  if (proto.set['observing'] !== true) proto.set = observeSet;\n  if (proto.clear['observing'] !== true) proto.clear = observeClear;\n  if (proto.delete['observing'] !== true) proto.delete = observeDelete;\n}\n\nenableMapObservation();\n\nexport function disableMapObservation(): void {\n  if (proto.set['observing'] === true) proto.set = nativeSet;\n  if (proto.clear['observing'] === true) proto.clear = nativeClear;\n  if (proto.delete['observing'] === true) proto.delete = nativeDelete;\n}\n\nexport interface MapObserver extends ICollectionObserver<CollectionKind.map> {}\n\n@collectionObserver(CollectionKind.map)\nexport class MapObserver implements MapObserver {\n  public resetIndexMap: () => void;\n  public lifecycle: ILifecycle;\n\n  public collection: IObservedMap;\n\n  constructor(lifecycle: ILifecycle, map: IObservedMap) {\n    this.lifecycle = lifecycle;\n    map.$observer = this;\n    this.collection = map;\n    this.resetIndexMap();\n  }\n}\n\nexport function getMapObserver(lifecycle: ILifecycle, map: IObservedMap): MapObserver {\n  return (map.$observer as MapObserver) || new MapObserver(lifecycle, map);\n}\n","import { IIndexable, Primitive } from '@aurelia/kernel';\nimport { ILifecycle } from '../lifecycle';\nimport { CollectionKind, ICollectionObserver, IObservedSet, LifecycleFlags } from '../observation';\n// tslint:disable:no-reserved-keywords\nimport { nativePush, nativeSplice } from './array-observer';\nimport { collectionObserver } from './collection-observer';\n\nconst proto = Set.prototype;\nexport const nativeAdd = proto.add; // TODO: probably want to make these internal again\nexport const nativeClear = proto.clear;\nexport const nativeDelete = proto.delete;\n\n// note: we can't really do much with Set due to the internal data structure not being accessible so we're just using the native calls\n// fortunately, add/delete/clear are easy to reconstruct for the indexMap\n\n// https://tc39.github.io/ecma262/#sec-set.prototype.add\nfunction observeAdd(this: IObservedSet, value: IIndexable | Primitive): ReturnType<typeof nativeAdd> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeAdd.call(this, value);\n  }\n  const oldSize = this.size;\n  nativeAdd.call(this, value);\n  const newSize = this.size;\n  if (newSize === oldSize) {\n    return this;\n  }\n  o.indexMap[oldSize] = -2;\n  o.callSubscribers('add', arguments, LifecycleFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-set.prototype.clear\nfunction observeClear(this: IObservedSet): ReturnType<typeof nativeClear>  {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeClear.call(this);\n  }\n  const size = this.size;\n  if (size > 0) {\n    const indexMap = o.indexMap;\n    let i = 0;\n    for (const entry of this.keys()) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      i++;\n    }\n    nativeClear.call(this);\n    indexMap.length = 0;\n    o.callSubscribers('clear', arguments, LifecycleFlags.isCollectionMutation);\n  }\n  return undefined;\n}\n\n// https://tc39.github.io/ecma262/#sec-set.prototype.delete\nfunction observeDelete(this: IObservedSet, value: IIndexable | Primitive): ReturnType<typeof nativeDelete> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeDelete.call(this, value);\n  }\n  const size = this.size;\n  if (size === 0) {\n    return false;\n  }\n  let i = 0;\n  const indexMap = o.indexMap;\n  for (const entry of this.keys()) {\n    if (entry === value) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      nativeSplice.call(indexMap, i, 1);\n      return nativeDelete.call(this, value);\n    }\n    i++;\n  }\n  o.callSubscribers('delete', arguments, LifecycleFlags.isCollectionMutation);\n  return false;\n}\n\nfor (const observe of [observeAdd, observeClear, observeDelete]) {\n  Object.defineProperty(observe, 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableSetObservation(): void {\n  if (proto.add['observing'] !== true) proto.add = observeAdd;\n  if (proto.clear['observing'] !== true) proto.clear = observeClear;\n  if (proto.delete['observing'] !== true) proto.delete = observeDelete;\n}\n\nenableSetObservation();\n\nexport function disableSetObservation(): void {\n  if (proto.add['observing'] === true) proto.add = nativeAdd;\n  if (proto.clear['observing'] === true) proto.clear = nativeClear;\n  if (proto.delete['observing'] === true) proto.delete = nativeDelete;\n}\n\nexport interface SetObserver extends ICollectionObserver<CollectionKind.set> {}\n\n@collectionObserver(CollectionKind.set)\nexport class SetObserver implements SetObserver {\n  public resetIndexMap: () => void;\n\n  public collection: IObservedSet;\n\n  constructor(lifecycle: ILifecycle, observedSet: IObservedSet) {\n    this.lifecycle = lifecycle;\n    observedSet.$observer = this;\n    this.collection = observedSet;\n    this.resetIndexMap();\n  }\n}\n\nexport function getSetObserver(lifecycle: ILifecycle, observedSet: IObservedSet): SetObserver {\n  return (observedSet.$observer as SetObserver) || new SetObserver(lifecycle, observedSet);\n}\n","import { DI } from '@aurelia/kernel';\nimport { INode } from '../dom';\n\nexport interface ISVGAnalyzer {\n  isStandardSvgAttribute(node: INode, attributeName: string): boolean;\n}\n\nexport const ISVGAnalyzer = DI.createInterface<ISVGAnalyzer>()\n  .withDefault(x => x.singleton(class {\n    public isStandardSvgAttribute(node: INode, attributeName: string): boolean {\n      return false;\n    }\n  })\n);\n","import { DI, IIndexable, inject, Primitive, Reporter } from '@aurelia/kernel';\nimport { DOM, IHTMLElement, IInputElement } from '../dom';\nimport { ILifecycle } from '../lifecycle';\nimport {\n  AccessorOrObserver, CollectionKind, CollectionObserver, IBindingContext,\n  IBindingTargetAccessor, IBindingTargetObserver, ICollectionObserver,\n  IObservable,  IObservedArray, IObservedMap, IObservedSet, IOverrideContext\n} from '../observation';\nimport { getArrayObserver } from './array-observer';\nimport { createComputedObserver } from './computed-observer';\nimport { IDirtyChecker } from './dirty-checker';\nimport { CheckedObserver, ISelectElement, SelectValueObserver, ValueAttributeObserver } from './element-observation';\nimport { IEventManager } from './event-manager';\nimport { getMapObserver } from './map-observer';\nimport { PrimitiveObserver, SetterObserver } from './property-observation';\nimport { getSetObserver } from './set-observer';\nimport { ISVGAnalyzer } from './svg-analyzer';\nimport { ClassAttributeAccessor, DataAttributeAccessor, ElementPropertyAccessor, PropertyAccessor, StyleAttributeAccessor, XLinkAttributeAccessor } from './target-accessors';\n\nconst toStringTag = Object.prototype.toString;\n\nexport interface IObjectObservationAdapter {\n  getObserver(object: IObservable, propertyName: string, descriptor: PropertyDescriptor): IBindingTargetObserver;\n}\n\nexport interface IObserverLocator {\n  getObserver(obj: IObservable, propertyName: string): AccessorOrObserver;\n  getAccessor(obj: IObservable, propertyName: string): IBindingTargetAccessor;\n  addAdapter(adapter: IObjectObservationAdapter): void;\n  getArrayObserver(observedArray: (IIndexable | Primitive)[]): ICollectionObserver<CollectionKind.array>;\n  getMapObserver(observedMap: Map<IIndexable | Primitive, IIndexable | Primitive>): ICollectionObserver<CollectionKind.map>;\n  getSetObserver(observedSet: Set<IIndexable | Primitive>): ICollectionObserver<CollectionKind.set>;\n}\n\nexport const IObserverLocator = DI.createInterface<IObserverLocator>()\n  .withDefault(x => x.singleton(ObserverLocator));\n\nfunction getPropertyDescriptor(subject: object, name: string): PropertyDescriptor {\n  let pd = Object.getOwnPropertyDescriptor(subject, name);\n  let proto = Object.getPrototypeOf(subject);\n\n  while (pd === undefined && proto !== null) {\n    pd = Object.getOwnPropertyDescriptor(proto, name);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return pd;\n}\n\n@inject(ILifecycle, IEventManager, IDirtyChecker, ISVGAnalyzer)\n/*@internal*/\nexport class ObserverLocator implements IObserverLocator {\n  private adapters: IObjectObservationAdapter[] = [];\n\n  constructor(\n    private lifecycle: ILifecycle,\n    private eventManager: IEventManager,\n    private dirtyChecker: IDirtyChecker,\n    private svgAnalyzer: ISVGAnalyzer\n  ) {}\n\n  public getObserver(obj: IObservable | IBindingContext | IOverrideContext, propertyName: string): AccessorOrObserver {\n    if (obj.$synthetic === true) {\n      return obj.getObservers().getOrCreate(obj, propertyName);\n    }\n    let observersLookup = obj.$observers;\n    let observer;\n\n    if (observersLookup && propertyName in observersLookup) {\n      return observersLookup[propertyName];\n    }\n\n    observer = this.createPropertyObserver(obj, propertyName);\n\n    if (!observer.doNotCache) {\n      if (observersLookup === undefined) {\n        observersLookup = this.getOrCreateObserversLookup(obj);\n      }\n\n      observersLookup[propertyName] = observer;\n    }\n\n    return observer;\n  }\n\n  public addAdapter(adapter: IObjectObservationAdapter): void {\n    this.adapters.push(adapter);\n  }\n\n  public getAccessor(obj: IObservable, propertyName: string): IBindingTargetAccessor {\n    if (DOM.isNodeInstance(obj)) {\n      const tagName = obj['tagName'];\n      // this check comes first for hot path optimization\n      if (propertyName === 'textContent') {\n        return new ElementPropertyAccessor(this.lifecycle, obj, propertyName);\n      }\n\n      // TODO: optimize and make pluggable\n      if (propertyName === 'class' || propertyName === 'style' || propertyName === 'css'\n        || propertyName === 'value' && (tagName === 'INPUT' || tagName === 'SELECT')\n        || propertyName === 'checked' && tagName === 'INPUT'\n        || propertyName === 'model' && tagName === 'INPUT'\n        || /^xlink:.+$/.exec(propertyName)) {\n        return this.getObserver(obj, propertyName);\n      }\n\n      if (/^\\w+:|^data-|^aria-/.test(propertyName)\n        || this.svgAnalyzer.isStandardSvgAttribute(obj, propertyName)\n        || tagName === 'IMG' && propertyName === 'src'\n        || tagName === 'A' && propertyName === 'href'\n      ) {\n        return new DataAttributeAccessor(this.lifecycle, obj, propertyName);\n      }\n      return new ElementPropertyAccessor(this.lifecycle, obj, propertyName);\n    }\n\n    return new PropertyAccessor(obj, propertyName);\n  }\n\n  public getArrayObserver(observedArray: IObservedArray): ICollectionObserver<CollectionKind.array> {\n    return getArrayObserver(this.lifecycle, observedArray);\n  }\n\n  public getMapObserver(observedMap: IObservedMap): ICollectionObserver<CollectionKind.map>  {\n    return getMapObserver(this.lifecycle, observedMap);\n  }\n\n  public getSetObserver(observedSet: IObservedSet): ICollectionObserver<CollectionKind.set>  {\n    return getSetObserver(this.lifecycle, observedSet);\n  }\n\n  private getOrCreateObserversLookup(obj: IObservable): Record<string, AccessorOrObserver | IBindingTargetObserver> {\n    return obj.$observers || this.createObserversLookup(obj);\n  }\n\n  private createObserversLookup(obj: IObservable): Record<string, IBindingTargetObserver> {\n    const value: Record<string, IBindingTargetObserver> = {};\n    if (!Reflect.defineProperty(obj, '$observers', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    })) {\n      Reporter.write(0, obj);\n    }\n    return value;\n  }\n\n  private getAdapterObserver(obj: IObservable, propertyName: string, descriptor: PropertyDescriptor): IBindingTargetObserver | null {\n    for (let i = 0, ii = this.adapters.length; i < ii; i++) {\n      const adapter = this.adapters[i];\n      const observer = adapter.getObserver(obj, propertyName, descriptor);\n      if (observer) {\n        return observer;\n      }\n    }\n    return null;\n  }\n\n  private createPropertyObserver(obj: IObservable, propertyName: string): AccessorOrObserver {\n    if (!(obj instanceof Object)) {\n      return new PrimitiveObserver(obj, propertyName) as IBindingTargetAccessor;\n    }\n\n    let isNode: boolean;\n    if (DOM.isNodeInstance(obj)) {\n      if (propertyName === 'class') {\n        return new ClassAttributeAccessor(this.lifecycle, obj);\n      }\n\n      if (propertyName === 'style' || propertyName === 'css') {\n        return new StyleAttributeAccessor(this.lifecycle, <IHTMLElement>obj);\n      }\n\n      const tagName = obj['tagName'];\n      const handler = this.eventManager.getElementHandler(obj, propertyName);\n      if (propertyName === 'value' && tagName === 'SELECT') {\n        return new SelectValueObserver(this.lifecycle, <ISelectElement>obj, handler, this);\n      }\n\n      if (propertyName === 'checked' && tagName === 'INPUT') {\n        return new CheckedObserver(this.lifecycle, <IInputElement>obj, handler, this);\n      }\n\n      if (handler) {\n        return new ValueAttributeObserver(this.lifecycle, obj, propertyName, handler);\n      }\n\n      const xlinkResult = /^xlink:(.+)$/.exec(propertyName);\n      if (xlinkResult) {\n        return new XLinkAttributeAccessor(this.lifecycle, <IHTMLElement>obj, propertyName, xlinkResult[1]);\n      }\n\n      if (propertyName === 'role'\n        || /^\\w+:|^data-|^aria-/.test(propertyName)\n        || this.svgAnalyzer.isStandardSvgAttribute(obj, propertyName)) {\n        return new DataAttributeAccessor(this.lifecycle, obj, propertyName);\n      }\n      isNode = true;\n    }\n\n    const tag = toStringTag.call(obj);\n    switch (tag) {\n      case '[object Array]':\n        if (propertyName === 'length') {\n          return this.getArrayObserver(<IObservedArray>obj).getLengthObserver();\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      case '[object Map]':\n        if (propertyName === 'size') {\n          return this.getMapObserver(<IObservedMap>obj).getLengthObserver();\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      case '[object Set]':\n        if (propertyName === 'size') {\n          return this.getSetObserver(<IObservedSet>obj).getLengthObserver();\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n    }\n\n    const descriptor = getPropertyDescriptor(obj, propertyName) as PropertyDescriptor & {\n      // tslint:disable-next-line:no-reserved-keywords\n      get: PropertyDescriptor['get'] & { getObserver(obj: IObservable): IBindingTargetObserver };\n    };\n\n    if (descriptor) {\n      if (descriptor.get || descriptor.set) {\n        if (descriptor.get && descriptor.get.getObserver) {\n          return descriptor.get.getObserver(obj);\n        }\n\n        // attempt to use an adapter before resorting to dirty checking.\n        const adapterObserver = this.getAdapterObserver(obj, propertyName, descriptor);\n        if (adapterObserver) {\n          return adapterObserver;\n        }\n        if (isNode) {\n          // TODO: use MutationObserver\n          return this.dirtyChecker.createProperty(obj, propertyName);\n        }\n\n        return createComputedObserver(this, this.dirtyChecker, this.lifecycle, obj, propertyName, descriptor);\n      }\n    }\n    return new SetterObserver(obj, propertyName);\n  }\n}\n\nexport function getCollectionObserver(lifecycle: ILifecycle, collection: IObservedMap | IObservedSet | IObservedArray): CollectionObserver {\n  switch (toStringTag.call(collection)) {\n    case '[object Array]':\n      return getArrayObserver(lifecycle, <IObservedArray>collection);\n    case '[object Map]':\n      return getMapObserver(lifecycle, <IObservedMap>collection);\n    case '[object Set]':\n      return getSetObserver(lifecycle, <IObservedSet>collection);\n  }\n  return null;\n}\n","import { inject, IRegistry, Reporter } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '../../observation';\nimport { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { BindingMode } from '../binding-mode';\nimport { CheckedObserver, SelectValueObserver, ValueAttributeObserver } from '../element-observation';\nimport { EventSubscriber, IEventSubscriber } from '../event-manager';\nimport { IObserverLocator } from '../observer-locator';\n\nexport type UpdateTriggerableObserver = ((ValueAttributeObserver & Required<ValueAttributeObserver>) | (CheckedObserver & Required<CheckedObserver>) | (SelectValueObserver & Required<SelectValueObserver>)) & {\n  originalHandler?: IEventSubscriber;\n};\n\nexport type UpdateTriggerableBinding = Binding & {\n  targetObserver: UpdateTriggerableObserver;\n};\n\n@bindingBehavior('updateTrigger')\n@inject(IObserverLocator)\nexport class UpdateTriggerBindingBehavior {\n  public static register: IRegistry['register'];\n\n  constructor(private observerLocator: IObserverLocator) {}\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: UpdateTriggerableBinding, ...events: string[]): void {\n    if (events.length === 0) {\n      throw Reporter.error(9);\n    }\n\n    if (binding.mode !== BindingMode.twoWay && binding.mode !== BindingMode.fromView) {\n      throw Reporter.error(10);\n    }\n\n    // ensure the binding's target observer has been set.\n    const targetObserver = <UpdateTriggerableObserver>this.observerLocator.getObserver(binding.target, binding.targetProperty);\n    if (!targetObserver.handler) {\n      throw Reporter.error(10);\n    }\n\n    binding.targetObserver = targetObserver;\n\n    // stash the original element subscribe function.\n    targetObserver.originalHandler = binding.targetObserver.handler;\n\n    // replace the element subscribe function with one that uses the correct events.\n    targetObserver.handler = new EventSubscriber(events);\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: UpdateTriggerableBinding): void {\n    // restore the state of the binding.\n    binding.targetObserver.handler.dispose();\n    binding.targetObserver.handler = binding.targetObserver.originalHandler;\n    binding.targetObserver.originalHandler = null;\n  }\n}\n","import { IIndexable, IServiceLocator, Primitive } from '@aurelia/kernel';\nimport { INode } from '../dom';\nimport { IBindScope, State } from '../lifecycle';\nimport { IAccessor, IScope, LifecycleFlags } from '../observation';\nimport { hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { IConnectableBinding } from './connectable';\nimport { IObserverLocator } from './observer-locator';\n\nexport interface Call extends IConnectableBinding {}\nexport class Call {\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $state: State = State.none;\n  public $scope: IScope;\n\n  public targetObserver: IAccessor;\n\n  constructor(\n    public sourceExpression: IsBindingBehavior,\n    target: INode,\n    targetProperty: string,\n    observerLocator: IObserverLocator,\n    public locator: IServiceLocator) {\n    this.targetObserver = observerLocator.getObserver(target, targetProperty);\n  }\n\n  public callSource(args: IIndexable): Primitive | IIndexable {\n    const overrideContext = this.$scope.overrideContext;\n    Object.assign(overrideContext, args);\n    const result = this.sourceExpression.evaluate(LifecycleFlags.mustEvaluate, this.$scope, this.locator);\n\n    for (const prop in args) {\n      delete overrideContext[prop];\n    }\n\n    return result;\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.targetObserver.setValue($args => this.callSource($args), flags);\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.targetObserver.setValue(null, flags);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n  }\n\n  public observeProperty(obj: StrictAny, propertyName: StrictAny): void {\n    return;\n  }\n\n  public handleChange(newValue: StrictAny, previousValue: StrictAny, flags: LifecycleFlags): void {\n    return;\n  }\n}\n","import { DI, PLATFORM, Reporter } from '@aurelia/kernel';\nimport { AccessMember, AccessScope, CallMember, CallScope, ExpressionKind, ForOfStatement, Interpolation, IsBindingBehavior, PrimitiveLiteral } from './ast';\n\nexport interface IExpressionParser {\n  cache(expressions: Record<string, Interpolation | ForOfStatement | IsBindingBehavior>): void;\n  parse(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  parse(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  parse(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  parse(expression: string, bindingType: BindingType): Interpolation | ForOfStatement | IsBindingBehavior;\n}\n\nexport const IExpressionParser = DI.createInterface<IExpressionParser>()\n  .withDefault(x => x.singleton(ExpressionParser));\n\n/*@internal*/\nexport class ExpressionParser implements IExpressionParser {\n  private expressionLookup: Record<string, IsBindingBehavior>;\n  private interpolationLookup: Record<string, Interpolation>;\n  private forOfLookup: Record<string, ForOfStatement>;\n  constructor() {\n    this.expressionLookup = Object.create(null);\n    this.interpolationLookup = Object.create(null);\n    this.forOfLookup = Object.create(null);\n  }\n\n  public parse(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  public parse(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  public parse(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  public parse(expression: string, bindingType: BindingType): Interpolation | ForOfStatement | IsBindingBehavior {\n    switch (bindingType) {\n      case BindingType.Interpolation:\n      {\n        let found = this.interpolationLookup[expression];\n        if (found === undefined) {\n          found = this.interpolationLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n      case BindingType.ForCommand:\n      {\n        let found = this.forOfLookup[expression];\n        if (found === undefined) {\n          found = this.forOfLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n      default:\n      {\n        // Allow empty strings for normal bindings and those that are empty by default (such as a custom attribute without an equals sign)\n        // But don't cache it, because empty strings are always invalid for any other type of binding\n        if (expression.length === 0 && (bindingType & (BindingType.BindCommand | BindingType.OneTimeCommand | BindingType.ToViewCommand))) {\n          return PrimitiveLiteral.$empty;\n        }\n        let found = this.expressionLookup[expression];\n        if (found === undefined) {\n          found = this.expressionLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n    }\n  }\n\n  public cache(expressions: Record<string, Interpolation | ForOfStatement | IsBindingBehavior>): void {\n    const { forOfLookup, expressionLookup, interpolationLookup } = this;\n    for (const expression in expressions) {\n      const expr = expressions[expression];\n      switch (expr.$kind) {\n        case ExpressionKind.Interpolation:\n          interpolationLookup[expression] = expr;\n          break;\n        case ExpressionKind.ForOfStatement:\n          forOfLookup[expression] = expr;\n          break;\n        default:\n          expressionLookup[expression] = expr;\n      }\n    }\n  }\n\n  private parseCore(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  private parseCore(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  private parseCore(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  private parseCore(expression: string, bindingType: BindingType): Interpolation | ForOfStatement | IsBindingBehavior {\n    try {\n      const parts = expression.split('.');\n      const firstPart = parts[0];\n      let current: Interpolation | ForOfStatement | IsBindingBehavior;\n\n      if (firstPart.endsWith('()')) {\n        current = new CallScope(firstPart.replace('()', ''), PLATFORM.emptyArray);\n      } else {\n        current = new AccessScope(parts[0]);\n      }\n\n      let index = 1;\n\n      while (index < parts.length) {\n        const currentPart = parts[index];\n\n        if (currentPart.endsWith('()')) {\n          current = new CallMember(current, currentPart.replace('()', ''), PLATFORM.emptyArray);\n        } else {\n          current = new AccessMember(current, parts[index]);\n        }\n\n        index++;\n      }\n\n      return current;\n    } catch (e) {\n      throw Reporter.error(3, e);\n    }\n  }\n}\n\nexport const enum BindingType {\n              None = 0,\n     Interpolation = 0b10000000_0000,\n        IsRef      = 0b01010000_0000,\n        IsIterator = 0b00100000_0000,\n        IsCustom   = 0b00010000_0000,\n        IsFunction = 0b00001000_0000,\n        IsEvent    = 0b00000100_0000,\n        IsProperty = 0b00000010_0000,\n        IsCommand  = 0b00000001_0000,\nIsPropertyCommand  = 0b00000011_0000,\n   IsEventCommand  = 0b00000101_0000,\nDelegationStrategyDelta =     0b0110,\n           Command =          0b1111,\n    OneTimeCommand = 0b00000011_0001,\n     ToViewCommand = 0b00000011_0010,\n   FromViewCommand = 0b00000011_0011,\n     TwoWayCommand = 0b00000011_0100,\n       BindCommand = 0b00000011_0101,\n    TriggerCommand = 0b00000101_0110,\n    CaptureCommand = 0b00000101_0111,\n   DelegateCommand = 0b00000101_1000,\n       CallCommand = 0b00001001_1001,\n    OptionsCommand = 0b00000001_1010,\n        ForCommand = 0b00100001_1011,\n     CustomCommand = 0b00010001_1100\n}\n","import { IServiceLocator } from '@aurelia/kernel';\nimport { IBindScope, State } from '../lifecycle';\nimport { IBindingTargetAccessor, IScope, LifecycleFlags } from '../observation';\nimport { IExpression, Interpolation } from './ast';\nimport { IBinding, IBindingTarget } from './binding';\nimport { BindingMode } from './binding-mode';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\nimport { IObserverLocator } from './observer-locator';\n\n// tslint:disable:no-any\n\nconst { toView, oneTime } = BindingMode;\n\nexport class MultiInterpolationBinding implements IBinding {\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $state: State = State.none;\n\n  public $scope: IScope = null;\n\n  public parts: InterpolationBinding[];\n\n  constructor(\n    public observerLocator: IObserverLocator,\n    public interpolation: Interpolation,\n    public target: IBindingTarget,\n    public targetProperty: string,\n    public mode: BindingMode,\n    public locator: IServiceLocator) {\n\n    // Note: the child expressions of an Interpolation expression are full Aurelia expressions, meaning they may include\n    // value converters and binding behaviors.\n    // Each expression represents one ${interpolation}, and for each we create a child TextBinding unless there is only one,\n    // in which case the renderer will create the TextBinding directly\n    const expressions = interpolation.expressions;\n    const parts = this.parts = Array(expressions.length);\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      parts[i] = new InterpolationBinding(expressions[i], interpolation, target, targetProperty, mode, observerLocator, locator, i === 0);\n    }\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n    this.$state |= State.isBound;\n    this.$scope = scope;\n\n    const parts = this.parts;\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      parts[i].$bind(flags, scope);\n    }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    this.$state &= ~State.isBound;\n    this.$scope = null;\n    const parts = this.parts;\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      parts[i].$unbind(flags);\n    }\n  }\n}\n\nexport interface InterpolationBinding extends IConnectableBinding {}\n\n@connectable()\nexport class InterpolationBinding implements IPartialConnectableBinding {\n  public $scope: IScope;\n  public $state: State = State.none;\n\n  public targetObserver: IBindingTargetAccessor;\n\n  constructor(\n    public sourceExpression: IExpression,\n    public interpolation: Interpolation,\n    public target: IBindingTarget,\n    public targetProperty: string,\n    public mode: BindingMode,\n    public observerLocator: IObserverLocator,\n    public locator: IServiceLocator,\n    public isFirst: boolean) {\n\n    this.targetObserver = observerLocator.getAccessor(target, targetProperty);\n  }\n\n  public updateTarget(value: any, flags: LifecycleFlags): void {\n    this.targetObserver.setValue(value, flags | LifecycleFlags.updateTargetInstance);\n  }\n\n  public handleChange(newValue: any, previousValue: any, flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n\n    previousValue = this.targetObserver.getValue();\n    newValue = this.interpolation.evaluate(flags, this.$scope, this.locator);\n    if (newValue !== previousValue) {\n      this.updateTarget(newValue, flags);\n    }\n\n    if ((this.mode & oneTime) === 0) {\n      this.version++;\n      this.sourceExpression.connect(flags, this.$scope, this);\n      this.unobserve(false);\n    }\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n\n    this.$state |= State.isBound;\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    // since the interpolation already gets the whole value, we only need to let the first\n    // text binding do the update if there are multiple\n    if (this.isFirst) {\n      this.updateTarget(this.interpolation.evaluate(flags, scope, this.locator), flags);\n    }\n    if (this.mode & toView) {\n      sourceExpression.connect(flags, scope, this);\n    }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    this.$state &= ~State.isBound;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.unobserve(true);\n  }\n}\n","import { IServiceLocator, Reporter } from '@aurelia/kernel';\nimport { IBindScope, ILifecycle, State } from '../lifecycle';\nimport { IScope, LifecycleFlags } from '../observation';\nimport { IExpression, StrictAny } from './ast';\nimport { IBindingTarget } from './binding';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\nimport { IObserverLocator } from './observer-locator';\n\nexport interface LetBinding extends IConnectableBinding {}\n\n@connectable()\nexport class LetBinding implements IPartialConnectableBinding {\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $state: State = State.none;\n  public $scope: IScope = null;\n  public $lifecycle: ILifecycle;\n\n  public target: IBindingTarget = null;\n\n  constructor(\n    public sourceExpression: IExpression,\n    public targetProperty: string,\n    public observerLocator: IObserverLocator,\n    public locator: IServiceLocator,\n    private toViewModel: boolean = false) {\n    this.$lifecycle = locator.get(ILifecycle);\n  }\n\n  public handleChange(newValue: StrictAny, previousValue: StrictAny, flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n\n    if (flags & LifecycleFlags.updateTargetInstance) {\n      const { target, targetProperty } = this;\n      previousValue = target[targetProperty];\n      newValue = this.sourceExpression.evaluate(flags, this.$scope, this.locator);\n      if (newValue !== previousValue) {\n        target[targetProperty] = newValue;\n      }\n      return;\n    }\n\n    throw Reporter.error(15, flags);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n    this.target = this.toViewModel ? scope.bindingContext : scope.overrideContext;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(flags, scope, this);\n    }\n    // sourceExpression might have been changed during bind\n    this.target[this.targetProperty] = this.sourceExpression.evaluate(LifecycleFlags.fromBind, scope, this.locator);\n    this.sourceExpression.connect(flags, scope, this);\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n    this.unobserve(true);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n  }\n}\n","import { IDisposable, IServiceLocator } from '@aurelia/kernel';\nimport { INode } from '../dom';\nimport { IBindScope, State } from '../lifecycle';\nimport { IScope, LifecycleFlags } from '../observation';\nimport { hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { IBinding } from './binding';\nimport { IConnectableBinding } from './connectable';\nimport { DelegationStrategy, IEventManager } from './event-manager';\n\nexport interface Listener extends IConnectableBinding {}\nexport class Listener implements IBinding {\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $state: State = State.none;\n\n  public $scope: IScope;\n\n  private handler: IDisposable;\n\n  constructor(\n    public targetEvent: string,\n    public delegationStrategy: DelegationStrategy,\n    public sourceExpression: IsBindingBehavior,\n    public target: INode,\n    public preventDefault: boolean,\n    private eventManager: IEventManager,\n    public locator: IServiceLocator) { }\n\n  public callSource(event: Event): ReturnType<IsBindingBehavior['evaluate']> {\n    const overrideContext = this.$scope.overrideContext;\n    overrideContext['$event'] = event;\n\n    const result = this.sourceExpression.evaluate(LifecycleFlags.mustEvaluate, this.$scope, this.locator);\n\n    delete overrideContext['$event'];\n\n    if (result !== true && this.preventDefault) {\n      event.preventDefault();\n    }\n\n    return result;\n  }\n\n  public handleEvent(event: Event): void {\n    this.callSource(event);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.handler = this.eventManager.addEventListener(\n      this.target,\n      this.targetEvent,\n      this,\n      this.delegationStrategy\n    );\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.handler.dispose();\n    this.handler = null;\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n  }\n  // tslint:disable:no-empty no-any\n  public observeProperty(obj: StrictAny, propertyName: StrictAny): void { }\n  public handleChange(newValue: any, previousValue: any, flags: LifecycleFlags): void { }\n  // tslint:enable:no-empty no-any\n}\n","import { IServiceLocator } from '@aurelia/kernel';\nimport { IBindScope, State } from '../lifecycle';\nimport { IScope, LifecycleFlags } from '../observation';\nimport { hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { IBinding, IBindingTarget } from './binding';\nimport { IConnectableBinding } from './connectable';\n\nexport interface Ref extends IConnectableBinding {}\nexport class Ref implements IBinding {\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $state: State = State.none;\n\n  public $scope: IScope;\n\n  constructor(\n    public sourceExpression: IsBindingBehavior,\n    public target: IBindingTarget,\n    public locator: IServiceLocator) { }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.sourceExpression.assign(flags, this.$scope, this.locator, this.target);\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    if (this.sourceExpression.evaluate(flags, this.$scope, this.locator) === this.target) {\n      this.sourceExpression.assign(flags, this.$scope, this.locator, null);\n    }\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n  }\n  // tslint:disable:no-empty no-any\n  public observeProperty(obj: StrictAny, propertyName: StrictAny): void { }\n  public handleChange(newValue: any, previousValue: any, flags: LifecycleFlags): void { }\n  // tslint:enable:no-empty no-any\n}\n","// tslint:disable:no-reserved-keywords\nimport { Constructable, DI, Immutable, Omit, PLATFORM } from '@aurelia/kernel';\nimport { ForOfStatement, Interpolation, IsBindingBehavior } from './binding/ast';\nimport { BindingMode } from './binding/binding-mode';\nimport { DelegationStrategy } from './binding/event-manager';\nimport { INode } from './dom';\nimport { ResourceDescription } from './resource';\nimport { ICustomElement, ICustomElementHost } from './templating/lifecycle-render';\n\n/*@internal*/\nexport const customElementName = 'custom-element';\n/*@internal*/\nexport function customElementKey(name: string): string {\n  return `${customElementName}:${name}`;\n}\n/*@internal*/\nexport function customElementBehavior(node: ICustomElementHost): ICustomElement {\n  return node.$customElement === undefined ? null : node.$customElement;\n}\n\n/*@internal*/\nexport const customAttributeName = 'custom-attribute';\n/*@internal*/\nexport function customAttributeKey(name: string): string {\n  return `${customAttributeName}:${name}`;\n}\n\nexport type BindableSource = Omit<IBindableDescription, 'property'>;\n\nexport interface IBindableDescription {\n  mode?: BindingMode;\n  callback?: string;\n  attribute?: string;\n  property?: string;\n}\n\nexport const enum TargetedInstructionType {\n  textBinding = 'a',\n  interpolation = 'b',\n  propertyBinding = 'c',\n  iteratorBinding = 'd',\n  listenerBinding = 'e',\n  callBinding = 'f',\n  refBinding = 'g',\n  stylePropertyBinding = 'h',\n  setProperty = 'i',\n  setAttribute = 'j',\n  hydrateElement = 'k',\n  hydrateAttribute = 'l',\n  hydrateTemplateController = 'm',\n  letElement = 'n',\n  letBinding = 'o'\n}\n\nconst instructionTypeValues = 'abcdefghijkl';\n\nexport interface IBuildInstruction {\n  required: boolean;\n  compiler?: string;\n}\n\nexport interface ITemplateDefinition {\n  name?: string;\n  cache?: '*' | number;\n  template?: string | INode;\n  instructions?: TargetedInstruction[][];\n  dependencies?: any[];\n  build?: IBuildInstruction;\n  surrogates?: TargetedInstruction[];\n  bindables?: Record<string, IBindableDescription>;\n  containerless?: boolean;\n  shadowOptions?: ShadowRootInit;\n  hasSlots?: boolean;\n}\n\nexport type TemplateDefinition = ResourceDescription<ITemplateDefinition>;\nexport type TemplatePartDefinitions = Record<string, Immutable<ITemplateDefinition>>;\nexport type BindableDefinitions = Record<string, Immutable<IBindableDescription>>;\n\nexport interface IAttributeDefinition {\n  name: string;\n  defaultBindingMode?: BindingMode;\n  aliases?: string[];\n  isTemplateController?: boolean;\n  bindables?: Record<string, IBindableDescription>;\n}\n\nexport type AttributeDefinition = Immutable<Required<IAttributeDefinition>> | null;\n\nexport const ITargetedInstruction = DI.createInterface<ITargetedInstruction>();\nexport interface ITargetedInstruction {\n  type: TargetedInstructionType;\n}\n\nexport type TargetedInstruction =\n  ITextBindingInstruction |\n  IInterpolationInstruction |\n  IPropertyBindingInstruction |\n  IIteratorBindingInstruction |\n  IListenerBindingInstruction |\n  ICallBindingInstruction |\n  IRefBindingInstruction |\n  IStylePropertyBindingInstruction |\n  ISetPropertyInstruction |\n  ISetAttributeInstruction |\n  IHydrateElementInstruction |\n  IHydrateAttributeInstruction |\n  IHydrateTemplateController |\n  ILetElementInstruction;\n\nexport function isTargetedInstruction(value: { type?: string }): value is TargetedInstruction {\n  const type = value.type;\n  return typeof type === 'string' && instructionTypeValues.indexOf(type) !== -1;\n}\n\nexport interface ITextBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.textBinding;\n  from: string | Interpolation;\n}\n\nexport interface IInterpolationInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.interpolation;\n  from: string | Interpolation;\n  to: string;\n}\n\nexport interface IInterpolationInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.interpolation;\n  from: string | Interpolation;\n  to: string;\n}\n\nexport interface IPropertyBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.propertyBinding;\n  mode: BindingMode;\n  from: string | IsBindingBehavior;\n  to: string;\n  oneTime?: boolean;\n}\n\nexport interface IIteratorBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.iteratorBinding;\n  from: string | ForOfStatement;\n  to: string;\n}\n\nexport interface IListenerBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.listenerBinding;\n  from: string | IsBindingBehavior;\n  to: string;\n  strategy: DelegationStrategy;\n  preventDefault: boolean;\n}\n\nexport interface ICallBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.callBinding;\n  from: string | IsBindingBehavior;\n  to: string;\n}\n\nexport interface IRefBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.refBinding;\n  from: string | IsBindingBehavior;\n}\n\nexport interface IStylePropertyBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.stylePropertyBinding;\n  from: string | IsBindingBehavior;\n  to: string;\n}\n\nexport interface ISetPropertyInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.setProperty;\n  value: unknown;\n  to: string;\n}\n\nexport interface ISetAttributeInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.setAttribute;\n  value: unknown;\n  to: string;\n}\n\nexport interface IHydrateElementInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateElement;\n  res: string;\n  instructions: TargetedInstruction[];\n  parts?: Record<string, ITemplateDefinition>;\n}\n\nexport interface IHydrateAttributeInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateAttribute;\n  res: string;\n  instructions: TargetedInstruction[];\n}\n\nexport interface IHydrateTemplateController extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateTemplateController;\n  res: string;\n  instructions: TargetedInstruction[];\n  def: ITemplateDefinition;\n  link?: boolean;\n}\n\nexport interface ILetElementInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.letElement;\n  instructions: ILetBindingInstruction[];\n  toViewModel: boolean;\n}\n\nexport interface ILetBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.letBinding;\n  from: string | IsBindingBehavior | Interpolation;\n  to: string;\n}\n\ntype CustomElementStaticProperties = Pick<TemplateDefinition, 'containerless' | 'shadowOptions' | 'bindables'>;\ntype CustomAttributeStaticProperties = Pick<AttributeDefinition, 'bindables'>;\n\nexport type CustomElementConstructor = Constructable & CustomElementStaticProperties;\nexport type CustomAttributeConstructor = Constructable & CustomAttributeStaticProperties;\n\n/*@internal*/\nexport const buildRequired: IBuildInstruction = Object.freeze({\n  required: true,\n  compiler: 'default'\n});\n\nconst buildNotRequired: IBuildInstruction = Object.freeze({\n  required: false,\n  compiler: 'default'\n});\n\n// Note: this is a little perf thing; having one predefined class with the properties always\n// assigned in the same order ensures the browser can keep reusing the same generated hidden\n// class\nclass DefaultTemplateDefinition implements Required<ITemplateDefinition> {\n  public name: ITemplateDefinition['name'];\n  public cache: ITemplateDefinition['cache'];\n  public template: ITemplateDefinition['template'];\n  public instructions: ITemplateDefinition['instructions'];\n  public dependencies: ITemplateDefinition['dependencies'];\n  public build: ITemplateDefinition['build'];\n  public surrogates: ITemplateDefinition['surrogates'];\n  public bindables: ITemplateDefinition['bindables'];\n  public containerless: ITemplateDefinition['containerless'];\n  public shadowOptions: ITemplateDefinition['shadowOptions'];\n  public hasSlots: ITemplateDefinition['hasSlots'];\n\n  constructor() {\n    this.name = 'unnamed';\n    this.template = null;\n    this.cache = 0;\n    this.build = buildNotRequired;\n    this.bindables = PLATFORM.emptyObject;\n    this.instructions = <this['instructions']>PLATFORM.emptyArray;\n    this.dependencies = <this['dependencies']>PLATFORM.emptyArray;\n    this.surrogates = <this['surrogates']>PLATFORM.emptyArray;\n    this.containerless = false;\n    this.shadowOptions = null;\n    this.hasSlots = false;\n  }\n}\n\nconst templateDefinitionAssignables = [\n  'name',\n  'template',\n  'cache',\n  'build',\n  'containerless',\n  'shadowOptions',\n  'hasSlots'\n];\n\nconst templateDefinitionArrays = [\n  'instructions',\n  'dependencies',\n  'surrogates'\n];\n\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor,\n  name: string): TemplateDefinition;\nexport function buildTemplateDefinition(\n  ctor: null,\n  def: Immutable<ITemplateDefinition>): TemplateDefinition;\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor | null,\n  nameOrDef: string | Immutable<ITemplateDefinition>): TemplateDefinition;\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor | null,\n  name: string | null,\n  template: string | INode,\n  cache?: number | '*' | null,\n  build?: IBuildInstruction | boolean | null,\n  bindables?: Record<string, IBindableDescription> | null,\n  instructions?: ReadonlyArray<ReadonlyArray<TargetedInstruction>> | null,\n  dependencies?: ReadonlyArray<unknown> | null,\n  surrogates?: ReadonlyArray<TargetedInstruction> | null,\n  containerless?: boolean | null,\n  shadowOptions?: { mode: 'open' | 'closed' } | null,\n  hasSlots?: boolean | null): TemplateDefinition;\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor | null,\n  nameOrDef: string | Immutable<ITemplateDefinition> | null,\n  template?: string | INode | null,\n  cache?: number | '*' | null,\n  build?: IBuildInstruction | boolean | null,\n  bindables?: Record<string, IBindableDescription> | null,\n  instructions?: ReadonlyArray<ReadonlyArray<TargetedInstruction>> | null,\n  dependencies?: ReadonlyArray<unknown> | null,\n  surrogates?: ReadonlyArray<TargetedInstruction> | null,\n  containerless?: boolean | null,\n  shadowOptions?: { mode: 'open' | 'closed' } | null,\n  hasSlots?: boolean | null): TemplateDefinition {\n\n  const def = new DefaultTemplateDefinition();\n\n  // all cases fall through intentionally\n  const argLen = arguments.length;\n  switch (argLen) {\n    case 12: if (hasSlots !== null) def.hasSlots = hasSlots;\n    case 11: if (shadowOptions !== null) def.shadowOptions = shadowOptions;\n    case 10: if (containerless !== null) def.containerless = containerless;\n    case 9: if (surrogates !== null) def.surrogates = PLATFORM.toArray(surrogates);\n    case 8: if (dependencies !== null) def.dependencies = PLATFORM.toArray(dependencies);\n    case 7: if (instructions !== null) def.instructions = <TargetedInstruction[][]>PLATFORM.toArray(instructions);\n    case 6: if (bindables !== null) def.bindables = { ...bindables };\n    case 5: if (build !== null) def.build = build === true ? buildRequired : build === false ? buildNotRequired : { ...build };\n    case 4: if (cache !== null) def.cache = cache;\n    case 3: if (template !== null) def.template = template;\n    case 2:\n      if (ctor !== null) {\n        if (ctor['bindables']) {\n          def.bindables = { ...ctor.bindables };\n        }\n        if (ctor['containerless']) {\n          def.containerless = ctor.containerless;\n        }\n        if (ctor['shadowOptions']) {\n          def.shadowOptions = ctor.shadowOptions;\n        }\n      }\n      if (typeof nameOrDef === 'string') {\n        if (nameOrDef.length > 0) {\n          def.name = nameOrDef;\n        }\n      } else if (nameOrDef !== null) {\n        templateDefinitionAssignables.forEach(prop => {\n          if (nameOrDef[prop]) {\n            def[prop] = nameOrDef[prop];\n          }\n        });\n        templateDefinitionArrays.forEach(prop => {\n          if (nameOrDef[prop]) {\n            def[prop] = PLATFORM.toArray(nameOrDef[prop]);\n          }\n        });\n        if (nameOrDef['bindables']) {\n          if (def.bindables === PLATFORM.emptyObject) {\n            def.bindables = { ...nameOrDef.bindables };\n          } else {\n            Object.assign(def.bindables, nameOrDef.bindables);\n          }\n        }\n      }\n  }\n\n  // special handling for invocations that quack like a @customElement decorator\n  if (argLen === 2 && ctor !== null) {\n    if (typeof nameOrDef === 'string' || !('build' in nameOrDef)) {\n      def.build = buildRequired;\n    }\n  }\n\n  return def;\n}\n","import { Constructable, PLATFORM } from '@aurelia/kernel';\nimport { BindingMode } from '../binding/binding-mode';\nimport { BindableSource, IBindableDescription } from '../definitions';\n\ntype WithBindables = { bindables: Record<string, IBindableDescription> };\ntype BindableDecorator = <T extends InstanceType<Constructable & Partial<WithBindables>>>\n  (target: T, prop: string) => void;\n\n/**\n * Decorator: Specifies custom behavior for a bindable property.\n * @param config The overrides\n */\nexport function bindable(config?: BindableSource): BindableDecorator;\n/**\n * Decorator: Specifies a bindable property on a class.\n * @param prop The property name\n */\nexport function bindable(prop: string): ClassDecorator;\n/**\n * Decorator: Specifies a bindable property on a class.\n * @param target The class\n * @param prop The property name\n */\nexport function bindable<T extends InstanceType<Constructable & Partial<WithBindables>>>(target: T, prop: string): void;\nexport function bindable<T extends InstanceType<Constructable & Partial<WithBindables>>>(configOrTarget?: BindableSource | T, prop?: string): void | BindableDecorator | ClassDecorator {\n  let config: IBindableDescription;\n\n  const decorator = function decorate($target: T, $prop: string): void {\n    const Type = $target.constructor as Constructable & Partial<WithBindables>;\n    let bindables = Type.bindables;\n    if (bindables === undefined) {\n      bindables = Type.bindables = {};\n    }\n    if (!config.attribute) {\n      config.attribute = PLATFORM.kebabCase($prop);\n    }\n    if (!config.callback) {\n      config.callback = `${$prop}Changed`;\n    }\n    if (config.mode === undefined) {\n      config.mode = BindingMode.toView;\n    }\n    if (arguments.length > 1) {\n      // Non invocation:\n      // - @bindable\n      // Invocation with or w/o opts:\n      // - @bindable()\n      // - @bindable({...opts})\n      config.property = $prop;\n    }\n    bindables[config.property] = config;\n  };\n  if (arguments.length > 1) {\n    // Non invocation:\n    // - @bindable\n    config = {};\n    decorator(configOrTarget as T, prop);\n    return;\n  } else if (typeof configOrTarget === 'string') {\n    // ClassDecorator\n    // - @bindable('bar')\n    // Direct call:\n    // - @bindable('bar')(Foo)\n    config = {};\n    return decorator as BindableDecorator;\n  }\n\n  // Invocation with or w/o opts:\n  // - @bindable()\n  // - @bindable({...opts})\n  config = (configOrTarget || {}) as IBindableDescription;\n  return decorator as BindableDecorator;\n}\n","import { Constructable, IIndexable } from '@aurelia/kernel';\nimport { buildTemplateDefinition, isTargetedInstruction, TargetedInstruction, TargetedInstructionType, TemplateDefinition } from '../definitions';\nimport { DOM, INode } from '../dom';\nimport { IRenderContext, IView, IViewFactory } from '../lifecycle';\nimport { ICustomElementType, IRenderingEngine, ITemplate } from './lifecycle-render';\n\ntype ChildType = RenderPlan | string | INode;\n\nexport function createElement(tagOrType: string | Constructable, props?: IIndexable, children?: ArrayLike<ChildType>): RenderPlan {\n  if (typeof tagOrType === 'string') {\n    return createElementForTag(tagOrType, props, children);\n  } else {\n    return createElementForType(tagOrType as ICustomElementType, props, children);\n  }\n}\n\nexport class RenderPlan {\n  private lazyDefinition: TemplateDefinition;\n\n  constructor(\n    private readonly node: INode,\n    private readonly instructions: TargetedInstruction[][],\n    private readonly dependencies: ReadonlyArray<any>\n  ) {}\n\n  public get definition(): TemplateDefinition {\n    return this.lazyDefinition || (this.lazyDefinition =\n      buildTemplateDefinition(null, null, this.node, null, typeof this.node === 'string', null, this.instructions, this.dependencies));\n  }\n\n  public getElementTemplate(engine: IRenderingEngine, Type?: ICustomElementType): ITemplate {\n    return engine.getElementTemplate(this.definition, Type);\n  }\n\n  public createView(engine: IRenderingEngine, parentContext?: IRenderContext): IView {\n    return this.getViewFactory(engine, parentContext).create();\n  }\n\n  public getViewFactory(engine: IRenderingEngine, parentContext?: IRenderContext): IViewFactory {\n    return engine.getViewFactory(this.definition, parentContext);\n  }\n\n  /*@internal*/\n  public mergeInto(parent: INode, instructions: TargetedInstruction[][], dependencies: any[]): void {\n    DOM.appendChild(parent, this.node);\n    instructions.push(...this.instructions);\n    dependencies.push(...this.dependencies);\n  }\n}\n\nfunction createElementForTag(tagName: string, props?: IIndexable, children?: ArrayLike<ChildType>): RenderPlan {\n  const instructions: TargetedInstruction[] = [];\n  const allInstructions = [];\n  const dependencies = [];\n  const element = DOM.createElement(tagName);\n  let hasInstructions = false;\n\n  if (props) {\n    Object.keys(props)\n      .forEach(to => {\n        const value = props[to];\n\n        if (isTargetedInstruction(value)) {\n          hasInstructions = true;\n          instructions.push(value);\n        } else {\n          DOM.setAttribute(element, to, value);\n        }\n      });\n  }\n\n  if (hasInstructions) {\n    DOM.setAttribute(element, 'class', 'au');\n    allInstructions.push(instructions);\n  }\n\n  if (children) {\n    addChildren(element, children, allInstructions, dependencies);\n  }\n\n  return new RenderPlan(element, allInstructions, dependencies);\n}\n\nfunction createElementForType(Type: ICustomElementType, props?: IIndexable, children?: ArrayLike<ChildType>): RenderPlan {\n  const tagName = Type.description.name;\n  const instructions: TargetedInstruction[] = [];\n  const allInstructions = [instructions];\n  const dependencies = [];\n  const childInstructions = [];\n  const bindables = Type.description.bindables;\n  const element = DOM.createElement(tagName);\n\n  DOM.setAttribute(element, 'class', 'au');\n\n  if (!dependencies.includes(Type)) {\n    dependencies.push(Type);\n  }\n\n  instructions.push({\n    type: TargetedInstructionType.hydrateElement,\n    res: tagName,\n    instructions: childInstructions\n  });\n\n  if (props) {\n    Object.keys(props)\n      .forEach(to => {\n        const value = props[to];\n\n        if (isTargetedInstruction(value)) {\n          childInstructions.push(value);\n        } else {\n          const bindable = bindables[to];\n\n          if (bindable) {\n            childInstructions.push({\n              type: TargetedInstructionType.setProperty,\n              to,\n              value\n            });\n          } else {\n            childInstructions.push({\n              type: TargetedInstructionType.setAttribute,\n              to,\n              value\n            });\n          }\n        }\n      });\n  }\n\n  if (children) {\n    addChildren(element, children, allInstructions, dependencies);\n  }\n\n  return new RenderPlan(element, allInstructions, dependencies);\n}\n\nfunction addChildren(parent: INode, children: ArrayLike<ChildType>, allInstructions: TargetedInstruction[][], dependencies: any[]): void {\n  for (let i = 0, ii = children.length; i < ii; ++i) {\n    const current = children[i];\n\n    if (typeof current === 'string') {\n      DOM.appendChild(parent, DOM.createTextNode(current));\n    } else if (DOM.isNodeInstance(current)) {\n      DOM.appendChild(parent, current);\n    } else {\n      current.mergeInto(parent, allInstructions, dependencies);\n    }\n  }\n}\n","import { Writable } from '@aurelia/kernel';\nimport { IEncapsulationSource } from '../dom';\nimport { Hooks, IView, State } from '../lifecycle';\nimport { LifecycleFlags } from '../observation';\nimport { ICustomAttribute, ICustomElement } from './lifecycle-render';\n\n/*@internal*/\nexport function $attachAttribute(this: Writable<ICustomAttribute>, flags: LifecycleFlags, encapsulationSource?: IEncapsulationSource): void {\n  if (this.$state & State.isAttached) {\n    return;\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginAttach();\n  // add isAttaching flag\n  this.$state |= State.isAttaching;\n  flags |= LifecycleFlags.fromAttach;\n\n  const hooks = this.$hooks;\n\n  if (hooks & Hooks.hasAttaching) {\n    this.attaching(flags, encapsulationSource);\n  }\n\n  // add isAttached flag, remove isAttaching flag\n  this.$state |= State.isAttached;\n  this.$state &= ~State.isAttaching;\n\n  if (hooks & Hooks.hasAttached) {\n    lifecycle.enqueueAttached(<Required<typeof this>>this);\n  }\n  lifecycle.endAttach(flags);\n}\n\n/*@internal*/\nexport function $attachElement(this: Writable<ICustomElement>, flags: LifecycleFlags, encapsulationSource?: IEncapsulationSource): void {\n  if (this.$state & State.isAttached) {\n    return;\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginAttach();\n  // add isAttaching flag\n  this.$state |= State.isAttaching;\n  flags |= LifecycleFlags.fromAttach;\n\n  const hooks = this.$hooks;\n  encapsulationSource = this.$projector.provideEncapsulationSource(encapsulationSource === undefined ? this.$host : encapsulationSource);\n\n  if (hooks & Hooks.hasAttaching) {\n    this.attaching(flags, encapsulationSource);\n  }\n\n  let current = this.$attachableHead;\n  while (current !== null) {\n    current.$attach(flags, encapsulationSource);\n    current = current.$nextAttach;\n  }\n\n  if (!(this.$state & State.isMounted)) {\n    lifecycle.enqueueMount(this);\n  }\n\n  // add isAttached flag, remove isAttaching flag\n  this.$state |= State.isAttached;\n  this.$state &= ~State.isAttaching;\n\n  if (hooks & Hooks.hasAttached) {\n    lifecycle.enqueueAttached(<Required<typeof this>>this);\n  }\n  lifecycle.endAttach(flags);\n}\n\n/*@internal*/\nexport function $attachView(this: Writable<IView>, flags: LifecycleFlags, encapsulationSource?: IEncapsulationSource): void {\n  if (this.$state & State.isAttached) {\n    return;\n  }\n  // add isAttaching flag\n  this.$state |= State.isAttaching;\n  flags |= LifecycleFlags.fromAttach;\n\n  let current = this.$attachableHead;\n  while (current !== null) {\n    current.$attach(flags, encapsulationSource);\n    current = current.$nextAttach;\n  }\n\n  if (!(this.$state & State.isMounted)) {\n    this.$lifecycle.enqueueMount(this);\n  }\n\n  // add isAttached flag, remove isAttaching flag\n  this.$state |= State.isAttached;\n  this.$state &= ~State.isAttaching;\n}\n\n/*@internal*/\nexport function $detachAttribute(this: Writable<ICustomAttribute>, flags: LifecycleFlags): void {\n  if (this.$state & State.isAttached) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginDetach();\n    // add isDetaching flag\n    this.$state |= State.isDetaching;\n    flags |= LifecycleFlags.fromDetach;\n\n    const hooks = this.$hooks;\n    if (hooks & Hooks.hasDetaching) {\n      this.detaching(flags);\n    }\n\n    // remove isAttached and isDetaching flags\n    this.$state &= ~(State.isAttached | State.isDetaching);\n\n    if (hooks & Hooks.hasDetached) {\n      lifecycle.enqueueDetached(<Required<typeof this>>this);\n    }\n    lifecycle.endDetach(flags);\n  }\n}\n\n/*@internal*/\nexport function $detachElement(this: Writable<ICustomElement>, flags: LifecycleFlags): void {\n  if (this.$state & State.isAttached) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginDetach();\n    // add isDetaching flag\n    this.$state |= State.isDetaching;\n    flags |= LifecycleFlags.fromDetach;\n\n    if (this.$state & State.isMounted) {\n      // Only unmount if either:\n      // - No parent view/element is queued for unmount yet, or\n      // - Aurelia is stopping (in which case all nodes need to return to their fragments for a clean mount on next start)\n      if (((flags & LifecycleFlags.parentUnmountQueued) ^ LifecycleFlags.parentUnmountQueued) | (flags & LifecycleFlags.fromStopTask)) {\n        lifecycle.enqueueUnmount(this);\n        flags |= LifecycleFlags.parentUnmountQueued;\n      }\n    }\n\n    const hooks = this.$hooks;\n    if (hooks & Hooks.hasDetaching) {\n      this.detaching(flags);\n    }\n\n    let current = this.$attachableTail;\n    while (current !== null) {\n      current.$detach(flags);\n      current = current.$prevAttach;\n    }\n\n    // remove isAttached and isDetaching flags\n    this.$state &= ~(State.isAttached | State.isDetaching);\n\n    if (hooks & Hooks.hasDetached) {\n      lifecycle.enqueueDetached(<Required<typeof this>>this);\n    }\n    lifecycle.endDetach(flags);\n  }\n}\n\n/*@internal*/\nexport function $detachView(this: Writable<IView>, flags: LifecycleFlags): void {\n  if (this.$state & State.isAttached) {\n    // add isDetaching flag\n    this.$state |= State.isDetaching;\n    flags |= LifecycleFlags.fromDetach;\n\n    if (this.$state & State.isMounted) {\n      // Only unmount if either:\n      // - No parent view/element is queued for unmount yet, or\n      // - Aurelia is stopping (in which case all nodes need to return to their fragments for a clean mount on next start)\n      if (((flags & LifecycleFlags.parentUnmountQueued) ^ LifecycleFlags.parentUnmountQueued) | (flags & LifecycleFlags.fromStopTask)) {\n        this.$lifecycle.enqueueUnmount(this);\n        flags |= LifecycleFlags.parentUnmountQueued;\n      }\n    }\n\n    let current = this.$attachableTail;\n    while (current !== null) {\n      current.$detach(flags);\n      current = current.$prevAttach;\n    }\n\n    // remove isAttached and isDetaching flags\n    this.$state &= ~(State.isAttached | State.isDetaching);\n  }\n}\n\n/*@internal*/\nexport function $cacheAttribute(this: Writable<ICustomAttribute>, flags: LifecycleFlags): void {\n  flags |= LifecycleFlags.fromCache;\n  if (this.$hooks & Hooks.hasCaching) {\n    this.caching(flags);\n  }\n}\n\n/*@internal*/\nexport function $cacheElement(this: Writable<ICustomElement>, flags: LifecycleFlags): void {\n  flags |= LifecycleFlags.fromCache;\n  if (this.$hooks & Hooks.hasCaching) {\n    this.caching(flags);\n  }\n\n  let current = this.$attachableTail;\n  while (current !== null) {\n    current.$cache(flags);\n    current = current.$prevAttach;\n  }\n}\n\n/*@internal*/\nexport function $cacheView(this: Writable<IView>, flags: LifecycleFlags): void {\n  flags |= LifecycleFlags.fromCache;\n  let current = this.$attachableTail;\n  while (current !== null) {\n    current.$cache(flags);\n    current = current.$prevAttach;\n  }\n}\n\n/*@internal*/\nexport function $mountElement(this: Writable<ICustomElement>, flags: LifecycleFlags): void {\n  this.$state |= State.isMounted;\n  this.$projector.project(this.$nodes);\n}\n\n/*@internal*/\nexport function $unmountElement(this: Writable<ICustomElement>, flags: LifecycleFlags): void {\n  this.$state &= ~State.isMounted;\n  this.$projector.take(this.$nodes);\n}\n\n/*@internal*/\nexport function $mountView(this: Writable<IView>, flags: LifecycleFlags): void {\n  this.$state |= State.isMounted;\n  this.$state &= ~State.needsMount;\n  this.$nodes.insertBefore(this.location);\n}\n\n/*@internal*/\nexport function $unmountView(this: Writable<IView>, flags: LifecycleFlags): boolean {\n  this.$state &= ~State.isMounted;\n  this.$state |= State.needsMount;\n  this.$nodes.remove();\n\n  if (this.isFree) {\n    this.isFree = false;\n    if (this.cache.tryReturnToCache(this)) {\n      this.$state |= State.isCached;\n      return true;\n    }\n  }\n  return false;\n}\n","import { Writable } from '@aurelia/kernel';\nimport { Hooks, IView, State } from '../lifecycle';\nimport { IScope, LifecycleFlags } from '../observation';\nimport { ICustomAttribute, ICustomElement } from './lifecycle-render';\n\n/*@internal*/\nexport function $bindAttribute(this: Writable<ICustomAttribute>, flags: LifecycleFlags, scope: IScope): void {\n  flags |= LifecycleFlags.fromBind;\n\n  if (this.$state & State.isBound) {\n    if (this.$scope === scope) {\n      return;\n    }\n\n    this.$unbind(flags);\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginBind();\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  const hooks = this.$hooks;\n\n  if (hooks & Hooks.hasBound) {\n    lifecycle.enqueueBound(this);\n  }\n\n  this.$scope = scope;\n\n  if (hooks & Hooks.hasBinding) {\n    this.binding(flags);\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n\n  lifecycle.endBind(flags);\n}\n\n/*@internal*/\nexport function $bindElement(this: Writable<ICustomElement>, flags: LifecycleFlags): void {\n  if (this.$state & State.isBound) {\n    return;\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginBind();\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  const hooks = this.$hooks;\n  flags |= LifecycleFlags.fromBind;\n\n  if (hooks & Hooks.hasBound) {\n    lifecycle.enqueueBound(this);\n  }\n\n  if (hooks & Hooks.hasBinding) {\n    this.binding(flags);\n  }\n\n  const scope = this.$scope;\n  let current = this.$bindableHead;\n  while (current !== null) {\n    current.$bind(flags, scope);\n    current = current.$nextBind;\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n\n  lifecycle.endBind(flags);\n}\n\n/*@internal*/\nexport function $bindView(this: Writable<IView>, flags: LifecycleFlags, scope: IScope): void {\n  flags |= LifecycleFlags.fromBind;\n\n  if (this.$state & State.isBound) {\n    if (this.$scope === scope) {\n      return;\n    }\n\n    this.$unbind(flags);\n  }\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  this.$scope = scope;\n  let current = this.$bindableHead;\n  while (current !== null) {\n    current.$bind(flags, scope);\n    current = current.$nextBind;\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n}\n\n/*@internal*/\nexport function $unbindAttribute(this: Writable<ICustomAttribute>, flags: LifecycleFlags): void {\n  if (this.$state & State.isBound) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginUnbind();\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const hooks = this.$hooks;\n    flags |= LifecycleFlags.fromUnbind;\n\n    if (hooks & Hooks.hasUnbound) {\n      lifecycle.enqueueUnbound(this);\n    }\n\n    if (hooks & Hooks.hasUnbinding) {\n      this.unbinding(flags);\n    }\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n\n    lifecycle.endUnbind(flags);\n  }\n}\n\n/*@internal*/\nexport function $unbindElement(this: Writable<ICustomElement>, flags: LifecycleFlags): void {\n  if (this.$state & State.isBound) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginUnbind();\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const hooks = this.$hooks;\n    flags |= LifecycleFlags.fromUnbind;\n\n    if (hooks & Hooks.hasUnbound) {\n      lifecycle.enqueueUnbound(this);\n    }\n\n    if (hooks & Hooks.hasUnbinding) {\n      this.unbinding(flags);\n    }\n\n    let current = this.$bindableTail;\n    while (current !== null) {\n      current.$unbind(flags);\n      current = current.$prevBind;\n    }\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n\n    lifecycle.endUnbind(flags);\n  }\n}\n\n/*@internal*/\nexport function $unbindView(this: Writable<IView>, flags: LifecycleFlags): void {\n  if (this.$state & State.isBound) {\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    flags |= LifecycleFlags.fromUnbind;\n\n    let current = this.$bindableTail;\n    while (current !== null) {\n      current.$unbind(flags);\n      current = current.$prevBind;\n    }\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    this.$scope = null;\n  }\n}\n","import { Reporter } from '@aurelia/kernel';\nimport { INodeSequence, IRenderLocation } from '../dom';\nimport { IAttach, IBindScope, ILifecycle, ILifecycleUnbind, IMountable, IRenderContext, IView, IViewCache, IViewFactory, State } from '../lifecycle';\nimport { IScope, LifecycleFlags } from '../observation';\nimport { $attachView, $cacheView, $detachView, $mountView, $unmountView } from './lifecycle-attach';\nimport { $bindView, $unbindView } from './lifecycle-bind';\nimport { ITemplate } from './lifecycle-render';\n\n/*@internal*/\nexport interface View extends IView {}\n\n/*@internal*/\nexport class View implements IView {\n  public $bindableHead: IBindScope = null;\n  public $bindableTail: IBindScope = null;\n\n  public $nextBind: IBindScope = null;\n  public $prevBind: IBindScope = null;\n\n  public $attachableHead: IAttach = null;\n  public $attachableTail: IAttach = null;\n\n  public $nextAttach: IAttach = null;\n  public $prevAttach: IAttach = null;\n\n  public $nextMount: IMountable = null;\n  public $mountFlags: LifecycleFlags = 0;\n  public $nextUnmount: IMountable = null;\n  public $unmountFlags: LifecycleFlags = 0;\n\n  public $nextUnbindAfterDetach: ILifecycleUnbind = null;\n\n  public $state: State = State.none;\n  public $scope: IScope = null;\n  public $nodes: INodeSequence;\n  public $context: IRenderContext;\n  public location: IRenderLocation;\n  public isFree: boolean = false;\n\n  constructor(\n    public readonly $lifecycle: ILifecycle,\n    public cache: IViewCache) {}\n\n  public hold(location: IRenderLocation, flags: LifecycleFlags): void {\n    if (!location.parentNode) { // unmet invariant: location must be a child of some other node\n      throw Reporter.error(60); // TODO: organize error codes\n    }\n    this.location = location;\n    const lastChild = this.$nodes.lastChild;\n    if (lastChild && lastChild.nextSibling === location) {\n      this.$state &= ~State.needsMount;\n    } else {\n      this.$state |= State.needsMount;\n    }\n  }\n\n  public lockScope(scope: IScope): void {\n    this.$scope = scope;\n    this.$bind = lockedBind;\n  }\n\n  public release(flags: LifecycleFlags): any {\n    this.isFree = true;\n    if (this.$state & State.isAttached) {\n      return this.cache.canReturnToCache(this);\n    }\n\n    return this.$unmount(flags);\n  }\n}\n\n/*@internal*/\nexport class ViewFactory implements IViewFactory {\n  public static maxCacheSize: number = 0xFFFF;\n  public isCaching: boolean = false;\n\n  private cacheSize: number = -1;\n  private cache: View[] = null;\n\n  constructor(\n    public name: string,\n    private template: ITemplate,\n    private lifecycle: ILifecycle\n  ) {}\n\n  public setCacheSize(size: number | '*', doNotOverrideIfAlreadySet: boolean): void {\n    if (size) {\n      if (size === '*') {\n        size = ViewFactory.maxCacheSize;\n      } else if (typeof size === 'string') {\n        size = parseInt(size, 10);\n      }\n\n      if (this.cacheSize === -1 || !doNotOverrideIfAlreadySet) {\n        this.cacheSize = size;\n      }\n    }\n\n    if (this.cacheSize > 0) {\n      this.cache = [];\n    } else {\n      this.cache = null;\n    }\n\n    this.isCaching = this.cacheSize > 0;\n  }\n\n  public canReturnToCache(view: IView): boolean {\n    return this.cache !== null && this.cache.length < this.cacheSize;\n  }\n\n  public tryReturnToCache(view: View): boolean {\n    if (this.canReturnToCache(view)) {\n      view.$cache(LifecycleFlags.none);\n      this.cache.push(view);\n      return true;\n    }\n\n    return false;\n  }\n\n  public create(): IView {\n    const cache = this.cache;\n    let view: View;\n\n    if (cache !== null && cache.length > 0) {\n      view = cache.pop();\n      view.$state &= ~State.isCached;\n      return view;\n    }\n\n    view = new View(this.lifecycle, this);\n    this.template.render(view);\n    if (!view.$nodes) {\n      throw Reporter.error(90);\n    }\n    return view;\n  }\n}\n\nfunction lockedBind(this: View, flags: LifecycleFlags): void {\n  if (this.$state & State.isBound) {\n    return;\n  }\n\n  flags |= LifecycleFlags.fromBind;\n  const lockedScope = this.$scope;\n  let current = this.$bindableHead;\n  while (current !== null) {\n    current.$bind(flags, lockedScope);\n    current = current.$nextBind;\n  }\n\n  this.$state |= State.isBound;\n}\n\n((proto: IView): void => {\n  proto.$bind = $bindView;\n  proto.$unbind = $unbindView;\n  proto.$attach = $attachView;\n  proto.$detach = $detachView;\n  proto.$cache = $cacheView;\n  proto.$mount = $mountView;\n  proto.$unmount = $unmountView;\n})(View.prototype);\n","import { all, Decoratable, Decorated, DI, IContainer, IDisposable, IIndexable, Immutable, ImmutableArray, inject, IRegistry, IResolver, Omit, PLATFORM, Registration, Reporter, Writable } from '@aurelia/kernel';\nimport { Scope } from '../binding/binding-context';\nimport { Observer } from '../binding/property-observation';\nimport { subscriberCollection } from '../binding/subscriber-collection';\nimport { BindableDefinitions, buildTemplateDefinition, customElementBehavior, CustomElementConstructor, IAttributeDefinition, IHydrateElementInstruction, ITargetedInstruction, ITemplateDefinition, TemplateDefinition, TemplatePartDefinitions } from '../definitions';\nimport { DOM, INode, INodeSequence, INodeSequenceFactory, IRenderLocation, NodeSequence, NodeSequenceFactory } from '../dom';\nimport { Hooks, IAttach, IBindScope, IBindSelf, ILifecycle, ILifecycleHooks, ILifecycleUnbindAfterDetach, IMountable, IRenderable, IRenderContext, IState, IViewFactory, State } from '../lifecycle';\nimport { IAccessor, IChangeTracker, IPropertySubscriber, ISubscribable, ISubscriberCollection, LifecycleFlags, MutationKind } from '../observation';\nimport { IResourceDescriptions, IResourceKind, IResourceType, ResourceDescription } from '../resource';\nimport { ViewFactory } from './view';\n\nexport interface ITemplateCompiler {\n  readonly name: string;\n  compile(definition: ITemplateDefinition, resources: IResourceDescriptions, viewCompileFlags?: ViewCompileFlags): TemplateDefinition;\n}\n\nexport const ITemplateCompiler = DI.createInterface<ITemplateCompiler>().noDefault();\n\nexport enum ViewCompileFlags {\n  none        = 0b0_001,\n  surrogate   = 0b0_010,\n  shadowDOM   = 0b0_100,\n}\n\nexport interface ICustomElementType extends\n  IResourceType<ITemplateDefinition, ICustomElement>,\n  CustomElementConstructor { }\n\nexport type IElementHydrationOptions = Immutable<Pick<IHydrateElementInstruction, 'parts'>>;\n\nexport interface ICustomElement extends Partial<IChangeTracker>, ILifecycleHooks, ILifecycleRender, IBindSelf, ILifecycleUnbindAfterDetach, IAttach, IMountable, IState, IRenderable {\n  readonly $projector: IElementProjector;\n  readonly $host: ICustomElementHost;\n  $hydrate(renderingEngine: IRenderingEngine, host: INode, options?: IElementHydrationOptions): void;\n}\n\nexport interface ICustomElementHost extends IRenderLocation {\n  $customElement?: ICustomElement;\n}\n\nexport type ElementDefinition = Immutable<Required<ITemplateDefinition>> | null;\n\nexport interface ICustomElementResource extends IResourceKind<ITemplateDefinition, ICustomElementType> {\n  behaviorFor(node: INode): ICustomElement | null;\n}\n\nexport interface IElementProjector {\n  readonly host: ICustomElementHost;\n  readonly children: ArrayLike<ICustomElementHost>;\n\n  provideEncapsulationSource(parentEncapsulationSource: ICustomElementHost): ICustomElementHost;\n  project(nodes: INodeSequence): void;\n  take(nodes: INodeSequence): void;\n\n  subscribeToChildrenChange(callback: () => void): void;\n}\n\nexport interface ICustomAttributeType extends\n  IResourceType<IAttributeDefinition, ICustomAttribute>,\n  Immutable<Pick<Partial<IAttributeDefinition>, 'bindables'>> { }\n\ntype OptionalHooks = ILifecycleHooks & Omit<IRenderable, Exclude<keyof IRenderable, '$mount' | '$unmount'>>;\ntype RequiredLifecycleProperties = Readonly<Pick<IRenderable, '$scope'>> & IState;\n\nexport interface IElementTemplateProvider {\n  getElementTemplate(renderingEngine: IRenderingEngine, customElementType: ICustomElementType): ITemplate;\n}\n\nexport interface ILifecycleRender {\n  /**\n   * Only applies to `@customElement`. This hook is not invoked for `@customAttribute`s\n   *\n   * Called during `$hydrate`, after `this.$scope` and `this.$projector` are set.\n   *\n   * If this hook is implemented, it will be used instead of `renderingEngine.getElementTemplate`.\n   * This allows you to completely override the default rendering behavior.\n   *\n   * It is the responsibility of the implementer to:\n   * - Populate `this.$bindables` with any Bindings, child Views, custom elements and custom attributes\n   * - Populate `this.$attachables` with any child Views, custom elements and custom attributes\n   * - Populate `this.$nodes` with the nodes that need to be appended to the host\n   * - Populate `this.$context` with the RenderContext / Container scoped to this instance\n   *\n   * @param host The DOM node that declares this custom element\n   * @param parts Replaceable parts, if any\n   *\n   * @returns Either an implementation of `IElementTemplateProvider`, or void\n   *\n   * @description\n   * This is the first \"hydrate\" lifecycle hook. It happens only once per instance (contrary to bind/attach\n   * which can happen many times per instance), though it can happen many times per type (once for each instance)\n   */\n  render?(host: INode, parts: Immutable<Pick<IHydrateElementInstruction, 'parts'>>): IElementTemplateProvider | void;\n}\n\nexport interface ICustomAttribute extends Partial<IChangeTracker>, IBindScope, ILifecycleUnbindAfterDetach, IAttach, OptionalHooks, RequiredLifecycleProperties {\n  $hydrate(renderingEngine: IRenderingEngine): void;\n}\n\n/*@internal*/\nexport function $hydrateAttribute(this: Writable<ICustomAttribute>, renderingEngine: IRenderingEngine): void {\n  const Type = this.constructor as ICustomAttributeType;\n\n  renderingEngine.applyRuntimeBehavior(Type, this);\n\n  if (this.$hooks & Hooks.hasCreated) {\n    this.created();\n  }\n}\n\n/*@internal*/\nexport function $hydrateElement(this: Writable<ICustomElement>, renderingEngine: IRenderingEngine, host: INode, options: IElementHydrationOptions = PLATFORM.emptyObject): void {\n  const Type = this.constructor as ICustomElementType;\n  const description = Type.description;\n\n  this.$scope = Scope.create(this, null);\n  this.$host = host;\n  this.$projector = determineProjector(this, host, description);\n\n  renderingEngine.applyRuntimeBehavior(Type, this);\n\n  if (this.$hooks & Hooks.hasRender) {\n    const result = this.render(host, options.parts);\n\n    if (result && 'getElementTemplate' in result) {\n      const template = result.getElementTemplate(renderingEngine, Type);\n      template.render(this, host, options.parts);\n    }\n  } else {\n    const template = renderingEngine.getElementTemplate(description, Type);\n    template.render(this, host, options.parts);\n  }\n\n  if (this.$hooks & Hooks.hasCreated) {\n    this.created();\n  }\n}\n\n/*@internal*/\nexport const defaultShadowOptions = {\n  mode: 'open' as 'open' | 'closed'\n};\n\nfunction determineProjector(\n  $customElement: ICustomElement,\n  host: ICustomElementHost,\n  definition: TemplateDefinition\n): IElementProjector {\n  if (definition.shadowOptions || definition.hasSlots) {\n    if (definition.containerless) {\n      throw Reporter.error(21);\n    }\n\n    return new ShadowDOMProjector($customElement, host, definition);\n  }\n\n  if (definition.containerless) {\n    return new ContainerlessProjector($customElement, host);\n  }\n\n  return new HostProjector($customElement, host);\n}\n\nexport interface IRenderingEngine {\n  getElementTemplate(definition: TemplateDefinition, componentType?: ICustomElementType): ITemplate;\n  getViewFactory(source: Immutable<ITemplateDefinition>, parentContext?: IRenderContext): IViewFactory;\n\n  applyRuntimeBehavior(Type: ICustomAttributeType, instance: ICustomAttribute): void;\n  applyRuntimeBehavior(Type: ICustomElementType, instance: ICustomElement): void;\n}\n\nexport const IRenderingEngine = DI.createInterface<IRenderingEngine>()\n  .withDefault(x => x.singleton(RenderingEngine));\n\nconst defaultCompilerName = 'default';\n\n@inject(IContainer, ILifecycle, all(ITemplateCompiler))\n/*@internal*/\nexport class RenderingEngine implements IRenderingEngine {\n  private templateLookup: Map<TemplateDefinition, ITemplate> = new Map();\n  private factoryLookup: Map<Immutable<ITemplateDefinition>, IViewFactory> = new Map();\n  private behaviorLookup: Map<ICustomElementType | ICustomAttributeType, RuntimeBehavior> = new Map();\n  private compilers: Record<string, ITemplateCompiler>;\n\n  constructor(private container: IContainer, private lifecycle: ILifecycle, templateCompilers: ITemplateCompiler[]) {\n    this.compilers = templateCompilers.reduce(\n      (acc, item) => {\n        acc[item.name] = item;\n        return acc;\n      },\n      Object.create(null)\n    );\n  }\n\n  public getElementTemplate(definition: TemplateDefinition, componentType?: ICustomElementType): ITemplate {\n    if (!definition) {\n      return null;\n    }\n\n    let found = this.templateLookup.get(definition);\n\n    if (!found) {\n      found = this.templateFromSource(definition);\n\n      //If the element has a view, support Recursive Components by adding self to own view template container.\n      if (found.renderContext !== null && componentType) {\n        componentType.register(<ExposedContext>found.renderContext);\n      }\n\n      this.templateLookup.set(definition, found);\n    }\n\n    return found;\n  }\n\n  public getViewFactory(definition: Immutable<ITemplateDefinition>, parentContext?: IRenderContext): IViewFactory {\n    if (!definition) {\n      return null;\n    }\n\n    let factory = this.factoryLookup.get(definition);\n\n    if (!factory) {\n      const validSource = buildTemplateDefinition(null, definition);\n      const template = this.templateFromSource(validSource, parentContext);\n      factory = new ViewFactory(validSource.name, template, this.lifecycle);\n      factory.setCacheSize(validSource.cache, true);\n      this.factoryLookup.set(definition, factory);\n    }\n\n    return factory;\n  }\n\n  public applyRuntimeBehavior(Type: ICustomAttributeType | ICustomElementType, instance: ICustomAttribute | ICustomElement): void {\n    let found = this.behaviorLookup.get(Type);\n\n    if (!found) {\n      found = RuntimeBehavior.create(Type, instance);\n      this.behaviorLookup.set(Type, found);\n    }\n\n    found.applyTo(instance, this.lifecycle);\n  }\n\n  private templateFromSource(definition: TemplateDefinition, parentContext?: IRenderContext): ITemplate {\n    parentContext = parentContext || <ExposedContext>this.container;\n\n    if (definition && definition.template) {\n      if (definition.build.required) {\n        const compilerName = definition.build.compiler || defaultCompilerName;\n        const compiler = this.compilers[compilerName];\n\n        if (!compiler) {\n          throw Reporter.error(20, compilerName);\n        }\n\n        definition = compiler.compile(<ITemplateDefinition>definition, new RuntimeCompilationResources(<ExposedContext>parentContext), ViewCompileFlags.surrogate);\n      }\n\n      return new CompiledTemplate(this, parentContext, definition);\n    }\n\n    return noViewTemplate;\n  }\n}\nconst childObserverOptions = { childList: true };\n\n/*@internal*/\nexport class ShadowDOMProjector implements IElementProjector {\n  public shadowRoot: ICustomElementHost;\n\n  constructor(\n    $customElement: ICustomElement,\n    public host: ICustomElementHost,\n    definition: TemplateDefinition\n  ) {\n    this.shadowRoot = DOM.attachShadow(host, definition.shadowOptions || defaultShadowOptions);\n    host.$customElement = $customElement;\n    this.shadowRoot.$customElement = $customElement;\n  }\n\n  get children(): ArrayLike<INode> {\n    return this.host.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    DOM.createNodeObserver(this.host, callback, childObserverOptions);\n  }\n\n  public provideEncapsulationSource(parentEncapsulationSource: INode): INode {\n    return this.shadowRoot;\n  }\n\n  public project(nodes: INodeSequence): void {\n    nodes.appendTo(this.host);\n    this.project = PLATFORM.noop;\n  }\n\n  public take(nodes: INodeSequence): void {\n    // No special behavior is required because the host element removal\n    // will result in the projected nodes being removed, since they are in\n    // the ShadowDOM.\n  }\n}\n\n/*@internal*/\nexport class ContainerlessProjector implements IElementProjector {\n  public host: ICustomElementHost;\n  private childNodes: ArrayLike<INode>;\n\n  constructor(private $customElement: ICustomElement, host: ICustomElementHost) {\n    if (host.childNodes.length) {\n      this.childNodes = PLATFORM.toArray(host.childNodes);\n    } else {\n      this.childNodes = PLATFORM.emptyArray;\n    }\n\n    this.host = DOM.convertToRenderLocation(host);\n    this.host.$customElement = $customElement;\n  }\n\n  get children(): ArrayLike<INode> {\n    return this.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // Do nothing since this scenario will never have children.\n  }\n\n  public provideEncapsulationSource(parentEncapsulationSource: INode): INode {\n    if (!parentEncapsulationSource) {\n      throw Reporter.error(22);\n    }\n\n    return parentEncapsulationSource;\n  }\n\n  public project(nodes: INodeSequence): void {\n    if (this.$customElement.$state & State.needsMount) {\n      this.$customElement.$state &= ~State.needsMount;\n      nodes.insertBefore(this.host);\n    }\n  }\n\n  public take(nodes: INodeSequence): void {\n    this.$customElement.$state |= State.needsMount;\n    nodes.remove();\n  }\n}\n\n/*@internal*/\nexport class HostProjector implements IElementProjector {\n  private readonly isAppHost: boolean;\n  constructor($customElement: ICustomElement, public host: ICustomElementHost) {\n    host.$customElement = $customElement;\n    this.isAppHost = host.hasOwnProperty('$au');\n  }\n\n  get children(): ArrayLike<INode> {\n    return PLATFORM.emptyArray;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // Do nothing since this scenario will never have children.\n  }\n\n  public provideEncapsulationSource(parentEncapsulationSource: INode): INode {\n    return parentEncapsulationSource || this.host;\n  }\n\n  public project(nodes: INodeSequence): void {\n    nodes.appendTo(this.host);\n    if (!this.isAppHost) {\n      this.project = PLATFORM.noop;\n    }\n  }\n\n  public take(nodes: INodeSequence): void {\n    // No special behavior is required because the host element removal\n    // will result in the projected nodes being removed, since they are children.\n    if (this.isAppHost) {\n      // The only exception to that is the app host, which is not part of a removable node sequence\n      nodes.remove();\n    }\n  }\n}\n\n/** @internal */\nexport class RuntimeBehavior {\n  public bindables: BindableDefinitions;\n\n  private constructor() {}\n\n  public static create(Component: ICustomElementType | ICustomAttributeType, instance: ICustomAttribute | ICustomElement): RuntimeBehavior {\n    const behavior = new RuntimeBehavior();\n\n    behavior.bindables = Component.description.bindables;\n\n    return behavior;\n  }\n\n  public applyTo(instance: ICustomAttribute | ICustomElement, lifecycle: ILifecycle): void {\n    instance.$lifecycle = lifecycle;\n    if ('$projector' in instance) {\n      this.applyToElement(lifecycle, instance);\n    } else {\n      this.applyToCore(instance);\n    }\n  }\n\n  private applyToElement(lifecycle: ILifecycle, instance: ICustomElement): void {\n    const observers = this.applyToCore(instance);\n\n    observers.$children = new ChildrenObserver(lifecycle, instance);\n\n    Reflect.defineProperty(instance, '$children', {\n      enumerable: false,\n      get: function(): unknown {\n        return this.$observers.$children.getValue();\n      }\n    });\n  }\n\n  private applyToCore(instance: ICustomAttribute | ICustomElement): IIndexable {\n    const observers = {};\n    const bindables = this.bindables;\n    const observableNames = Object.getOwnPropertyNames(bindables);\n\n    for (let i = 0, ii = observableNames.length; i < ii; ++i) {\n      const name = observableNames[i];\n\n      observers[name] = new Observer(\n        instance,\n        name,\n        bindables[name].callback\n      );\n\n      createGetterSetter(instance, name);\n    }\n\n    Reflect.defineProperty(instance, '$observers', {\n      enumerable: false,\n      value: observers\n    });\n\n    return observers;\n  }\n}\n\nfunction createGetterSetter(instance: ICustomAttribute | ICustomElement, name: string): void {\n  Reflect.defineProperty(instance, name, {\n    enumerable: true,\n    get: function(): unknown { return this.$observers[name].getValue(); },\n    set: function(value: unknown): void { this.$observers[name].setValue(value, LifecycleFlags.updateTargetInstance); }\n  });\n}\n\nexport interface IChildrenObserver extends\n  IAccessor,\n  ISubscribable<MutationKind.instance>,\n  ISubscriberCollection<MutationKind.instance> { }\n\n/*@internal*/\n@subscriberCollection(MutationKind.instance)\nexport class ChildrenObserver implements Partial<IChildrenObserver> {\n  public hasChanges: boolean = false;\n\n  private children: ICustomElement[] = null;\n  private observing: boolean = false;\n\n  constructor(\n    private lifecycle: ILifecycle,\n    private customElement: ICustomElement & { $childrenChanged?(): void }\n  ) { }\n\n  public getValue(): ICustomElement[] {\n    if (!this.observing) {\n      this.observing = true;\n      this.customElement.$projector.subscribeToChildrenChange(() => { this.onChildrenChanged(); });\n      this.children = findElements(this.customElement.$projector.children);\n    }\n\n    return this.children;\n  }\n\n  public setValue(newValue: unknown): void { /* do nothing */ }\n\n  public flush(this: ChildrenObserver & IChildrenObserver, flags: LifecycleFlags): void {\n    this.callSubscribers(this.children, undefined, flags | LifecycleFlags.updateTargetInstance);\n    this.hasChanges = false;\n  }\n\n  public subscribe(this: ChildrenObserver & IChildrenObserver, subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(this: ChildrenObserver & IChildrenObserver, subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n\n  private onChildrenChanged(): void {\n    this.children = findElements(this.customElement.$projector.children);\n\n    if ('$childrenChanged' in this.customElement) {\n      this.customElement.$childrenChanged();\n    }\n\n    this.lifecycle.enqueueFlush(this);\n    this.hasChanges = true;\n  }\n}\n\n/*@internal*/\nexport function findElements(nodes: ArrayLike<INode>): ICustomElement[] {\n  const components: ICustomElement[] = [];\n\n  for (let i = 0, ii = nodes.length; i < ii; ++i) {\n    const current = nodes[i];\n    const component = customElementBehavior(current);\n\n    if (component !== null) {\n      components.push(component);\n    }\n  }\n\n  return components;\n}\n\n/*@internal*/\nexport class RuntimeCompilationResources implements IResourceDescriptions {\n  constructor(private context: ExposedContext) {}\n\n  public find<TSource>(kind: IResourceKind<TSource>, name: string): ResourceDescription<TSource> | null {\n    const key = kind.keyFrom(name);\n    const resolver = this.context.getResolver<TSource>(key, false);\n\n    if (resolver !== null && resolver.getFactory) {\n      const factory = resolver.getFactory(this.context);\n\n      if (factory !== null) {\n        const description = (factory.type as IResourceType<TSource>).description;\n        return description === undefined ? null : description;\n      }\n    }\n\n    return null;\n  }\n\n  public create<TSource, TType extends IResourceType<TSource>>(kind: IResourceKind<TSource, TType>, name: string): InstanceType<TType> | null {\n    const key = kind.keyFrom(name);\n    if (this.context.has(key, false)) {\n      const context = this.context.get<any>(key);\n      return context === undefined ? null : context;\n    }\n    return null;\n  }\n}\n\n// The basic template abstraction that allows consumers to create\n// instances of an INodeSequence on-demand. Templates are contextual in that they are, in the very least,\n// part of a particular application, with application-level resources, but they also may have their\n// own scoped resources or be part of another view (via a template controller) which provides a\n// context for the template.\nexport interface ITemplate {\n  readonly renderContext: IRenderContext;\n  render(renderable: IRenderable, host?: INode, parts?: TemplatePartDefinitions): void;\n}\n\n// This is the main implementation of ITemplate.\n// It is used to create instances of IView based on a compiled TemplateDefinition.\n// TemplateDefinitions are hand-coded today, but will ultimately be the output of the\n// TemplateCompiler either through a JIT or AOT process.\n// Essentially, CompiledTemplate wraps up the small bit of code that is needed to take a TemplateDefinition\n// and create instances of it on demand.\n/*@internal*/\nexport class CompiledTemplate implements ITemplate {\n  public readonly factory: INodeSequenceFactory;\n  public readonly renderContext: IRenderContext;\n\n  constructor(renderingEngine: IRenderingEngine, parentRenderContext: IRenderContext, private templateDefinition: TemplateDefinition) {\n    this.factory = NodeSequenceFactory.createFor(templateDefinition.template);\n    this.renderContext = createRenderContext(renderingEngine, parentRenderContext, templateDefinition.dependencies);\n  }\n\n  public render(renderable: IRenderable, host?: INode, parts?: TemplatePartDefinitions): void {\n    const nodes = (<Writable<IRenderable>>renderable).$nodes = this.factory.createNodeSequence();\n    (<Writable<IRenderable>>renderable).$context = this.renderContext;\n    this.renderContext.render(renderable, nodes.findTargets(), this.templateDefinition, host, parts);\n  }\n}\n\n// This is an implementation of ITemplate that always returns a node sequence representing \"no DOM\" to render.\n/*@internal*/\nexport const noViewTemplate: ITemplate = {\n  renderContext: null,\n  render(renderable: IRenderable): void {\n    (<Writable<IRenderable>>renderable).$nodes = NodeSequence.empty;\n    (<Writable<IRenderable>>renderable).$context = null;\n  }\n};\n\n/*@internal*/\nexport type ExposedContext = IRenderContext & IDisposable & IContainer;\n\nexport function createRenderContext(renderingEngine: IRenderingEngine, parentRenderContext: IRenderContext, dependencies: ImmutableArray<IRegistry>): IRenderContext {\n  const context = <ExposedContext>parentRenderContext.createChild();\n  const renderableProvider = new InstanceProvider();\n  const elementProvider = new InstanceProvider();\n  const instructionProvider = new InstanceProvider<ITargetedInstruction>();\n  const factoryProvider = new ViewFactoryProvider(renderingEngine);\n  const renderLocationProvider = new InstanceProvider<IRenderLocation>();\n  const renderer = context.get(IRenderer);\n\n  DOM.registerElementResolver(context, elementProvider);\n\n  context.registerResolver(IViewFactory, factoryProvider);\n  context.registerResolver(IRenderable, renderableProvider);\n  context.registerResolver(ITargetedInstruction, instructionProvider);\n  context.registerResolver(IRenderLocation, renderLocationProvider);\n\n  if (dependencies) {\n    context.register(...dependencies);\n  }\n\n  context.render = function(this: IRenderContext, renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void {\n    renderer.render(this, renderable, targets, templateDefinition, host, parts);\n  };\n\n  context.beginComponentOperation = function(renderable: IRenderable, target: INode, instruction: ITargetedInstruction, factory?: IViewFactory, parts?: TemplatePartDefinitions, location?: IRenderLocation): IDisposable {\n    renderableProvider.prepare(renderable);\n    elementProvider.prepare(target);\n    instructionProvider.prepare(instruction);\n\n    if (factory) {\n      factoryProvider.prepare(factory, parts);\n    }\n\n    if (location) {\n      renderLocationProvider.prepare(location);\n    }\n\n    return context;\n  };\n\n  context.dispose = function(): void {\n    factoryProvider.dispose();\n    renderableProvider.dispose();\n    instructionProvider.dispose();\n    elementProvider.dispose();\n    renderLocationProvider.dispose();\n  };\n\n  return context;\n}\n\n/*@internal*/\nexport class InstanceProvider<T> implements IResolver {\n  private instance: T = null;\n\n  public prepare(instance: T): void {\n    this.instance = instance;\n  }\n\n  public resolve(handler: IContainer, requestor: IContainer): T {\n    if (this.instance === undefined) { // unmet precondition: call prepare\n      throw Reporter.error(50); // TODO: organize error codes\n    }\n    return this.instance;\n  }\n\n  public dispose(): void {\n    this.instance = null;\n  }\n}\n\n/*@internal*/\nexport class ViewFactoryProvider implements IResolver {\n  private factory: IViewFactory;\n  private replacements: TemplatePartDefinitions;\n\n  constructor(private renderingEngine: IRenderingEngine) {}\n\n  public prepare(factory: IViewFactory, parts: TemplatePartDefinitions): void {\n    this.factory = factory;\n    this.replacements = parts || PLATFORM.emptyObject;\n  }\n\n  public resolve(handler: IContainer, requestor: ExposedContext): IViewFactory {\n    const factory = this.factory;\n    if (factory === undefined) { // unmet precondition: call prepare\n      throw Reporter.error(50); // TODO: organize error codes\n    }\n    if (!factory.name || !factory.name.length) { // unmet invariant: factory must have a name\n      throw Reporter.error(51); // TODO: organize error codes\n    }\n    const found = this.replacements[factory.name];\n    if (found) {\n      return this.renderingEngine.getViewFactory(found, requestor);\n    }\n\n    return this.factory;\n  }\n\n  public dispose(): void {\n    this.factory = null;\n    this.replacements = null;\n  }\n}\n\nexport interface IRenderer {\n  instructionRenderers: Record<string, IInstructionRenderer>;\n  render(context: IRenderContext, renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void;\n}\n\nexport const IRenderer = DI.createInterface<IRenderer>().withDefault(x => x.singleton(Renderer));\n\nexport interface IInstructionTypeClassifier<TType extends string = string> {\n  instructionType: TType;\n}\n\nexport interface IInstructionRenderer<TType extends string = string> extends Partial<IInstructionTypeClassifier<TType>> {\n  render(context: IRenderContext, renderable: IRenderable, target: unknown, instruction: ITargetedInstruction, ...rest: unknown[]): void;\n}\n\nexport const IInstructionRenderer = DI.createInterface<IInstructionRenderer>().noDefault();\n\ntype DecoratableInstructionRenderer<TType extends string> = Decoratable<IInstructionTypeClassifier<TType>, Pick<IInstructionRenderer, 'render'>> & Partial<IRegistry>;\ntype DecoratedInstructionRenderer<TType extends string> = Decorated<IInstructionTypeClassifier<TType>, Pick<IInstructionRenderer, 'render'>> & IRegistry;\n\ntype InstructionRendererDecorator<TType extends string> = (target: DecoratableInstructionRenderer<TType>) => DecoratedInstructionRenderer<TType>;\n\nexport function instructionRenderer<TType extends string>(instructionType: TType): InstructionRendererDecorator<TType> {\n  return function decorator(target: DecoratableInstructionRenderer<TType>): DecoratedInstructionRenderer<TType> {\n    // wrap the constructor to set the instructionType to the instance (for better performance than when set on the prototype)\n    const decoratedTarget = function(...args: unknown[]): InstanceType<DecoratedInstructionRenderer<TType>> {\n      const instance = new target(...args);\n      instance.instructionType = instructionType;\n      return instance;\n    } as unknown as DecoratedInstructionRenderer<TType>;\n    // make sure we register the decorated constructor with DI\n    decoratedTarget.register = function register(container: IContainer): IResolver {\n      return Registration.singleton(IInstructionRenderer, decoratedTarget).register(container, IInstructionRenderer);\n    };\n    // copy over any static properties such as inject (set by preceding decorators)\n    // also copy the name, to be less confusing to users (so they can still use constructor.name for whatever reason)\n    // the length (number of ctor arguments) is copied for the same reason\n    const ownProperties = Object.getOwnPropertyDescriptors(target);\n    Object.keys(ownProperties).filter(prop => prop !== 'prototype').forEach(prop => {\n      Reflect.defineProperty(decoratedTarget, prop, ownProperties[prop]);\n    });\n    return decoratedTarget;\n  };\n}\n\n/* @internal */\n@inject(all(IInstructionRenderer))\nexport class Renderer implements IRenderer {\n  public instructionRenderers: Record<string, IInstructionRenderer>;\n\n  constructor(instructionRenderers: IInstructionRenderer[]) {\n    const record = this.instructionRenderers = {};\n    instructionRenderers.forEach(item => {\n      record[item.instructionType] = item;\n    });\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, targets: ArrayLike<INode>, definition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void {\n    const targetInstructions = definition.instructions;\n    const instructionRenderers = this.instructionRenderers;\n\n    if (targets.length !== targetInstructions.length) {\n      if (targets.length > targetInstructions.length) {\n        throw Reporter.error(30);\n      } else {\n        throw Reporter.error(31);\n      }\n    }\n    for (let i = 0, ii = targets.length; i < ii; ++i) {\n      const instructions = targetInstructions[i];\n      const target = targets[i];\n\n      for (let j = 0, jj = instructions.length; j < jj; ++j) {\n        const current = instructions[j];\n        instructionRenderers[current.type].render(context, renderable, target, current, parts);\n      }\n    }\n\n    if (host) {\n      const surrogateInstructions = definition.surrogates;\n\n      for (let i = 0, ii = surrogateInstructions.length; i < ii; ++i) {\n        const current = surrogateInstructions[i];\n        instructionRenderers[current.type].render(context, renderable, host, current, parts);\n      }\n    }\n  }\n}\n","import { Constructable, Decoratable, Decorated, IContainer, Registration, Reporter, Writable } from '@aurelia/kernel';\nimport { buildTemplateDefinition, customElementBehavior, customElementKey, customElementName, ITemplateDefinition } from '../definitions';\nimport { Hooks, State } from '../lifecycle';\nimport { $attachElement, $cacheElement, $detachElement, $mountElement, $unmountElement } from './lifecycle-attach';\nimport { $bindElement, $unbindElement } from './lifecycle-bind';\nimport { $hydrateElement, defaultShadowOptions, ICustomElement, ICustomElementHost, ICustomElementResource, ICustomElementType } from './lifecycle-render';\n\ntype CustomElementDecorator = <T extends Constructable>(target: Decoratable<ICustomElement, T>) => Decorated<ICustomElement, T> & ICustomElementType;\n/**\n * Decorator: Indicates that the decorated class is a custom element.\n */\nexport function customElement(nameOrSource: string | ITemplateDefinition): CustomElementDecorator {\n  return target => CustomElementResource.define(nameOrSource, target);\n}\n\ntype HasShadowOptions = Pick<ITemplateDefinition, 'shadowOptions'>;\n\n/**\n * Decorator: Indicates that the custom element should render its view in ShadowDOM.\n */\nexport function useShadowDOM<T extends Constructable>(options?: HasShadowOptions['shadowOptions']): (target: T & HasShadowOptions) => Decorated<HasShadowOptions, T>;\n/**\n * Decorator: Indicates that the custom element should render its view in ShadowDOM.\n */\nexport function useShadowDOM<T extends Constructable>(target: (T & HasShadowOptions)): Decorated<HasShadowOptions, T>;\nexport function useShadowDOM<T extends Constructable>(targetOrOptions?: (T & HasShadowOptions) | HasShadowOptions['shadowOptions']):  Decorated<HasShadowOptions, T> | ((target: T & HasShadowOptions) => Decorated<HasShadowOptions, T>) {\n  const options = typeof targetOrOptions === 'function' || !targetOrOptions\n    ? defaultShadowOptions\n    : targetOrOptions as HasShadowOptions['shadowOptions'];\n\n  function useShadowDOMDecorator(target: T & HasShadowOptions): Decorated<HasShadowOptions, T> {\n    target.shadowOptions = options;\n    return target;\n  }\n\n  return typeof targetOrOptions === 'function' ? useShadowDOMDecorator(targetOrOptions) : useShadowDOMDecorator;\n}\n\ntype HasContainerless = Pick<ITemplateDefinition, 'containerless'>;\n\nfunction containerlessDecorator<T extends Constructable>(target: T & HasContainerless): Decorated<HasContainerless, T> {\n  target.containerless = true;\n  return target;\n}\n\n/**\n * Decorator: Indicates that the custom element should be rendered without its element container.\n */\nexport function containerless(): typeof containerlessDecorator;\n/**\n * Decorator: Indicates that the custom element should be rendered without its element container.\n */\nexport function containerless<T extends Constructable>(target: T & HasContainerless): Decorated<HasContainerless, T>;\nexport function containerless<T extends Constructable>(target?: T & HasContainerless): Decorated<HasContainerless, T> | typeof containerlessDecorator {\n  return target === undefined ? containerlessDecorator : containerlessDecorator<T>(target);\n}\n\nexport const CustomElementResource: ICustomElementResource = {\n  name: customElementName,\n\n  keyFrom: customElementKey,\n\n  isType<T extends Constructable & Partial<ICustomElementType>>(Type: T): Type is T & ICustomElementType {\n    return Type.kind === this;\n  },\n\n  behaviorFor: <(node: ICustomElementHost) => ICustomElement | null>customElementBehavior,\n\n  define<T extends Constructable>(nameOrSource: string | ITemplateDefinition, ctor: T = null): T & ICustomElementType {\n    if (!nameOrSource) {\n      throw Reporter.error(70);\n    }\n    const Type = (ctor === null ? class HTMLOnlyElement { /* HTML Only */ } : ctor) as T & Writable<ICustomElementType>;\n    const description = buildTemplateDefinition(<ICustomElementType><unknown>Type, nameOrSource);\n    const proto: Writable<ICustomElement> = Type.prototype;\n\n    Type.kind = CustomElementResource;\n    Type.description = description;\n    Type.register = registerElement;\n\n    proto.$hydrate = $hydrateElement;\n    proto.$bind = $bindElement;\n    proto.$attach = $attachElement;\n    proto.$detach = $detachElement;\n    proto.$unbind = $unbindElement;\n    proto.$cache = $cacheElement;\n\n    proto.$prevBind = null;\n    proto.$nextBind = null;\n    proto.$prevAttach = null;\n    proto.$nextAttach = null;\n\n    proto.$nextUnbindAfterDetach = null;\n\n    proto.$scope = null;\n    proto.$hooks = 0;\n    proto.$state = State.needsMount;\n\n    proto.$bindableHead = null;\n    proto.$bindableTail = null;\n    proto.$attachableHead = null;\n    proto.$attachableTail = null;\n\n    proto.$mount = $mountElement;\n    proto.$unmount = $unmountElement;\n\n    proto.$nextMount = null;\n    proto.$nextUnmount = null;\n\n    proto.$projector = null;\n\n    if ('flush' in proto) {\n      proto.$nextFlush = null;\n    }\n\n    if ('binding' in proto) proto.$hooks |= Hooks.hasBinding;\n    if ('bound' in proto) {\n      proto.$hooks |= Hooks.hasBound;\n      proto.$nextBound = null;\n    }\n\n    if ('unbinding' in proto) proto.$hooks |= Hooks.hasUnbinding;\n    if ('unbound' in proto) {\n      proto.$hooks |= Hooks.hasUnbound;\n      proto.$nextUnbound = null;\n    }\n\n    if ('render' in proto) proto.$hooks |= Hooks.hasRender;\n    if ('created' in proto) proto.$hooks |= Hooks.hasCreated;\n    if ('attaching' in proto) proto.$hooks |= Hooks.hasAttaching;\n    if ('attached' in proto) {\n      proto.$hooks |= Hooks.hasAttached;\n      proto.$nextAttached = null;\n    }\n    if ('detaching' in proto) proto.$hooks |= Hooks.hasDetaching;\n    if ('caching' in proto) proto.$hooks |= Hooks.hasCaching;\n    if ('detached' in proto) {\n      proto.$hooks |= Hooks.hasDetached;\n      proto.$nextDetached = null;\n    }\n\n    return <ICustomElementType & T>Type;\n  }\n};\n\n/*@internal*/\nexport function registerElement(this: ICustomElementType, container: IContainer): void {\n  const resourceKey = CustomElementResource.keyFrom(this.description.name);\n  container.register(Registration.transient(resourceKey, this));\n}\n\n// tslint:enable:align\n\n// TODO\n// ## DefaultSlotProjector\n// An implementation of IElementProjector that can handle a subset of default\n// slot projection scenarios without needing real Shadow DOM.\n// ### Conditions\n// We can do a one-time, static composition of the content and view,\n// to emulate shadow DOM, if the following constraints are met:\n// * There must be exactly one slot and it must be a default slot.\n// * The default slot must not have any fallback content.\n// * The default slot must not have a custom element as its immediate parent or\n//   a slot attribute (re-projection).\n// ### Projection\n// The projector copies all content nodes to the slot's location.\n// The copy process should inject a comment node before and after the slotted\n// content, so that the bounds of the content can be clearly determined,\n// even if the slotted content has template controllers or string interpolation.\n// ### Encapsulation Source\n// Uses the same strategy as HostProjector.\n// ### Children\n// The projector adds a mutation observer to the parent node of the\n// slot comment. When direct children of that node change, the projector\n// will gather up all nodes between the start and end slot comments.\n","import { Constructable, Immutable, inject, IRegistry } from '@aurelia/kernel';\nimport {\n  IHydrateElementInstruction,\n  ITargetedInstruction,\n  ITemplateDefinition,\n  TargetedInstruction,\n  TemplateDefinition\n} from '../../definitions';\nimport { CompositionCoordinator, IRenderable, IView, IViewFactory } from '../../lifecycle';\nimport { LifecycleFlags } from '../../observation';\nimport { bindable } from '../bindable';\nimport { createElement, RenderPlan } from '../create-element';\nimport { customElement } from '../custom-element';\nimport { ICustomElement, IRenderingEngine } from '../lifecycle-render';\n\nconst composeSource: ITemplateDefinition = {\n  name: 'au-compose',\n  containerless: true\n};\n\nconst composeProps = ['subject', 'composing'];\n\ntype Subject = IViewFactory | IView | RenderPlan | Constructable | TemplateDefinition;\n\nexport interface Compose extends ICustomElement {}\n@customElement(composeSource)\n@inject(IRenderable, ITargetedInstruction, IRenderingEngine, CompositionCoordinator)\nexport class Compose {\n  public static register: IRegistry['register'];\n\n  @bindable public subject: Subject | Promise<Subject> = null;\n  @bindable public composing: boolean = false;\n\n  private properties: Record<string, TargetedInstruction> = null;\n  private lastSubject: Subject | Promise<Subject> = null;\n\n  constructor(\n    private renderable: IRenderable,\n    instruction: Immutable<IHydrateElementInstruction>,\n    private renderingEngine: IRenderingEngine,\n    private coordinator: CompositionCoordinator\n  ) {\n    this.coordinator.onSwapComplete = () => {\n      this.composing = false;\n    };\n\n    this.properties = instruction.instructions\n      .filter((x: any) => !composeProps.includes(x.to))\n      .reduce(\n        (acc, item: any) => {\n          if (item.to) {\n            acc[item.to] = item;\n          }\n\n          return acc;\n        },\n        {}\n      );\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.startComposition(this.subject, undefined, flags);\n    this.coordinator.binding(flags, this.$scope);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.coordinator.attaching(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.coordinator.detaching(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.lastSubject = null;\n    this.coordinator.unbinding(flags);\n  }\n\n  public caching(flags: LifecycleFlags): void {\n    this.coordinator.caching(flags);\n  }\n\n  public subjectChanged(newValue: Subject | Promise<Subject>, previousValue: Subject | Promise<Subject>, flags: LifecycleFlags): void {\n    this.startComposition(newValue, previousValue, flags);\n  }\n\n  private startComposition(subject: Subject | Promise<Subject>, _previousSubject: Subject | Promise<Subject>, flags: LifecycleFlags): void {\n    if (this.lastSubject === subject) {\n      return;\n    }\n\n    this.lastSubject = subject;\n\n    if (subject instanceof Promise) {\n      subject = subject.then(x => this.resolveView(x, flags));\n    } else {\n      subject = this.resolveView(subject, flags);\n    }\n\n    this.composing = true;\n    this.coordinator.compose(subject as IView | Promise<IView>, flags);\n  }\n\n  private resolveView(subject: Subject, flags: LifecycleFlags): IView {\n    const view = this.provideViewFor(subject);\n\n    if (view) {\n      view.hold(this.$projector.host, flags);\n      view.lockScope(this.renderable.$scope);\n      return view;\n    }\n\n    return null;\n  }\n\n  private provideViewFor(subject: Subject): IView | null {\n    if (!subject) {\n      return null;\n    }\n\n    if ('lockScope' in subject) { // IView\n      return subject;\n    }\n\n    if ('createView' in subject) { // RenderPlan\n      return subject.createView(\n        this.renderingEngine,\n        this.renderable.$context\n      );\n    }\n\n    if ('create' in subject) { // IViewFactory\n      return subject.create();\n    }\n\n    if ('template' in subject) { // Raw Template Definition\n      return this.renderingEngine.getViewFactory(\n        subject,\n        this.renderable.$context\n      ).create();\n    }\n\n    // Constructable (Custom Element Constructor)\n    return createElement(\n      subject,\n      this.properties,\n      this.$projector.children\n    ).createView(\n      this.renderingEngine,\n      this.renderable.$context\n    );\n  }\n}\n","import { Constructable, Decoratable, Decorated, IContainer, Omit, PLATFORM, Registration, Writable } from '@aurelia/kernel';\nimport { BindingMode } from '../binding/binding-mode';\nimport { customAttributeKey, customAttributeName, IAttributeDefinition } from '../definitions';\nimport { Hooks } from '../lifecycle';\nimport { IResourceKind, ResourceDescription } from '../resource';\nimport { $attachAttribute, $cacheAttribute, $detachAttribute } from './lifecycle-attach';\nimport { $bindAttribute, $unbindAttribute } from './lifecycle-bind';\nimport { $hydrateAttribute, ICustomAttribute, ICustomAttributeType } from './lifecycle-render';\n\ntype CustomAttributeDecorator = <T extends Constructable>(target: Decoratable<ICustomAttribute, T>) => Decorated<ICustomAttribute, T> & ICustomAttributeType;\n/**\n * Decorator: Indicates that the decorated class is a custom attribute.\n */\nexport function customAttribute(nameOrDef: string | IAttributeDefinition): CustomAttributeDecorator {\n  return target => CustomAttributeResource.define(nameOrDef, target);\n}\n\n/**\n * Decorator: Applied to custom attributes. Indicates that whatever element the\n * attribute is placed on should be converted into a template and that this\n * attribute controls the instantiation of the template.\n */\nexport function templateController(nameOrDef: string | Omit<IAttributeDefinition, 'isTemplateController'>): CustomAttributeDecorator {\n  return target => CustomAttributeResource.define(\n    typeof nameOrDef === 'string'\n    ? { isTemplateController: true , name: nameOrDef }\n    : { isTemplateController: true, ...nameOrDef },\n    target);\n}\n\nexport const CustomAttributeResource: IResourceKind<IAttributeDefinition, ICustomAttributeType> = {\n  name: customAttributeName,\n\n  keyFrom: customAttributeKey,\n\n  isType<T extends Constructable & Partial<ICustomAttributeType>>(Type: T): Type is T & ICustomAttributeType {\n    return Type.kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | IAttributeDefinition, ctor: T): T & ICustomAttributeType {\n    const Type = ctor as T & Writable<ICustomAttributeType>;\n    const description = createCustomAttributeDescription(typeof nameOrSource === 'string' ? { name: nameOrSource } : nameOrSource, <T & ICustomAttributeType>Type);\n    const proto: Writable<ICustomAttribute> = Type.prototype;\n\n    Type.kind = CustomAttributeResource;\n    Type.description = description;\n    Type.register = registerAttribute;\n\n    proto.$hydrate = $hydrateAttribute;\n    proto.$bind = $bindAttribute;\n    proto.$attach = $attachAttribute;\n    proto.$detach = $detachAttribute;\n    proto.$unbind = $unbindAttribute;\n    proto.$cache = $cacheAttribute;\n\n    proto.$prevBind = null;\n    proto.$nextBind = null;\n    proto.$prevAttach = null;\n    proto.$nextAttach = null;\n\n    proto.$nextUnbindAfterDetach = null;\n\n    proto.$scope = null;\n    proto.$hooks = 0;\n    proto.$state = 0;\n\n    if ('flush' in proto) {\n      proto.$nextFlush = null;\n    }\n\n    if ('binding' in proto) proto.$hooks |= Hooks.hasBinding;\n    if ('bound' in proto) {\n      proto.$hooks |= Hooks.hasBound;\n      proto.$nextBound = null;\n    }\n\n    if ('unbinding' in proto) proto.$hooks |= Hooks.hasUnbinding;\n    if ('unbound' in proto) {\n      proto.$hooks |= Hooks.hasUnbound;\n      proto.$nextUnbound = null;\n    }\n\n    if ('created' in proto) proto.$hooks |= Hooks.hasCreated;\n    if ('attaching' in proto) proto.$hooks |= Hooks.hasAttaching;\n    if ('attached' in proto) {\n      proto.$hooks |= Hooks.hasAttached;\n      proto.$nextAttached = null;\n    }\n    if ('detaching' in proto) proto.$hooks |= Hooks.hasDetaching;\n    if ('caching' in proto) proto.$hooks |= Hooks.hasCaching;\n    if ('detached' in proto) {\n      proto.$hooks |= Hooks.hasDetached;\n      proto.$nextDetached = null;\n    }\n\n    return <ICustomAttributeType & T>Type;\n  }\n};\n\n/*@internal*/\nexport function registerAttribute(this: ICustomAttributeType, container: IContainer): void {\n  const description = this.description;\n  const resourceKey = CustomAttributeResource.keyFrom(description.name);\n  const aliases = description.aliases;\n\n  container.register(Registration.transient(resourceKey, this));\n\n  for (let i = 0, ii = aliases.length; i < ii; ++i) {\n    const aliasKey = CustomAttributeResource.keyFrom(aliases[i]);\n    container.register(Registration.alias(resourceKey, aliasKey));\n  }\n}\n\n/*@internal*/\nexport function createCustomAttributeDescription(def: IAttributeDefinition, Type: ICustomAttributeType): ResourceDescription<IAttributeDefinition> {\n  const aliases = def. aliases;\n  const defaultBindingMode = def.defaultBindingMode;\n  return {\n    name: def.name,\n    aliases: aliases === undefined || aliases === null ? PLATFORM.emptyArray : aliases,\n    defaultBindingMode: defaultBindingMode === undefined || defaultBindingMode === null ? BindingMode.toView : defaultBindingMode,\n    isTemplateController: def.isTemplateController === undefined ? false : def.isTemplateController,\n    bindables: {...Type.bindables, ...def.bindables}\n  };\n}\n","import { inject, IRegistry } from '@aurelia/kernel';\nimport { IRenderLocation } from '../../dom';\nimport { CompositionCoordinator, IView, IViewFactory } from '../../lifecycle';\nimport { LifecycleFlags } from '../../observation';\nimport { bindable } from '../bindable';\nimport { templateController } from '../custom-attribute';\nimport { ICustomAttribute } from '../lifecycle-render';\n\nexport interface If extends ICustomAttribute {}\n@templateController('if')\n@inject(IViewFactory, IRenderLocation, CompositionCoordinator)\nexport class If {\n  public static register: IRegistry['register'];\n\n  @bindable public value: boolean = false;\n\n  public elseFactory: IViewFactory = null;\n\n  public ifView: IView = null;\n  public elseView: IView = null;\n\n  constructor(\n    public ifFactory: IViewFactory,\n    public location: IRenderLocation,\n    public coordinator: CompositionCoordinator) { }\n\n  public binding(flags: LifecycleFlags): void {\n    const view = this.updateView(flags);\n    this.coordinator.compose(view, flags);\n    this.coordinator.binding(flags, this.$scope);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.coordinator.attaching(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.coordinator.detaching(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.coordinator.unbinding(flags);\n  }\n\n  public caching(flags: LifecycleFlags): void {\n    if (this.ifView !== null && this.ifView.release(flags)) {\n      this.ifView = null;\n    }\n\n    if (this.elseView !== null && this.elseView.release(flags)) {\n      this.elseView = null;\n    }\n\n    this.coordinator.caching(flags);\n  }\n\n  public valueChanged(newValue: boolean, oldValue: boolean, flags: LifecycleFlags): void {\n    if (flags & LifecycleFlags.fromFlush) {\n      const view = this.updateView(flags);\n      this.coordinator.compose(view, flags);\n    } else {\n      this.$lifecycle.enqueueFlush(this);\n    }\n  }\n\n  public flush(flags: LifecycleFlags): void {\n    const view = this.updateView(flags);\n    this.coordinator.compose(view, flags);\n  }\n\n  /*@internal*/\n  public updateView(flags: LifecycleFlags): IView {\n    let view: IView;\n\n    if (this.value) {\n      view = this.ifView = this.ensureView(this.ifView, this.ifFactory, flags);\n    } else if (this.elseFactory !== null) {\n      view = this.elseView  = this.ensureView(this.elseView, this.elseFactory, flags);\n    } else {\n      view = null;\n    }\n\n    return view;\n  }\n\n  /*@internal*/\n  public ensureView(view: IView, factory: IViewFactory, flags: LifecycleFlags): IView {\n    if (view === null) {\n      view = factory.create();\n    }\n\n    view.hold(this.location, flags);\n\n    return view;\n  }\n}\n\nexport interface Else extends ICustomAttribute {}\n\n@templateController('else')\n@inject(IViewFactory)\nexport class Else {\n  public static register: IRegistry['register'];\n\n  constructor(private factory: IViewFactory) { }\n\n  public link(ifBehavior: If): void {\n    ifBehavior.elseFactory = this.factory;\n  }\n}\n","import { inject, IRegistry } from '@aurelia/kernel';\nimport { ForOfStatement } from '../../binding/ast';\nimport { Binding } from '../../binding/binding';\nimport { BindingContext, Scope } from '../../binding/binding-context';\nimport { getCollectionObserver } from '../../binding/observer-locator';\nimport { SetterObserver } from '../../binding/property-observation';\nimport { INode, IRenderLocation } from '../../dom';\nimport { IRenderable, IView, IViewFactory, State } from '../../lifecycle';\nimport { CollectionObserver, IBatchedCollectionSubscriber, IObservedArray, IScope, LifecycleFlags, ObservedCollection } from '../../observation';\nimport { bindable } from '../bindable';\nimport { templateController } from '../custom-attribute';\nimport { ICustomAttribute } from '../lifecycle-render';\n\nexport interface Repeat<T extends ObservedCollection> extends ICustomAttribute, IBatchedCollectionSubscriber {}\n\n@inject(IRenderLocation, IRenderable, IViewFactory)\n@templateController('repeat')\nexport class Repeat<T extends ObservedCollection = IObservedArray> {\n  public static register: IRegistry['register'];\n\n  @bindable public items: T;\n\n  public $scope: IScope;\n  public $observers: { items: SetterObserver };\n\n  public encapsulationSource: INode = null;\n  public views: IView[] = [];\n  public observer: CollectionObserver = null;\n  public hasPendingInstanceMutation: boolean = false;\n\n  public forOf: ForOfStatement;\n  public local: string;\n\n  constructor(\n    public location: IRenderLocation,\n    public renderable: IRenderable,\n    public factory: IViewFactory) { }\n\n  public binding(flags: LifecycleFlags): void {\n    this.checkCollectionObserver();\n  }\n\n  public bound(flags: LifecycleFlags): void {\n    let current = this.renderable.$bindableHead;\n    while (current !== null) {\n      if ((<Binding>current).target === this && (<Binding>current).targetProperty === 'items') {\n        this.forOf = (<Binding>current).sourceExpression as ForOfStatement;\n        break;\n      }\n      current = current.$nextBind;\n    }\n    this.local = this.forOf.declaration.evaluate(flags, this.$scope, null);\n\n    this.processViews(null, flags);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    const { views, location } = this;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      const view = views[i];\n      view.hold(location, flags);\n      view.$attach(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    const { views } = this;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      const view = views[i];\n      view.$detach(flags);\n      view.release(flags);\n    }\n  }\n\n  public unbound(flags: LifecycleFlags): void {\n    this.checkCollectionObserver();\n\n    const { views } = this;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      const view = views[i];\n      view.$unbind(flags);\n    }\n  }\n\n  // called by SetterObserver (sync)\n  public itemsChanged(newValue: T, oldValue: T, flags: LifecycleFlags): void {\n    this.checkCollectionObserver();\n    this.processViews(null, flags | LifecycleFlags.updateTargetInstance);\n  }\n\n  // called by a CollectionObserver (async)\n  public handleBatchedChange(indexMap: number[] | null): void {\n    this.processViews(indexMap, LifecycleFlags.fromFlush | LifecycleFlags.updateTargetInstance);\n  }\n\n  // if the indexMap === null, it is an instance mutation, otherwise it's an items mutation\n  private processViews(indexMap: number[] | null, flags: LifecycleFlags): void {\n    const { views, $lifecycle } = this;\n    if (this.$state & State.isBound) {\n      const { local, $scope, factory, forOf, items } = this;\n      const oldLength = views.length;\n      const newLength = forOf.count(items);\n      if (oldLength < newLength) {\n        views.length = newLength;\n        for (let i = oldLength; i < newLength; ++i) {\n          views[i] = factory.create();\n        }\n      } else if (newLength < oldLength) {\n        $lifecycle.beginDetach();\n        for (let i = newLength, view = views[i]; i < oldLength; view = views[++i]) {\n          view.release(flags);\n          view.$detach(flags);\n        }\n        $lifecycle.endDetach(flags);\n        $lifecycle.beginUnbind();\n        for (let i = newLength, view = views[i]; i < oldLength; view = views[++i]) {\n          view.$unbind(flags);\n        }\n        $lifecycle.endUnbind(flags);\n        views.length = newLength;\n        if (newLength === 0) {\n          return;\n        }\n      } else if (newLength === 0) {\n        return;\n      }\n\n      $lifecycle.beginBind();\n      if (indexMap === null) {\n        forOf.iterate(items, (arr, i, item) => {\n          const view = views[i];\n          if (!!view.$scope && view.$scope.bindingContext[local] === item) {\n            view.$bind(flags, Scope.fromParent($scope, view.$scope.bindingContext));\n          } else {\n            view.$bind(flags, Scope.fromParent($scope, BindingContext.create(local, item)));\n          }\n        });\n      } else {\n        forOf.iterate(items, (arr, i, item) => {\n          const view = views[i];\n          if (indexMap[i] === i && !!view.$scope) {\n            view.$bind(flags, Scope.fromParent($scope, view.$scope.bindingContext));\n          } else {\n            view.$bind(flags, Scope.fromParent($scope, BindingContext.create(local, item)));\n          }\n        });\n      }\n      $lifecycle.endBind(flags);\n    }\n\n    if (this.$state & State.isAttached) {\n      const { location } = this;\n      $lifecycle.beginAttach();\n      if (indexMap === null) {\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n          const view = views[i];\n          view.hold(location, flags);\n          view.$attach(flags);\n        }\n      } else {\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n          if (indexMap[i] !== i) {\n            const view = views[i];\n            view.hold(location, flags);\n            view.$attach(flags);\n          }\n        }\n      }\n      $lifecycle.endAttach(flags);\n    }\n  }\n\n  private checkCollectionObserver(): void {\n    const oldObserver = this.observer;\n    if (this.$state & (State.isBound | State.isBinding)) {\n      const newObserver = this.observer = getCollectionObserver(this.$lifecycle, this.items);\n      if (oldObserver !== newObserver) {\n        if (oldObserver) {\n          oldObserver.unsubscribeBatched(this);\n        }\n      }\n      if (newObserver) {\n        newObserver.subscribeBatched(this);\n      }\n    } else if (oldObserver) {\n      oldObserver.unsubscribeBatched(this);\n    }\n  }\n}\n","import { inject, IRegistry } from '@aurelia/kernel';\nimport { IRenderLocation } from '../../dom';\nimport { IView, IViewFactory } from '../../lifecycle';\nimport { LifecycleFlags } from '../../observation';\nimport { templateController } from '../custom-attribute';\nimport { ICustomAttribute } from '../lifecycle-render';\n\nexport interface Replaceable extends ICustomAttribute {}\n@templateController('replaceable')\n@inject(IViewFactory, IRenderLocation)\nexport class Replaceable {\n  public static register: IRegistry['register'];\n\n  private currentView: IView;\n\n  constructor(private factory: IViewFactory, location: IRenderLocation) {\n    this.currentView = this.factory.create();\n    this.currentView.hold(location, LifecycleFlags.fromCreate);\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.currentView.$bind(flags, this.$scope);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.currentView.$attach(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.currentView.$detach(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.currentView.$unbind(flags);\n  }\n}\n","import { inject, IRegistry } from '@aurelia/kernel';\nimport { Scope } from '../../binding/binding-context';\nimport { IRenderLocation } from '../../dom';\nimport { IView, IViewFactory, State } from '../../lifecycle';\nimport { LifecycleFlags } from '../../observation';\nimport { bindable } from '../bindable';\nimport { templateController } from '../custom-attribute';\nimport { ICustomAttribute } from '../lifecycle-render';\n\nexport interface With extends ICustomAttribute {}\n@templateController('with')\n@inject(IViewFactory, IRenderLocation)\nexport class With {\n  public static register: IRegistry['register'];\n\n  @bindable public value: any = null;\n\n  private currentView: IView = null;\n\n  constructor(private factory: IViewFactory, location: IRenderLocation) {\n    this.currentView = this.factory.create();\n    this.currentView.hold(location, LifecycleFlags.fromCreate);\n  }\n\n  public valueChanged(this: With): void {\n    if (this.$state & State.isBound) {\n      this.bindChild(LifecycleFlags.fromBindableHandler);\n    }\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.bindChild(flags);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.currentView.$attach(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.currentView.$detach(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.currentView.$unbind(flags);\n  }\n\n  private bindChild(flags: LifecycleFlags): void {\n    const scope = Scope.fromParent(this.$scope, this.value);\n    this.currentView.$bind(flags, scope);\n  }\n}\n","import { DI, IContainer, IRegistry, PLATFORM, Registration } from '@aurelia/kernel';\nimport { LifecycleFlags } from './observation';\nimport { ICustomElement, IRenderingEngine } from './templating/lifecycle-render';\n\nexport interface ISinglePageApp {\n  host: any;\n  component: any;\n}\n\nexport class Aurelia {\n  private components: ICustomElement[] = [];\n  private startTasks: (() => void)[] = [];\n  private stopTasks: (() => void)[] = [];\n  private isStarted: boolean = false;\n  private _root: ICustomElement = null;\n\n  constructor(private container: IContainer = DI.createContainer()) {\n    Registration\n      .instance(Aurelia, this)\n      .register(container, Aurelia);\n  }\n\n  public register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): this {\n    this.container.register(...params);\n    return this;\n  }\n\n  public app(config: ISinglePageApp): this {\n    const component: ICustomElement = config.component;\n    const host = config.host;\n\n    const startTask = () => {\n      host.$au = this;\n      if (!this.components.includes(component)) {\n        this._root = component;\n        this.components.push(component);\n        const re = this.container.get(IRenderingEngine);\n        component.$hydrate(re, host);\n      }\n\n      component.$bind(LifecycleFlags.fromStartTask | LifecycleFlags.fromBind);\n      component.$attach(LifecycleFlags.fromStartTask, host);\n    };\n\n    this.startTasks.push(startTask);\n\n    this.stopTasks.push(() => {\n      component.$detach(LifecycleFlags.fromStopTask);\n      component.$unbind(LifecycleFlags.fromStopTask | LifecycleFlags.fromUnbind);\n      host.$au = null;\n    });\n\n    if (this.isStarted) {\n      startTask();\n    }\n\n    return this;\n  }\n\n  public root(): ICustomElement | null {\n    return this._root;\n  }\n\n  public start(): this {\n    for (const runStartTask of this.startTasks) {\n      runStartTask();\n    }\n    this.isStarted = true;\n    return this;\n  }\n\n  public stop(): this {\n    this.isStarted = false;\n    for (const runStopTask of this.stopTasks) {\n      runStopTask();\n    }\n    return this;\n  }\n}\n\n(<any>PLATFORM.global).Aurelia = Aurelia;\n","import { inject, IRegistry, IContainer } from '@aurelia/kernel';\nimport { Binding } from './binding/binding';\nimport { BindingMode } from './binding/binding-mode';\nimport { Call } from './binding/call';\nimport { IEventManager } from './binding/event-manager';\nimport { BindingType, IExpressionParser } from './binding/expression-parser';\nimport { InterpolationBinding, MultiInterpolationBinding } from './binding/interpolation-binding';\nimport { LetBinding } from './binding/let-binding';\nimport { Listener } from './binding/listener';\nimport { IObserverLocator } from './binding/observer-locator';\nimport { Ref } from './binding/ref';\nimport { customAttributeKey, customElementKey, ICallBindingInstruction, IHydrateAttributeInstruction, IHydrateElementInstruction, IHydrateTemplateController, IInterpolationInstruction, IIteratorBindingInstruction, ILetElementInstruction, IListenerBindingInstruction, IPropertyBindingInstruction, IRefBindingInstruction, ISetAttributeInstruction, ISetPropertyInstruction, IStylePropertyBindingInstruction, ITextBindingInstruction, TargetedInstructionType, TemplatePartDefinitions } from './definitions';\nimport { DOM, INode, IRemovableNode } from './dom';\nimport { IAttach, IAttachables, IBindables, IBindScope, IRenderable, IRenderContext } from './lifecycle';\nimport { ICustomAttribute, ICustomElement, IInstructionRenderer, instructionRenderer, IRenderer, IRenderingEngine } from './templating/lifecycle-render';\n\nexport function ensureExpression<TFrom>(parser: IExpressionParser, srcOrExpr: TFrom, bindingType: BindingType): Exclude<TFrom, string> {\n  if (typeof srcOrExpr === 'string') {\n    return <Exclude<TFrom, string>><unknown>parser.parse(srcOrExpr, bindingType);\n  }\n  return <Exclude<TFrom, string>>srcOrExpr;\n}\n\nexport function addBindable(renderable: IBindables, bindable: IBindScope): void {\n  bindable.$prevBind = renderable.$bindableTail;\n  bindable.$nextBind = null;\n  if (renderable.$bindableTail === null) {\n    renderable.$bindableHead = bindable;\n  } else {\n    renderable.$bindableTail.$nextBind = bindable;\n  }\n  renderable.$bindableTail = bindable;\n}\n\nexport function addAttachable(renderable: IAttachables, attachable: IAttach): void {\n  attachable.$prevAttach = renderable.$attachableTail;\n  attachable.$nextAttach = null;\n  if (renderable.$attachableTail === null) {\n    renderable.$attachableHead = attachable;\n  } else {\n    renderable.$attachableTail.$nextAttach = attachable;\n  }\n  renderable.$attachableTail = attachable;\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.textBinding)\n/*@internal*/\nexport class TextBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: ITextBindingInstruction): void {\n    const next = target.nextSibling;\n    DOM.treatAsNonWhitespace(next);\n    DOM.remove(target);\n    let bindable: MultiInterpolationBinding | InterpolationBinding;\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.Interpolation);\n    if (expr.isMulti) {\n      bindable = new MultiInterpolationBinding(this.observerLocator, expr, next, 'textContent', BindingMode.toView, context);\n    } else {\n      bindable = new InterpolationBinding(expr.firstExpression, expr, next, 'textContent', BindingMode.toView, this.observerLocator, context, true);\n    }\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.interpolation)\n/*@internal*/\nexport class InterpolationBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IInterpolationInstruction): void {\n    let bindable: MultiInterpolationBinding | InterpolationBinding;\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.Interpolation);\n    if (expr.isMulti) {\n      bindable = new MultiInterpolationBinding(this.observerLocator, expr, target, instruction.to, BindingMode.toView, context);\n    } else {\n      bindable = new InterpolationBinding(expr.firstExpression, expr, target, instruction.to, BindingMode.toView, this.observerLocator, context, true);\n    }\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.propertyBinding)\n/*@internal*/\nexport class PropertyBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IPropertyBindingInstruction): void {\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsPropertyCommand | instruction.mode);\n    const bindable = new Binding(expr, target, instruction.to, instruction.mode, this.observerLocator, context);\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.iteratorBinding)\n/*@internal*/\nexport class IteratorBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IIteratorBindingInstruction): void {\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.ForCommand);\n    const bindable = new Binding(expr, target, instruction.to, BindingMode.toView, this.observerLocator, context);\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser, IEventManager)\n@instructionRenderer(TargetedInstructionType.listenerBinding)\n/*@internal*/\nexport class ListenerBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private eventManager: IEventManager;\n\n  constructor(parser: IExpressionParser, eventManager: IEventManager) {\n    this.parser = parser;\n    this.eventManager = eventManager;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IListenerBindingInstruction): void {\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsEventCommand | (instruction.strategy + BindingType.DelegationStrategyDelta));\n    const bindable = new Listener(instruction.to, instruction.strategy, expr, target, instruction.preventDefault, this.eventManager, context);\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.callBinding)\n/*@internal*/\nexport class CallBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: ICallBindingInstruction): void {\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.CallCommand);\n    const bindable = new Call(expr, target, instruction.to, this.observerLocator, context);\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser)\n@instructionRenderer(TargetedInstructionType.refBinding)\n/*@internal*/\nexport class RefBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n\n  constructor(parser: IExpressionParser) {\n    this.parser = parser;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IRefBindingInstruction): void {\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsRef);\n    const bindable = new Ref(expr, target, context);\n    addBindable(renderable, bindable);\n  }\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.stylePropertyBinding)\n/*@internal*/\nexport class StylePropertyBindingRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IStylePropertyBindingInstruction): void {\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsPropertyCommand | BindingMode.toView);\n    const bindable = new Binding(expr, (<any>target).style, instruction.to, BindingMode.toView, this.observerLocator, context);\n    addBindable(renderable, bindable);\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.setProperty)\n/*@internal*/\nexport class SetPropertyRenderer implements IInstructionRenderer {\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: ISetPropertyInstruction): void {\n    target[instruction.to] = instruction.value;\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.setAttribute)\n/*@internal*/\nexport class SetAttributeRenderer implements IInstructionRenderer {\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: ISetAttributeInstruction): void {\n    DOM.setAttribute(target, instruction.to, instruction.value);\n  }\n}\n\n@inject(IRenderingEngine)\n@instructionRenderer(TargetedInstructionType.hydrateElement)\n/*@internal*/\nexport class CustomElementRenderer implements IInstructionRenderer {\n  private renderingEngine: IRenderingEngine;\n\n  constructor(renderingEngine: IRenderingEngine) {\n    this.renderingEngine = renderingEngine;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateElementInstruction): void {\n    const operation = context.beginComponentOperation(renderable, target, instruction, null, null, target, true);\n    const component = context.get<ICustomElement>(customElementKey(instruction.res));\n    const instructionRenderers = context.get(IRenderer).instructionRenderers;\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(this.renderingEngine, target, instruction);\n\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const current = childInstructions[i];\n      instructionRenderers[current.type].render(context, renderable, component, current);\n    }\n\n    addBindable(renderable, component);\n    addAttachable(renderable, component);\n\n    operation.dispose();\n  }\n}\n\n@inject(IRenderingEngine)\n@instructionRenderer(TargetedInstructionType.hydrateAttribute)\n/*@internal*/\nexport class CustomAttributeRenderer implements IInstructionRenderer {\n  private renderingEngine: IRenderingEngine;\n\n  constructor(renderingEngine: IRenderingEngine) {\n    this.renderingEngine = renderingEngine;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateAttributeInstruction): void {\n    const operation = context.beginComponentOperation(renderable, target, instruction);\n    const component = context.get<ICustomAttribute>(customAttributeKey(instruction.res));\n    const instructionRenderers = context.get(IRenderer).instructionRenderers;\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(this.renderingEngine);\n\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const current = childInstructions[i];\n      instructionRenderers[current.type].render(context, renderable, component, current);\n    }\n\n    addBindable(renderable, component);\n    addAttachable(renderable, component);\n\n    operation.dispose();\n  }\n}\n\n@inject(IRenderingEngine)\n@instructionRenderer(TargetedInstructionType.hydrateTemplateController)\n/*@internal*/\nexport class TemplateControllerRenderer implements IInstructionRenderer {\n  private renderingEngine: IRenderingEngine;\n\n  constructor(renderingEngine: IRenderingEngine) {\n    this.renderingEngine = renderingEngine;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateTemplateController, parts?: TemplatePartDefinitions): void {\n    const factory = this.renderingEngine.getViewFactory(instruction.def, context);\n    const operation = context.beginComponentOperation(renderable, target, instruction, factory, parts, DOM.convertToRenderLocation(target), false);\n    const component = context.get<ICustomAttribute>(customAttributeKey(instruction.res));\n    const instructionRenderers = context.get(IRenderer).instructionRenderers;\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(this.renderingEngine);\n\n    if (instruction.link) {\n      (component as any).link(renderable.$attachableTail);\n    }\n\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const current = childInstructions[i];\n      instructionRenderers[current.type].render(context, renderable, component, current);\n    }\n\n    addBindable(renderable, component);\n    addAttachable(renderable, component);\n\n    operation.dispose();\n  }\n}\n\n@inject(IExpressionParser, IObserverLocator)\n@instructionRenderer(TargetedInstructionType.letElement)\n/*@internal*/\nexport class LetElementRenderer implements IInstructionRenderer {\n  private parser: IExpressionParser;\n  private observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(context: IRenderContext, renderable: IRenderable, target: IRemovableNode, instruction: ILetElementInstruction): void {\n    target.remove();\n    const childInstructions = instruction.instructions;\n    const toViewModel = instruction.toViewModel;\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const childInstruction = childInstructions[i];\n      const expr = ensureExpression(this.parser, childInstruction.from, BindingType.IsPropertyCommand);\n      const bindable = new LetBinding(expr, childInstruction.to, this.observerLocator, context, toViewModel);\n      addBindable(renderable, bindable);\n    }\n  }\n}\n\nexport const HtmlRenderer = {\n  register(container: IContainer): void {\n    container.register(\n      <IRegistry><unknown>TextBindingRenderer,\n      <IRegistry><unknown>InterpolationBindingRenderer,\n      <IRegistry><unknown>PropertyBindingRenderer,\n      <IRegistry><unknown>IteratorBindingRenderer,\n      <IRegistry><unknown>ListenerBindingRenderer,\n      <IRegistry><unknown>CallBindingRenderer,\n      <IRegistry><unknown>RefBindingRenderer,\n      <IRegistry><unknown>StylePropertyBindingRenderer,\n      <IRegistry><unknown>SetPropertyRenderer,\n      <IRegistry><unknown>SetAttributeRenderer,\n      <IRegistry><unknown>CustomElementRenderer,\n      <IRegistry><unknown>CustomAttributeRenderer,\n      <IRegistry><unknown>TemplateControllerRenderer,\n      <IRegistry><unknown>LetElementRenderer\n    );\n  }\n};\n","import { ForOfStatement, Interpolation, IsBindingBehavior } from './binding/ast';\nimport { BindingMode } from './binding/binding-mode';\nimport { DelegationStrategy } from './binding/event-manager';\nimport { ICallBindingInstruction, IHydrateAttributeInstruction, IHydrateElementInstruction, IHydrateTemplateController, IInterpolationInstruction, IIteratorBindingInstruction, ILetBindingInstruction, ILetElementInstruction, IListenerBindingInstruction, IPropertyBindingInstruction, IRefBindingInstruction, ISetPropertyInstruction, IStylePropertyBindingInstruction, ITargetedInstruction, ITemplateDefinition, ITextBindingInstruction, TargetedInstruction, TargetedInstructionType } from './definitions';\nimport { INode } from './dom';\n\n// tslint:disable:no-reserved-keywords | TODO: get rid of this suppression and fix the error\n\nexport class TextBindingInstruction implements ITextBindingInstruction {\n  public type: TargetedInstructionType.textBinding = TargetedInstructionType.textBinding;\n  constructor(public from: string | Interpolation) {}\n}\nexport class InterpolationInstruction implements IInterpolationInstruction {\n  public type: TargetedInstructionType.interpolation = TargetedInstructionType.interpolation;\n  constructor(public from: string | Interpolation, public to: string) {}\n}\nexport class OneTimeBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding = TargetedInstructionType.propertyBinding;\n  public oneTime: true = true;\n  public mode: BindingMode.oneTime = BindingMode.oneTime;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class ToViewBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding = TargetedInstructionType.propertyBinding;\n  public oneTime: false = false;\n  public mode: BindingMode.toView = BindingMode.toView;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class FromViewBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding = TargetedInstructionType.propertyBinding;\n  public oneTime: false = false;\n  public mode: BindingMode.fromView = BindingMode.fromView;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class TwoWayBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding = TargetedInstructionType.propertyBinding;\n  public oneTime: false = false;\n  public mode: BindingMode.twoWay = BindingMode.twoWay;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class IteratorBindingInstruction implements IIteratorBindingInstruction {\n  public type: TargetedInstructionType.iteratorBinding = TargetedInstructionType.iteratorBinding;\n  constructor(public from: string | ForOfStatement, public to: string) {}\n}\nexport class TriggerBindingInstruction implements IListenerBindingInstruction {\n  public type: TargetedInstructionType.listenerBinding = TargetedInstructionType.listenerBinding;\n  public strategy: DelegationStrategy.none = DelegationStrategy.none;\n  public preventDefault: true = true;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class DelegateBindingInstruction implements IListenerBindingInstruction {\n  public type: TargetedInstructionType.listenerBinding = TargetedInstructionType.listenerBinding;\n  public strategy: DelegationStrategy.bubbling = DelegationStrategy.bubbling;\n  public preventDefault: false = false;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class CaptureBindingInstruction implements IListenerBindingInstruction {\n  public type: TargetedInstructionType.listenerBinding = TargetedInstructionType.listenerBinding;\n  public strategy: DelegationStrategy.capturing = DelegationStrategy.capturing;\n  public preventDefault: false = false;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class CallBindingInstruction implements ICallBindingInstruction {\n  public type: TargetedInstructionType.callBinding = TargetedInstructionType.callBinding;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class RefBindingInstruction implements IRefBindingInstruction {\n  public type: TargetedInstructionType.refBinding = TargetedInstructionType.refBinding;\n  constructor(public from: string | IsBindingBehavior) {}\n}\nexport class StylePropertyBindingInstruction implements IStylePropertyBindingInstruction {\n  public type: TargetedInstructionType.stylePropertyBinding = TargetedInstructionType.stylePropertyBinding;\n  constructor(public from: string | IsBindingBehavior, public to: string) {}\n}\nexport class SetPropertyInstruction implements ISetPropertyInstruction {\n  public type: TargetedInstructionType.setProperty = TargetedInstructionType.setProperty;\n  constructor(public value: unknown, public to: string) {}\n}\nexport class SetAttributeInstruction implements ITargetedInstruction {\n  public type: TargetedInstructionType.setAttribute = TargetedInstructionType.setAttribute;\n  constructor(public value: unknown, public to: string) {}\n}\nexport class HydrateElementInstruction implements IHydrateElementInstruction {\n  public type: TargetedInstructionType.hydrateElement = TargetedInstructionType.hydrateElement;\n  constructor(public res: string, public instructions: TargetedInstruction[], public parts?: Record<string, ITemplateDefinition>, public contentOverride?: INode) {}\n}\nexport class HydrateAttributeInstruction implements IHydrateAttributeInstruction {\n  public type: TargetedInstructionType.hydrateAttribute = TargetedInstructionType.hydrateAttribute;\n  constructor(public res: string, public instructions: TargetedInstruction[]) {}\n}\nexport class HydrateTemplateController implements IHydrateTemplateController {\n  public type: TargetedInstructionType.hydrateTemplateController = TargetedInstructionType.hydrateTemplateController;\n  constructor(public def: ITemplateDefinition, public res: string, public instructions: TargetedInstruction[], public link?: boolean) {}\n}\nexport class LetElementInstruction implements ILetElementInstruction {\n  public type: TargetedInstructionType.letElement = TargetedInstructionType.letElement;\n  constructor(public instructions: ILetBindingInstruction[], public toViewModel: boolean) {}\n}\nexport class LetBindingInstruction implements ILetBindingInstruction {\n  public type: TargetedInstructionType.letBinding = TargetedInstructionType.letBinding;\n  constructor(public from: string | IsBindingBehavior | Interpolation, public to: string) {}\n}\n"],"names":["dispose","register","all","oneTime","toView","fromView","flush","proto","nativeClear","nativeDelete","observeClear","observeDelete","toStringTag","childObserverOptions","tslib_1.__decorate"],"mappings":"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"}